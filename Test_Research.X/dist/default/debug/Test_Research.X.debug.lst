

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 31 19:55:40 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67   000000                     
    68                           ; Generated 06/04/2022 GMT
    69                           ; 
    70                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F46K22 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102   000000                     _RCREG1	set	4014
   103   000000                     _TXREG1	set	4013
   104   000000                     _TXSTA1	set	4012
   105   000000                     _RC1IF	set	31989
   106   000000                     _TX1IF	set	31988
   107   000000                     _LATE0	set	31848
   108   000000                     _LATE1	set	31849
   109   000000                     _PEIE	set	32662
   110   000000                     _ANSELC	set	3898
   111   000000                     _OSCCON	set	4051
   112   000000                     _GIE	set	32663
   113   000000                     _LATCbits	set	3979
   114   000000                     _TRISCbits	set	3988
   115   000000                     _ANSELE	set	3900
   116   000000                     _ANSELD	set	3899
   117   000000                     _RCSTA1	set	4011
   118   000000                     _SPBRG1	set	4015
   119   000000                     _TRISE	set	3990
   120   000000                     _TRISD	set	3989
   121   000000                     _RCIE	set	31981
   122   000000                     _LATE	set	3981
   123   000000                     _LATD	set	3980
   124   000000                     _RCIF	set	31989
   125                           
   126                           	psect	smallconst
   127   001000                     __psmallconst:
   128                           	callstack 0
   129   001000  00                 	db	0
   130   001001                     STR_1:
   131   001001  45                 	db	69	;'E'
   132   001002  6E                 	db	110	;'n'
   133   001003  76                 	db	118	;'v'
   134   001004  69                 	db	105	;'i'
   135   001005  61                 	db	97	;'a'
   136   001006  72                 	db	114	;'r'
   137   001007  20                 	db	32
   138   001008  63                 	db	99	;'c'
   139   001009  6F                 	db	111	;'o'
   140   00100A  6F                 	db	111	;'o'
   141   00100B  72                 	db	114	;'r'
   142   00100C  64                 	db	100	;'d'
   143   00100D  65                 	db	101	;'e'
   144   00100E  6E                 	db	110	;'n'
   145   00100F  61                 	db	97	;'a'
   146   001010  64                 	db	100	;'d'
   147   001011  61                 	db	97	;'a'
   148   001012  73                 	db	115	;'s'
   149   001013  20                 	db	32
   150   001014  69                 	db	105	;'i'
   151   001015  6E                 	db	110	;'n'
   152   001016  69                 	db	105	;'i'
   153   001017  63                 	db	99	;'c'
   154   001018  69                 	db	105	;'i'
   155   001019  61                 	db	97	;'a'
   156   00101A  6C                 	db	108	;'l'
   157   00101B  65                 	db	101	;'e'
   158   00101C  73                 	db	115	;'s'
   159   00101D  3A                 	db	58	;':'
   160   00101E  20                 	db	32
   161   00101F  00                 	db	0
   162   001020                     STR_6:
   163   001020  45                 	db	69	;'E'
   164   001021  6E                 	db	110	;'n'
   165   001022  76                 	db	118	;'v'
   166   001023  69                 	db	105	;'i'
   167   001024  61                 	db	97	;'a'
   168   001025  72                 	db	114	;'r'
   169   001026  20                 	db	32
   170   001027  63                 	db	99	;'c'
   171   001028  6F                 	db	111	;'o'
   172   001029  6F                 	db	111	;'o'
   173   00102A  72                 	db	114	;'r'
   174   00102B  64                 	db	100	;'d'
   175   00102C  65                 	db	101	;'e'
   176   00102D  6E                 	db	110	;'n'
   177   00102E  61                 	db	97	;'a'
   178   00102F  64                 	db	100	;'d'
   179   001030  61                 	db	97	;'a'
   180   001031  73                 	db	115	;'s'
   181   001032  20                 	db	32
   182   001033  66                 	db	102	;'f'
   183   001034  69                 	db	105	;'i'
   184   001035  6E                 	db	110	;'n'
   185   001036  61                 	db	97	;'a'
   186   001037  6C                 	db	108	;'l'
   187   001038  65                 	db	101	;'e'
   188   001039  73                 	db	115	;'s'
   189   00103A  3A                 	db	58	;':'
   190   00103B  20                 	db	32
   191   00103C  00                 	db	0
   192   00103D                     STR_5:
   193   00103D  43                 	db	67	;'C'
   194   00103E  6F                 	db	111	;'o'
   195   00103F  6F                 	db	111	;'o'
   196   001040  72                 	db	114	;'r'
   197   001041  64                 	db	100	;'d'
   198   001042  2E                 	db	46
   199   001043  20                 	db	32
   200   001044  69                 	db	105	;'i'
   201   001045  6E                 	db	110	;'n'
   202   001046  69                 	db	105	;'i'
   203   001047  63                 	db	99	;'c'
   204   001048  69                 	db	105	;'i'
   205   001049  61                 	db	97	;'a'
   206   00104A  6C                 	db	108	;'l'
   207   00104B  65                 	db	101	;'e'
   208   00104C  73                 	db	115	;'s'
   209   00104D  3A                 	db	58	;':'
   210   00104E  20                 	db	32
   211   00104F  25                 	db	37
   212   001050  2E                 	db	46
   213   001051  32                 	db	50	;'2'
   214   001052  66                 	db	102	;'f'
   215   001053  2C                 	db	44
   216   001054  25                 	db	37
   217   001055  2E                 	db	46
   218   001056  32                 	db	50	;'2'
   219   001057  66                 	db	102	;'f'
   220   001058  00                 	db	0
   221   001059                     STR_10:
   222   001059  43                 	db	67	;'C'
   223   00105A  6F                 	db	111	;'o'
   224   00105B  6F                 	db	111	;'o'
   225   00105C  72                 	db	114	;'r'
   226   00105D  64                 	db	100	;'d'
   227   00105E  2E                 	db	46
   228   00105F  20                 	db	32
   229   001060  66                 	db	102	;'f'
   230   001061  69                 	db	105	;'i'
   231   001062  6E                 	db	110	;'n'
   232   001063  61                 	db	97	;'a'
   233   001064  6C                 	db	108	;'l'
   234   001065  65                 	db	101	;'e'
   235   001066  73                 	db	115	;'s'
   236   001067  3A                 	db	58	;':'
   237   001068  20                 	db	32
   238   001069  25                 	db	37
   239   00106A  2E                 	db	46
   240   00106B  32                 	db	50	;'2'
   241   00106C  66                 	db	102	;'f'
   242   00106D  2C                 	db	44
   243   00106E  25                 	db	37
   244   00106F  2E                 	db	46
   245   001070  32                 	db	50	;'2'
   246   001071  66                 	db	102	;'f'
   247   001072  00                 	db	0
   248   001073                     STR_11:
   249   001073  45                 	db	69	;'E'
   250   001074  6E                 	db	110	;'n'
   251   001075  76                 	db	118	;'v'
   252   001076  69                 	db	105	;'i'
   253   001077  61                 	db	97	;'a'
   254   001078  72                 	db	114	;'r'
   255   001079  20                 	db	32
   256   00107A  63                 	db	99	;'c'
   257   00107B  6F                 	db	111	;'o'
   258   00107C  6F                 	db	111	;'o'
   259   00107D  72                 	db	114	;'r'
   260   00107E  64                 	db	100	;'d'
   261   00107F  65                 	db	101	;'e'
   262   001080  6E                 	db	110	;'n'
   263   001081  61                 	db	97	;'a'
   264   001082  64                 	db	100	;'d'
   265   001083  61                 	db	97	;'a'
   266   001084  73                 	db	115	;'s'
   267   001085  3A                 	db	58	;':'
   268   001086  00                 	db	0
   269   001087                     STR_19:
   270   001087  49                 	db	73	;'I'
   271   001088  4E                 	db	78	;'N'
   272   001089  46                 	db	70	;'F'
   273   00108A  49                 	db	73	;'I'
   274   00108B  4E                 	db	78	;'N'
   275   00108C  49                 	db	73	;'I'
   276   00108D  54                 	db	84	;'T'
   277   00108E  59                 	db	89	;'Y'
   278   00108F  00                 	db	0
   279   001090                     STR_18:
   280   001090  69                 	db	105	;'i'
   281   001091  6E                 	db	110	;'n'
   282   001092  66                 	db	102	;'f'
   283   001093  69                 	db	105	;'i'
   284   001094  6E                 	db	110	;'n'
   285   001095  69                 	db	105	;'i'
   286   001096  74                 	db	116	;'t'
   287   001097  79                 	db	121	;'y'
   288   001098  00                 	db	0
   289   001099                     STR_24:
   290   001099  4E                 	db	78	;'N'
   291   00109A  41                 	db	65	;'A'
   292   00109B  4E                 	db	78	;'N'
   293   00109C  00                 	db	0
   294   00109D                     STR_12:
   295   00109D  69                 	db	105	;'i'
   296   00109E  6E                 	db	110	;'n'
   297   00109F  66                 	db	102	;'f'
   298   0010A0  00                 	db	0
   299   0010A1                     STR_15:
   300   0010A1  6E                 	db	110	;'n'
   301   0010A2  61                 	db	97	;'a'
   302   0010A3  6E                 	db	110	;'n'
   303   0010A4  00                 	db	0
   304   0010A5                     STR_3:
   305   0010A5  2C                 	db	44
   306   0010A6  00                 	db	0
   307   0010A7  00                 	db	0	; dummy byte at the end
   308   000000                     
   309                           ; #config settings
   310                           
   311                           	psect	cinit
   312   004EA8                     __pcinit:
   313                           	callstack 0
   314   004EA8                     start_initialization:
   315                           	callstack 0
   316   004EA8                     __initialization:
   317                           	callstack 0
   318                           
   319                           ; Clear objects allocated to BANK1 (97 bytes)
   320   004EA8  EE01  F000         	lfsr	0,__pbssBANK1
   321   004EAC  0E61               	movlw	97
   322   004EAE                     clear_0:
   323   004EAE  6AEE               	clrf	postinc0,c
   324   004EB0  06E8               	decf	wreg,f,c
   325   004EB2  E1FD               	bnz	clear_0
   326                           
   327                           ; Clear objects allocated to BANK0 (1 bytes)
   328   004EB4  0100               	movlb	0
   329   004EB6  6BB9               	clrf	__pbssBANK0& (0+255),b
   330                           
   331                           ; Clear objects allocated to COMRAM (16 bytes)
   332   004EB8  EE00  F045         	lfsr	0,__pbssCOMRAM
   333   004EBC  0E10               	movlw	16
   334   004EBE                     clear_1:
   335   004EBE  6AEE               	clrf	postinc0,c
   336   004EC0  06E8               	decf	wreg,f,c
   337   004EC2  E1FD               	bnz	clear_1
   338   004EC4                     end_of_initialization:
   339                           	callstack 0
   340   004EC4                     __end_of__initialization:
   341                           	callstack 0
   342   004EC4  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   343   004EC6  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   344   004EC8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   345   004ECA  6EF8               	movwf	tblptru,c
   346   004ECC  0100               	movlb	0
   347   004ECE  EF1A  F01A         	goto	_main	;jump to C main() function
   348                           
   349                           	psect	bssCOMRAM
   350   000045                     __pbssCOMRAM:
   351                           	callstack 0
   352   000045                     floorf@F526:
   353                           	callstack 0
   354   000045                     	ds	4
   355   000049                     ___fpclassifyf@F465:
   356                           	callstack 0
   357   000049                     	ds	4
   358   00004D                     strtok@p:
   359                           	callstack 0
   360   00004D                     	ds	2
   361   00004F                     _errno:
   362                           	callstack 0
   363   00004F                     	ds	2
   364   000051                     _width:
   365                           	callstack 0
   366   000051                     	ds	2
   367   000053                     _prec:
   368                           	callstack 0
   369   000053                     	ds	2
   370                           
   371                           	psect	bssBANK0
   372   0000B9                     __pbssBANK0:
   373                           	callstack 0
   374   0000B9                     _flags:
   375                           	callstack 0
   376   0000B9                     	ds	1
   377                           
   378                           	psect	bssBANK1
   379   000100                     __pbssBANK1:
   380                           	callstack 0
   381   000100                     _finalY:
   382                           	callstack 0
   383   000100                     	ds	4
   384   000104                     _finalX:
   385                           	callstack 0
   386   000104                     	ds	4
   387   000108                     _initialY:
   388                           	callstack 0
   389   000108                     	ds	4
   390   00010C                     _initialX:
   391                           	callstack 0
   392   00010C                     	ds	4
   393   000110                     _mode:
   394                           	callstack 0
   395   000110                     	ds	1
   396   000111                     _dbuf:
   397                           	callstack 0
   398   000111                     	ds	80
   399                           
   400                           	psect	cstackBANK1
   401   000161                     __pcstackBANK1:
   402                           	callstack 0
   403   000161                     main@buffer:
   404                           	callstack 0
   405                           
   406                           ; 20 bytes @ 0x0
   407   000161                     	ds	20
   408   000175                     main@lcdBuffer:
   409                           	callstack 0
   410                           
   411                           ; 20 bytes @ 0x14
   412   000175                     	ds	20
   413   000189                     main@bufferInicial:
   414                           	callstack 0
   415                           
   416                           ; 20 bytes @ 0x28
   417   000189                     	ds	20
   418   00019D                     main@bufferFinal:
   419                           	callstack 0
   420                           
   421                           ; 20 bytes @ 0x3C
   422   00019D                     	ds	20
   423   0001B1                     main@coordX:
   424                           	callstack 0
   425                           
   426                           ; 4 bytes @ 0x50
   427   0001B1                     	ds	4
   428   0001B5                     main@coordY:
   429                           	callstack 0
   430                           
   431                           ; 4 bytes @ 0x54
   432   0001B5                     	ds	4
   433   0001B9                     main@index:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x58
   437   0001B9                     	ds	2
   438   0001BB                     main@receivedChar:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x5A
   442   0001BB                     	ds	1
   443   0001BC                     main@token:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x5B
   447   0001BC                     	ds	2
   448                           
   449                           	psect	cstackBANK0
   450   000060                     __pcstackBANK0:
   451                           	callstack 0
   452   000060                     strtof@xpos:
   453                           	callstack 0
   454   000060                     efgtoa@ne:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x0
   458   000060                     	ds	1
   459   000061                     strtof@dpos:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x1
   463   000061                     	ds	1
   464   000062                     efgtoa@p:
   465                           	callstack 0
   466   000062                     strtof@err:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x2
   470   000062                     	ds	2
   471   000064                     strtof@digit:
   472                           	callstack 0
   473   000064                     efgtoa@t:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x4
   477   000064                     	ds	1
   478   000065                     strtof@flags:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x5
   482   000065                     	ds	1
   483   000066                     _efgtoa$804:
   484                           	callstack 0
   485   000066                     strtof@expon:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x6
   489   000066                     	ds	2
   490   000068                     efgtoa@pp:
   491                           	callstack 0
   492   000068                     strtof@eexp:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x8
   496   000068                     	ds	1
   497   000069                     efgtoa@mode:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x9
   501   000069                     	ds	1
   502   00006A                     efgtoa@nmode:
   503                           	callstack 0
   504   00006A                     strtof@_u:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0xA
   508   00006A                     	ds	1
   509   00006B                     efgtoa@d:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0xB
   513   00006B                     	ds	2
   514   00006D                     efgtoa@m:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0xD
   518   00006D                     	ds	1
   519   00006E                     strtof@i:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0xE
   523   00006E                     	ds	1
   524   00006F                     efgtoa@e:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0xF
   528   00006F                     	ds	2
   529   000071                     efgtoa@w:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x11
   533   000071                     	ds	2
   534   000073                     efgtoa@ou:
   535                           	callstack 0
   536                           
   537                           ; 4 bytes @ 0x13
   538   000073                     	ds	4
   539   000077                     efgtoa@i:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x17
   543   000077                     	ds	2
   544   000079                     efgtoa@h:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x19
   548   000079                     	ds	4
   549   00007D                     efgtoa@l:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x1D
   553   00007D                     	ds	4
   554   000081                     efgtoa@sign:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x21
   558   000081                     	ds	1
   559   000082                     efgtoa@g:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x22
   563   000082                     	ds	4
   564   000086                     efgtoa@n:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x26
   568   000086                     	ds	2
   569   000088                     efgtoa@u:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0x28
   573   000088                     	ds	4
   574   00008C                     vfpfcnvrt@fp:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x2C
   578   00008C                     	ds	2
   579   00008E                     vfpfcnvrt@fmt:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x2E
   583   00008E                     	ds	2
   584   000090                     vfpfcnvrt@ap:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x30
   588   000090                     	ds	2
   589   000092                     vfpfcnvrt@convarg:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x32
   593   000092                     	ds	4
   594   000096                     vfpfcnvrt@c:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x36
   598   000096                     	ds	1
   599   000097                     vfpfcnvrt@cp:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x37
   603   000097                     	ds	2
   604   000099                     ?_vfprintf:
   605                           	callstack 0
   606   000099                     vfprintf@fp:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x39
   610   000099                     	ds	2
   611   00009B                     vfprintf@fmt:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x3B
   615   00009B                     	ds	2
   616   00009D                     vfprintf@ap:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x3D
   620   00009D                     	ds	2
   621   00009F                     ?_sprintf:
   622                           	callstack 0
   623   00009F                     sprintf@s:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x3F
   627   00009F                     	ds	2
   628   0000A1                     sprintf@fmt:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x41
   632   0000A1                     	ds	10
   633   0000AB                     sprintf@ap:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x4B
   637   0000AB                     	ds	2
   638   0000AD                     sprintf@f:
   639                           	callstack 0
   640                           
   641                           ; 12 bytes @ 0x4D
   642   0000AD                     	ds	12
   643                           
   644                           	psect	cstackCOMRAM
   645   000001                     __pcstackCOMRAM:
   646                           	callstack 0
   647   000001                     i2LCD@data:
   648                           	callstack 0
   649   000001                     i2UART1_Write_Char@data:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x0
   653   000001                     	ds	1
   654   000002                     WriteLCD@word:
   655                           	callstack 0
   656   000002                     i2SettingsLCD@word:
   657                           	callstack 0
   658   000002                     i2UART1_Write_String@text:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x1
   662   000002                     	ds	2
   663   000004                     ??_RXTX:
   664   000004                     
   665                           ; 1 bytes @ 0x3
   666   000004                     	ds	6
   667   00000A                     RXTX@receivedChar:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x9
   671   00000A                     	ds	1
   672   00000B                     ?___fpclassifyf:
   673                           	callstack 0
   674   00000B                     ?_isspace:
   675                           	callstack 0
   676   00000B                     ?_isdigit:
   677                           	callstack 0
   678   00000B                     ?_strchr:
   679                           	callstack 0
   680   00000B                     ?_islower:
   681                           	callstack 0
   682   00000B                     ?___wmul:
   683                           	callstack 0
   684   00000B                     ?___fladd:
   685                           	callstack 0
   686   00000B                     ?___fldiv:
   687                           	callstack 0
   688   00000B                     ?___flmul:
   689                           	callstack 0
   690   00000B                     ?_labs:
   691                           	callstack 0
   692   00000B                     ?_nanf:
   693                           	callstack 0
   694   00000B                     ?___lmul:
   695                           	callstack 0
   696   00000B                     ?___flneg:
   697                           	callstack 0
   698   00000B                     ?___fltol:
   699                           	callstack 0
   700   00000B                     ?___xxtofl:
   701                           	callstack 0
   702   00000B                     LCD@data:
   703                           	callstack 0
   704   00000B                     UART1_Write_Char@data:
   705                           	callstack 0
   706   00000B                     ___wmul@multiplier:
   707                           	callstack 0
   708   00000B                     memcpy@d1:
   709                           	callstack 0
   710   00000B                     fputc@c:
   711                           	callstack 0
   712   00000B                     strcpy@dest:
   713                           	callstack 0
   714   00000B                     isdigit@c:
   715                           	callstack 0
   716   00000B                     isspace@c:
   717                           	callstack 0
   718   00000B                     nanf@s:
   719                           	callstack 0
   720   00000B                     strchr@s:
   721                           	callstack 0
   722   00000B                     islower@c:
   723                           	callstack 0
   724   00000B                     ___lmul@multiplier:
   725                           	callstack 0
   726   00000B                     ___fleq@ff1:
   727                           	callstack 0
   728   00000B                     ___flneg@f1:
   729                           	callstack 0
   730   00000B                     ___fltol@f1:
   731                           	callstack 0
   732   00000B                     ___fladd@b:
   733                           	callstack 0
   734   00000B                     ___fldiv@b:
   735                           	callstack 0
   736   00000B                     ___flmul@b:
   737                           	callstack 0
   738   00000B                     ___xxtofl@val:
   739                           	callstack 0
   740   00000B                     ___fpclassifyf@x:
   741                           	callstack 0
   742   00000B                     labs@a:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0xA
   746   00000B                     	ds	1
   747   00000C                     SettingsLCD@word:
   748                           	callstack 0
   749   00000C                     UART1_Write_String@text:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0xB
   753   00000C                     	ds	1
   754   00000D                     ??_isspace:
   755   00000D                     ??_isdigit:
   756   00000D                     ??_islower:
   757   00000D                     ___wmul@multiplicand:
   758                           	callstack 0
   759   00000D                     memcpy@s1:
   760                           	callstack 0
   761   00000D                     fputc@fp:
   762                           	callstack 0
   763   00000D                     strcpy@src:
   764                           	callstack 0
   765   00000D                     strchr@c:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0xC
   769   00000D                     	ds	1
   770   00000E                     
   771                           ; 1 bytes @ 0xD
   772   00000E                     	ds	1
   773   00000F                     ??_fputc:
   774   00000F                     ??___fpclassifyf:
   775   00000F                     ??_labs:
   776   00000F                     ??___fltol:
   777   00000F                     ??___xxtofl:
   778   00000F                     ?_isxdigit:
   779                           	callstack 0
   780   00000F                     ?_toupper:
   781                           	callstack 0
   782   00000F                     ?_strspn:
   783                           	callstack 0
   784   00000F                     ?_strcspn:
   785                           	callstack 0
   786   00000F                     _isspace$1002:
   787                           	callstack 0
   788   00000F                     ___wmul@product:
   789                           	callstack 0
   790   00000F                     memcpy@n:
   791                           	callstack 0
   792   00000F                     strcpy@s:
   793                           	callstack 0
   794   00000F                     isxdigit@c:
   795                           	callstack 0
   796   00000F                     strcspn@s:
   797                           	callstack 0
   798   00000F                     strspn@s:
   799                           	callstack 0
   800   00000F                     toupper@c:
   801                           	callstack 0
   802   00000F                     ___lmul@multiplicand:
   803                           	callstack 0
   804   00000F                     ___fleq@ff2:
   805                           	callstack 0
   806   00000F                     ___fladd@a:
   807                           	callstack 0
   808   00000F                     ___fldiv@a:
   809                           	callstack 0
   810   00000F                     ___flmul@a:
   811                           	callstack 0
   812   00000F                     nanf@u:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0xE
   816   00000F                     	ds	2
   817   000011                     ??_isxdigit:
   818   000011                     ??_toupper:
   819   000011                     ?_read_prec_or_width:
   820                           	callstack 0
   821   000011                     memcpy@tmp:
   822                           	callstack 0
   823   000011                     read_prec_or_width@fmt:
   824                           	callstack 0
   825   000011                     strcpy@d:
   826                           	callstack 0
   827   000011                     strcspn@c:
   828                           	callstack 0
   829   000011                     strspn@c:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x10
   833   000011                     	ds	1
   834   000012                     memcpy@d:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x11
   838   000012                     	ds	1
   839   000013                     ??___fladd:
   840   000013                     ??___fldiv:
   841   000013                     ??___flmul:
   842   000013                     ??_strspn:
   843   000013                     ??_strcspn:
   844   000013                     ??___fleq:
   845   000013                     ___fltol@sign1:
   846                           	callstack 0
   847   000013                     ___xxtofl@sign:
   848                           	callstack 0
   849   000013                     read_prec_or_width@ap:
   850                           	callstack 0
   851   000013                     ___fpclassifyf@e:
   852                           	callstack 0
   853   000013                     ___lmul@product:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x12
   857   000013                     	ds	1
   858   000014                     ___fltol@exp1:
   859                           	callstack 0
   860   000014                     ___xxtofl@exp:
   861                           	callstack 0
   862   000014                     memcpy@s:
   863                           	callstack 0
   864   000014                     fputs@s:
   865                           	callstack 0
   866   000014                     strcspn@i:
   867                           	callstack 0
   868   000014                     strspn@i:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x13
   872   000014                     	ds	1
   873   000015                     ??_read_prec_or_width:
   874   000015                     _isxdigit$1014:
   875                           	callstack 0
   876   000015                     ___xxtofl@arg:
   877                           	callstack 0
   878   000015                     ___fpclassifyf@u:
   879                           	callstack 0
   880                           
   881                           ; 4 bytes @ 0x14
   882   000015                     	ds	1
   883   000016                     ?_strtok:
   884                           	callstack 0
   885   000016                     fputs@fp:
   886                           	callstack 0
   887   000016                     strtok@s:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x15
   891   000016                     	ds	1
   892   000017                     ___fladd@signs:
   893                           	callstack 0
   894   000017                     ___flmul@sign:
   895                           	callstack 0
   896   000017                     read_prec_or_width@c:
   897                           	callstack 0
   898   000017                     ___fldiv@rem:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x16
   902   000017                     	ds	1
   903   000018                     ___fladd@aexp:
   904                           	callstack 0
   905   000018                     ___flmul@aexp:
   906                           	callstack 0
   907   000018                     fputs@c:
   908                           	callstack 0
   909   000018                     read_prec_or_width@n:
   910                           	callstack 0
   911   000018                     strtok@sep:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x17
   915   000018                     	ds	1
   916   000019                     ___fladd@bexp:
   917                           	callstack 0
   918   000019                     fputs@i:
   919                           	callstack 0
   920   000019                     ___flmul@grs:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x18
   924   000019                     	ds	1
   925   00001A                     ___fladd@grs:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x19
   929   00001A                     	ds	1
   930   00001B                     ___fldiv@sign:
   931                           	callstack 0
   932   00001B                     pad@fp:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x1A
   936   00001B                     	ds	1
   937   00001C                     ___fldiv@new_exp:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x1B
   941   00001C                     	ds	1
   942   00001D                     ___flmul@bexp:
   943                           	callstack 0
   944   00001D                     pad@buf:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x1C
   948   00001D                     	ds	1
   949   00001E                     ___fldiv@grs:
   950                           	callstack 0
   951   00001E                     ___flmul@prod:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x1D
   955   00001E                     	ds	1
   956   00001F                     pad@p:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x1E
   960   00001F                     	ds	2
   961   000021                     ??_pad:
   962                           
   963                           ; 1 bytes @ 0x20
   964   000021                     	ds	1
   965   000022                     ___fldiv@bexp:
   966                           	callstack 0
   967   000022                     ___flmul@temp:
   968                           	callstack 0
   969   000022                     pad@i:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x21
   973   000022                     	ds	1
   974   000023                     ___fldiv@aexp:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0x22
   978   000023                     	ds	1
   979   000024                     ?___flsub:
   980                           	callstack 0
   981   000024                     ?_floorf:
   982                           	callstack 0
   983   000024                     pad@w:
   984                           	callstack 0
   985   000024                     ___flge@ff1:
   986                           	callstack 0
   987   000024                     ___flsub@b:
   988                           	callstack 0
   989   000024                     floorf@x:
   990                           	callstack 0
   991                           
   992                           ; 4 bytes @ 0x23
   993   000024                     	ds	4
   994   000028                     ??_floorf:
   995   000028                     ___flge@ff2:
   996                           	callstack 0
   997   000028                     ___flsub@a:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x27
  1001   000028                     	ds	4
  1002   00002C                     ??___flge:
  1003                           
  1004                           ; 1 bytes @ 0x2B
  1005   00002C                     	ds	2
  1006   00002E                     floorf@m:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x2D
  1010   00002E                     	ds	2
  1011   000030                     ?_strtof:
  1012                           	callstack 0
  1013   000030                     strtof@s:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x2F
  1017   000030                     	ds	2
  1018   000032                     floorf@e:
  1019                           	callstack 0
  1020   000032                     strtof@res:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x31
  1024   000032                     	ds	2
  1025   000034                     ??_strtof:
  1026   000034                     floorf@u:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x33
  1030   000034                     	ds	4
  1031   000038                     efgtoa@fp:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x37
  1035   000038                     	ds	2
  1036   00003A                     efgtoa@f:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x39
  1040   00003A                     	ds	4
  1041   00003E                     efgtoa@c:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x3D
  1045   00003E                     	ds	1
  1046   00003F                     ??_efgtoa:
  1047                           
  1048                           ; 1 bytes @ 0x3E
  1049   00003F                     	ds	2
  1050   000041                     ??_vfpfcnvrt:
  1051                           
  1052                           ; 1 bytes @ 0x40
  1053   000041                     	ds	2
  1054   000043                     vfprintf@cfmt:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x42
  1058   000043                     	ds	2
  1059   000045                     
  1060                           ; 1 bytes @ 0x44
  1061 ;;
  1062 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1063 ;;
  1064 ;; *************** function _main *****************
  1065 ;; Defined at:
  1066 ;;		line 81 in file "main.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  bufferFinal    20   60[BANK1 ] unsigned char [20]
  1071 ;;  bufferInicia   20   40[BANK1 ] unsigned char [20]
  1072 ;;  lcdBuffer      20   20[BANK1 ] unsigned char [20]
  1073 ;;  buffer         20    0[BANK1 ] unsigned char [20]
  1074 ;;  coordY          4   84[BANK1 ] float 
  1075 ;;  coordX          4   80[BANK1 ] float 
  1076 ;;  token           2   91[BANK1 ] PTR unsigned char 
  1077 ;;		 -> main@bufferFinal(20), NULL(0), main@bufferInicial(20), 
  1078 ;;  index           2   88[BANK1 ] int 
  1079 ;;  receivedChar    1   90[BANK1 ] unsigned char 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Locals:         0       0      93       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Totals:         0       0      93       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;Total ram usage:       93 bytes
  1094 ;; Hardware stack levels required when called: 11
  1095 ;; This function calls:
  1096 ;;		_SettingsLCD
  1097 ;;		_UART1_Read_Char
  1098 ;;		_UART1_Write_Char
  1099 ;;		_UART1_Write_String
  1100 ;;		_settings
  1101 ;;		_sprintf
  1102 ;;		_strtof
  1103 ;;		_strtok
  1104 ;; This function is called by:
  1105 ;;		Startup code after reset
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text0
  1110   003434                     __ptext0:
  1111                           	callstack 0
  1112   003434                     _main:
  1113                           	callstack 20
  1114   003434                     
  1115                           ;main.c: 82:     settings();
  1116   003434  EC97  F025         	call	_settings	;wreg free
  1117   003438  EF22  F01A         	goto	l6574
  1118   00343C                     l6572:
  1119                           
  1120                           ; BSR set to: 1
  1121                           ;main.c: 88:             mode = UART1_Read_Char();
  1122   00343C  ECB1  F027         	call	_UART1_Read_Char	;wreg free
  1123   003440  0101               	movlb	1	; () banked
  1124   003442  6F10               	movwf	_mode& (0+255),b
  1125   003444                     l6574:
  1126                           
  1127                           ;main.c: 86:         while (mode != 'S' && mode != 's') {
  1128   003444  0E53               	movlw	83
  1129   003446  0101               	movlb	1	; () banked
  1130   003448  1910               	xorwf	_mode& (0+255),w,b
  1131   00344A  B4D8               	btfsc	status,2,c
  1132   00344C  EF2A  F01A         	goto	u9051
  1133   003450  EF2C  F01A         	goto	u9050
  1134   003454                     u9051:
  1135   003454  EF35  F01A         	goto	l6578
  1136   003458                     u9050:
  1137   003458                     
  1138                           ; BSR set to: 1
  1139   003458  0E73               	movlw	115
  1140   00345A  1910               	xorwf	_mode& (0+255),w,b
  1141   00345C  A4D8               	btfss	status,2,c
  1142   00345E  EF33  F01A         	goto	u9061
  1143   003462  EF35  F01A         	goto	u9060
  1144   003466                     u9061:
  1145   003466  EF1E  F01A         	goto	l6572
  1146   00346A                     u9060:
  1147   00346A                     l6578:
  1148                           
  1149                           ; BSR set to: 1
  1150                           ;main.c: 92:         UART1_Write_String("Enviar coordenadas iniciales: ");
  1151   00346A  0E01               	movlw	low STR_1
  1152   00346C  6E0C               	movwf	UART1_Write_String@text^0,c
  1153   00346E  0E10               	movlw	high STR_1
  1154   003470  6E0D               	movwf	(UART1_Write_String@text+1)^0,c
  1155   003472  EC05  F025         	call	_UART1_Write_String	;wreg free
  1156   003476                     
  1157                           ;main.c: 96:         char buffer[20];;main.c: 97:         sprintf(buffer, "%.2f,%.2f", i
      +                          nitialX, initialY);
  1158   003476  0E61               	movlw	low main@buffer
  1159   003478  0100               	movlb	0	; () banked
  1160   00347A  6F9F               	movwf	sprintf@s& (0+255),b
  1161   00347C  0E01               	movlw	high main@buffer
  1162   00347E  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  1163   003480  0E4F               	movlw	low (STR_5+18)
  1164   003482  6FA1               	movwf	sprintf@fmt& (0+255),b
  1165   003484  0E10               	movlw	high (STR_5+18)
  1166   003486  6FA2               	movwf	(sprintf@fmt+1)& (0+255),b
  1167   003488  C10C  F0A3         	movff	_initialX,?_sprintf+4
  1168   00348C  C10D  F0A4         	movff	_initialX+1,?_sprintf+5
  1169   003490  C10E  F0A5         	movff	_initialX+2,?_sprintf+6
  1170   003494  C10F  F0A6         	movff	_initialX+3,?_sprintf+7
  1171   003498  C108  F0A7         	movff	_initialY,?_sprintf+8
  1172   00349C  C109  F0A8         	movff	_initialY+1,?_sprintf+9
  1173   0034A0  C10A  F0A9         	movff	_initialY+2,?_sprintf+10
  1174   0034A4  C10B  F0AA         	movff	_initialY+3,?_sprintf+11
  1175   0034A8  EC18  F026         	call	_sprintf	;wreg free
  1176   0034AC                     
  1177                           ;main.c: 98:         UART1_Write_String(buffer);
  1178   0034AC  0E61               	movlw	low main@buffer
  1179   0034AE  6E0C               	movwf	UART1_Write_String@text^0,c
  1180   0034B0  0E01               	movlw	high main@buffer
  1181   0034B2  6E0D               	movwf	(UART1_Write_String@text+1)^0,c
  1182   0034B4  EC05  F025         	call	_UART1_Write_String	;wreg free
  1183   0034B8                     
  1184                           ;main.c: 99:         UART1_Write_Char('K');
  1185   0034B8  0E4B               	movlw	75
  1186   0034BA  ECC8  F027         	call	_UART1_Write_Char
  1187   0034BE                     
  1188                           ;main.c: 102:         char bufferInicial[20];;main.c: 103:         int index = 0;
  1189   0034BE  0E00               	movlw	0
  1190   0034C0  0101               	movlb	1	; () banked
  1191   0034C2  6FBA               	movwf	(main@index+1)& (0+255),b
  1192   0034C4  0E00               	movlw	0
  1193   0034C6  6FB9               	movwf	main@index& (0+255),b
  1194   0034C8                     l6588:
  1195                           
  1196                           ; BSR set to: 1
  1197                           ;main.c: 106:             receivedChar = UART1_Read_Char();
  1198   0034C8  ECB1  F027         	call	_UART1_Read_Char	;wreg free
  1199   0034CC  0101               	movlb	1	; () banked
  1200   0034CE  6FBB               	movwf	main@receivedChar& (0+255),b
  1201   0034D0                     
  1202                           ; BSR set to: 1
  1203                           ;main.c: 107:             if (receivedChar != '\0' && receivedChar != 'K') {
  1204   0034D0  51BB               	movf	main@receivedChar& (0+255),w,b
  1205   0034D2  B4D8               	btfsc	status,2,c
  1206   0034D4  EF6E  F01A         	goto	u9071
  1207   0034D8  EF70  F01A         	goto	u9070
  1208   0034DC                     u9071:
  1209   0034DC  EF83  F01A         	goto	l6598
  1210   0034E0                     u9070:
  1211   0034E0                     
  1212                           ; BSR set to: 1
  1213   0034E0  0E4B               	movlw	75
  1214   0034E2  19BB               	xorwf	main@receivedChar& (0+255),w,b
  1215   0034E4  B4D8               	btfsc	status,2,c
  1216   0034E6  EF77  F01A         	goto	u9081
  1217   0034EA  EF79  F01A         	goto	u9080
  1218   0034EE                     u9081:
  1219   0034EE  EF83  F01A         	goto	l6598
  1220   0034F2                     u9080:
  1221   0034F2                     
  1222                           ; BSR set to: 1
  1223                           ;main.c: 108:                 bufferInicial[index++] = receivedChar;
  1224   0034F2  0E89               	movlw	low main@bufferInicial
  1225   0034F4  25B9               	addwf	main@index& (0+255),w,b
  1226   0034F6  6ED9               	movwf	fsr2l,c
  1227   0034F8  0E01               	movlw	high main@bufferInicial
  1228   0034FA  21BA               	addwfc	(main@index+1)& (0+255),w,b
  1229   0034FC  6EDA               	movwf	fsr2h,c
  1230   0034FE  C1BB  FFDF         	movff	main@receivedChar,indf2
  1231   003502                     
  1232                           ; BSR set to: 1
  1233   003502  4BB9               	infsnz	main@index& (0+255),f,b
  1234   003504  2BBA               	incf	(main@index+1)& (0+255),f,b
  1235   003506                     l6598:
  1236                           
  1237                           ; BSR set to: 1
  1238                           ;main.c: 110:         } while (receivedChar != 'K');
  1239   003506  0E4B               	movlw	75
  1240   003508  19BB               	xorwf	main@receivedChar& (0+255),w,b
  1241   00350A  A4D8               	btfss	status,2,c
  1242   00350C  EF8A  F01A         	goto	u9091
  1243   003510  EF8C  F01A         	goto	u9090
  1244   003514                     u9091:
  1245   003514  EF64  F01A         	goto	l6588
  1246   003518                     u9090:
  1247   003518                     
  1248                           ; BSR set to: 1
  1249                           ;main.c: 111:         bufferInicial[index] = '\0';
  1250   003518  0E89               	movlw	low main@bufferInicial
  1251   00351A  25B9               	addwf	main@index& (0+255),w,b
  1252   00351C  6ED9               	movwf	fsr2l,c
  1253   00351E  0E01               	movlw	high main@bufferInicial
  1254   003520  21BA               	addwfc	(main@index+1)& (0+255),w,b
  1255   003522  6EDA               	movwf	fsr2h,c
  1256   003524  6ADF               	clrf	indf2,c
  1257   003526                     
  1258                           ; BSR set to: 1
  1259                           ;main.c: 117:         float coordX, coordY;;main.c: 118:         char *token;;main.c: 11
      +                          9:         token = strtok(bufferInicial, ",");
  1260   003526  0E89               	movlw	low main@bufferInicial
  1261   003528  6E16               	movwf	strtok@s^0,c
  1262   00352A  0E01               	movlw	high main@bufferInicial
  1263   00352C  6E17               	movwf	(strtok@s+1)^0,c
  1264   00352E  0EA5               	movlw	low STR_3
  1265   003530  6E18               	movwf	strtok@sep^0,c
  1266   003532  0E10               	movlw	high STR_3
  1267   003534  6E19               	movwf	(strtok@sep+1)^0,c
  1268   003536  EC6F  F022         	call	_strtok	;wreg free
  1269   00353A  C016  F1BC         	movff	?_strtok,main@token
  1270   00353E  C017  F1BD         	movff	?_strtok+1,main@token+1
  1271   003542                     
  1272                           ;main.c: 120:         if (token) {
  1273   003542  0101               	movlb	1	; () banked
  1274   003544  51BC               	movf	main@token& (0+255),w,b
  1275   003546  11BD               	iorwf	(main@token+1)& (0+255),w,b
  1276   003548  B4D8               	btfsc	status,2,c
  1277   00354A  EFA9  F01A         	goto	u9101
  1278   00354E  EFAB  F01A         	goto	u9100
  1279   003552                     u9101:
  1280   003552  EFE7  F01A         	goto	l94
  1281   003556                     u9100:
  1282   003556                     
  1283                           ; BSR set to: 1
  1284                           ;main.c: 121:             coordX = strtof(token,((void*)0));
  1285   003556  C1BC  F030         	movff	main@token,strtof@s
  1286   00355A  C1BD  F031         	movff	main@token+1,strtof@s+1
  1287   00355E  0E00               	movlw	0
  1288   003560  6E32               	movwf	strtof@res^0,c
  1289   003562  0E00               	movlw	0
  1290   003564  6E33               	movwf	(strtof@res+1)^0,c
  1291   003566  EC54  F008         	call	_strtof	;wreg free
  1292   00356A  C030  F1B1         	movff	?_strtof,main@coordX
  1293   00356E  C031  F1B2         	movff	?_strtof+1,main@coordX+1
  1294   003572  C032  F1B3         	movff	?_strtof+2,main@coordX+2
  1295   003576  C033  F1B4         	movff	?_strtof+3,main@coordX+3
  1296   00357A                     
  1297                           ;main.c: 122:             token = strtok(((void*)0), ",");
  1298   00357A  0E00               	movlw	0
  1299   00357C  6E16               	movwf	strtok@s^0,c
  1300   00357E  0E00               	movlw	0
  1301   003580  6E17               	movwf	(strtok@s+1)^0,c
  1302   003582  0EA5               	movlw	low STR_3
  1303   003584  6E18               	movwf	strtok@sep^0,c
  1304   003586  0E10               	movlw	high STR_3
  1305   003588  6E19               	movwf	(strtok@sep+1)^0,c
  1306   00358A  EC6F  F022         	call	_strtok	;wreg free
  1307   00358E  C016  F1BC         	movff	?_strtok,main@token
  1308   003592  C017  F1BD         	movff	?_strtok+1,main@token+1
  1309   003596                     
  1310                           ;main.c: 123:             if (token) {
  1311   003596  0101               	movlb	1	; () banked
  1312   003598  51BC               	movf	main@token& (0+255),w,b
  1313   00359A  11BD               	iorwf	(main@token+1)& (0+255),w,b
  1314   00359C  B4D8               	btfsc	status,2,c
  1315   00359E  EFD3  F01A         	goto	u9111
  1316   0035A2  EFD5  F01A         	goto	u9110
  1317   0035A6                     u9111:
  1318   0035A6  EFE7  F01A         	goto	l94
  1319   0035AA                     u9110:
  1320   0035AA                     
  1321                           ; BSR set to: 1
  1322                           ;main.c: 124:                 coordY = strtof(token,((void*)0));
  1323   0035AA  C1BC  F030         	movff	main@token,strtof@s
  1324   0035AE  C1BD  F031         	movff	main@token+1,strtof@s+1
  1325   0035B2  0E00               	movlw	0
  1326   0035B4  6E32               	movwf	strtof@res^0,c
  1327   0035B6  0E00               	movlw	0
  1328   0035B8  6E33               	movwf	(strtof@res+1)^0,c
  1329   0035BA  EC54  F008         	call	_strtof	;wreg free
  1330   0035BE  C030  F1B5         	movff	?_strtof,main@coordY
  1331   0035C2  C031  F1B6         	movff	?_strtof+1,main@coordY+1
  1332   0035C6  C032  F1B7         	movff	?_strtof+2,main@coordY+2
  1333   0035CA  C033  F1B8         	movff	?_strtof+3,main@coordY+3
  1334   0035CE                     l94:
  1335                           
  1336                           ;main.c: 131:         initialX = coordX;
  1337   0035CE  C1B1  F10C         	movff	main@coordX,_initialX
  1338   0035D2  C1B2  F10D         	movff	main@coordX+1,_initialX+1
  1339   0035D6  C1B3  F10E         	movff	main@coordX+2,_initialX+2
  1340   0035DA  C1B4  F10F         	movff	main@coordX+3,_initialX+3
  1341                           
  1342                           ;main.c: 132:         initialY = coordY;
  1343   0035DE  C1B5  F108         	movff	main@coordY,_initialY
  1344   0035E2  C1B6  F109         	movff	main@coordY+1,_initialY+1
  1345   0035E6  C1B7  F10A         	movff	main@coordY+2,_initialY+2
  1346   0035EA  C1B8  F10B         	movff	main@coordY+3,_initialY+3
  1347   0035EE                     
  1348                           ;main.c: 135:         char lcdBuffer[20];;main.c: 136:         sprintf(lcdBuffer, "Coord
      +                          . iniciales: %.2f,%.2f", initialX, initialY);
  1349   0035EE  0E75               	movlw	low main@lcdBuffer
  1350   0035F0  0100               	movlb	0	; () banked
  1351   0035F2  6F9F               	movwf	sprintf@s& (0+255),b
  1352   0035F4  0E01               	movlw	high main@lcdBuffer
  1353   0035F6  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  1354   0035F8  0E3D               	movlw	low STR_5
  1355   0035FA  6FA1               	movwf	sprintf@fmt& (0+255),b
  1356   0035FC  0E10               	movlw	high STR_5
  1357   0035FE  6FA2               	movwf	(sprintf@fmt+1)& (0+255),b
  1358   003600  C10C  F0A3         	movff	_initialX,?_sprintf+4
  1359   003604  C10D  F0A4         	movff	_initialX+1,?_sprintf+5
  1360   003608  C10E  F0A5         	movff	_initialX+2,?_sprintf+6
  1361   00360C  C10F  F0A6         	movff	_initialX+3,?_sprintf+7
  1362   003610  C108  F0A7         	movff	_initialY,?_sprintf+8
  1363   003614  C109  F0A8         	movff	_initialY+1,?_sprintf+9
  1364   003618  C10A  F0A9         	movff	_initialY+2,?_sprintf+10
  1365   00361C  C10B  F0AA         	movff	_initialY+3,?_sprintf+11
  1366   003620  EC18  F026         	call	_sprintf	;wreg free
  1367   003624                     
  1368                           ;main.c: 137:         SettingsLCD(0x80);
  1369   003624  0E80               	movlw	128
  1370   003626  ECBD  F027         	call	_SettingsLCD
  1371   00362A                     
  1372                           ;main.c: 138:         UART1_Write_String(lcdBuffer);
  1373   00362A  0E75               	movlw	low main@lcdBuffer
  1374   00362C  6E0C               	movwf	UART1_Write_String@text^0,c
  1375   00362E  0E01               	movlw	high main@lcdBuffer
  1376   003630  6E0D               	movwf	(UART1_Write_String@text+1)^0,c
  1377   003632  EC05  F025         	call	_UART1_Write_String	;wreg free
  1378   003636                     
  1379                           ;main.c: 141:         UART1_Write_String("Enviar coordenadas finales: ");
  1380   003636  0E20               	movlw	low STR_6
  1381   003638  6E0C               	movwf	UART1_Write_String@text^0,c
  1382   00363A  0E10               	movlw	high STR_6
  1383   00363C  6E0D               	movwf	(UART1_Write_String@text+1)^0,c
  1384   00363E  EC05  F025         	call	_UART1_Write_String	;wreg free
  1385   003642                     
  1386                           ;main.c: 145:         sprintf(buffer, "%.2f,%.2f", finalX, finalY);
  1387   003642  0E61               	movlw	low main@buffer
  1388   003644  0100               	movlb	0	; () banked
  1389   003646  6F9F               	movwf	sprintf@s& (0+255),b
  1390   003648  0E01               	movlw	high main@buffer
  1391   00364A  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  1392   00364C  0E4F               	movlw	low (STR_5+18)
  1393   00364E  6FA1               	movwf	sprintf@fmt& (0+255),b
  1394   003650  0E10               	movlw	high (STR_5+18)
  1395   003652  6FA2               	movwf	(sprintf@fmt+1)& (0+255),b
  1396   003654  C104  F0A3         	movff	_finalX,?_sprintf+4
  1397   003658  C105  F0A4         	movff	_finalX+1,?_sprintf+5
  1398   00365C  C106  F0A5         	movff	_finalX+2,?_sprintf+6
  1399   003660  C107  F0A6         	movff	_finalX+3,?_sprintf+7
  1400   003664  C100  F0A7         	movff	_finalY,?_sprintf+8
  1401   003668  C101  F0A8         	movff	_finalY+1,?_sprintf+9
  1402   00366C  C102  F0A9         	movff	_finalY+2,?_sprintf+10
  1403   003670  C103  F0AA         	movff	_finalY+3,?_sprintf+11
  1404   003674  EC18  F026         	call	_sprintf	;wreg free
  1405   003678                     
  1406                           ;main.c: 146:         UART1_Write_String(buffer);
  1407   003678  0E61               	movlw	low main@buffer
  1408   00367A  6E0C               	movwf	UART1_Write_String@text^0,c
  1409   00367C  0E01               	movlw	high main@buffer
  1410   00367E  6E0D               	movwf	(UART1_Write_String@text+1)^0,c
  1411   003680  EC05  F025         	call	_UART1_Write_String	;wreg free
  1412   003684                     
  1413                           ;main.c: 147:         UART1_Write_Char('K');
  1414   003684  0E4B               	movlw	75
  1415   003686  ECC8  F027         	call	_UART1_Write_Char
  1416   00368A                     
  1417                           ;main.c: 150:         char bufferFinal[20];;main.c: 151:         index = 0;
  1418   00368A  0E00               	movlw	0
  1419   00368C  0101               	movlb	1	; () banked
  1420   00368E  6FBA               	movwf	(main@index+1)& (0+255),b
  1421   003690  0E00               	movlw	0
  1422   003692  6FB9               	movwf	main@index& (0+255),b
  1423   003694                     l6630:
  1424                           
  1425                           ; BSR set to: 1
  1426                           ;main.c: 153:             receivedChar = UART1_Read_Char();
  1427   003694  ECB1  F027         	call	_UART1_Read_Char	;wreg free
  1428   003698  0101               	movlb	1	; () banked
  1429   00369A  6FBB               	movwf	main@receivedChar& (0+255),b
  1430   00369C                     
  1431                           ; BSR set to: 1
  1432                           ;main.c: 154:             if (receivedChar != '\0' && receivedChar != 'K') {
  1433   00369C  51BB               	movf	main@receivedChar& (0+255),w,b
  1434   00369E  B4D8               	btfsc	status,2,c
  1435   0036A0  EF54  F01B         	goto	u9121
  1436   0036A4  EF56  F01B         	goto	u9120
  1437   0036A8                     u9121:
  1438   0036A8  EF69  F01B         	goto	l6640
  1439   0036AC                     u9120:
  1440   0036AC                     
  1441                           ; BSR set to: 1
  1442   0036AC  0E4B               	movlw	75
  1443   0036AE  19BB               	xorwf	main@receivedChar& (0+255),w,b
  1444   0036B0  B4D8               	btfsc	status,2,c
  1445   0036B2  EF5D  F01B         	goto	u9131
  1446   0036B6  EF5F  F01B         	goto	u9130
  1447   0036BA                     u9131:
  1448   0036BA  EF69  F01B         	goto	l6640
  1449   0036BE                     u9130:
  1450   0036BE                     
  1451                           ; BSR set to: 1
  1452                           ;main.c: 155:                 bufferFinal[index++] = receivedChar;
  1453   0036BE  0E9D               	movlw	low main@bufferFinal
  1454   0036C0  25B9               	addwf	main@index& (0+255),w,b
  1455   0036C2  6ED9               	movwf	fsr2l,c
  1456   0036C4  0E01               	movlw	high main@bufferFinal
  1457   0036C6  21BA               	addwfc	(main@index+1)& (0+255),w,b
  1458   0036C8  6EDA               	movwf	fsr2h,c
  1459   0036CA  C1BB  FFDF         	movff	main@receivedChar,indf2
  1460   0036CE                     
  1461                           ; BSR set to: 1
  1462   0036CE  4BB9               	infsnz	main@index& (0+255),f,b
  1463   0036D0  2BBA               	incf	(main@index+1)& (0+255),f,b
  1464   0036D2                     l6640:
  1465                           
  1466                           ; BSR set to: 1
  1467                           ;main.c: 157:         } while (receivedChar != 'K');
  1468   0036D2  0E4B               	movlw	75
  1469   0036D4  19BB               	xorwf	main@receivedChar& (0+255),w,b
  1470   0036D6  A4D8               	btfss	status,2,c
  1471   0036D8  EF70  F01B         	goto	u9141
  1472   0036DC  EF72  F01B         	goto	u9140
  1473   0036E0                     u9141:
  1474   0036E0  EF4A  F01B         	goto	l6630
  1475   0036E4                     u9140:
  1476   0036E4                     
  1477                           ; BSR set to: 1
  1478                           ;main.c: 158:         bufferFinal[index] = '\0';
  1479   0036E4  0E9D               	movlw	low main@bufferFinal
  1480   0036E6  25B9               	addwf	main@index& (0+255),w,b
  1481   0036E8  6ED9               	movwf	fsr2l,c
  1482   0036EA  0E01               	movlw	high main@bufferFinal
  1483   0036EC  21BA               	addwfc	(main@index+1)& (0+255),w,b
  1484   0036EE  6EDA               	movwf	fsr2h,c
  1485   0036F0  6ADF               	clrf	indf2,c
  1486   0036F2                     
  1487                           ; BSR set to: 1
  1488                           ;main.c: 164:         token = strtok(bufferFinal, ",");
  1489   0036F2  0E9D               	movlw	low main@bufferFinal
  1490   0036F4  6E16               	movwf	strtok@s^0,c
  1491   0036F6  0E01               	movlw	high main@bufferFinal
  1492   0036F8  6E17               	movwf	(strtok@s+1)^0,c
  1493   0036FA  0EA5               	movlw	low STR_3
  1494   0036FC  6E18               	movwf	strtok@sep^0,c
  1495   0036FE  0E10               	movlw	high STR_3
  1496   003700  6E19               	movwf	(strtok@sep+1)^0,c
  1497   003702  EC6F  F022         	call	_strtok	;wreg free
  1498   003706  C016  F1BC         	movff	?_strtok,main@token
  1499   00370A  C017  F1BD         	movff	?_strtok+1,main@token+1
  1500   00370E                     
  1501                           ;main.c: 165:         if (token) {
  1502   00370E  0101               	movlb	1	; () banked
  1503   003710  51BC               	movf	main@token& (0+255),w,b
  1504   003712  11BD               	iorwf	(main@token+1)& (0+255),w,b
  1505   003714  B4D8               	btfsc	status,2,c
  1506   003716  EF8F  F01B         	goto	u9151
  1507   00371A  EF91  F01B         	goto	u9150
  1508   00371E                     u9151:
  1509   00371E  EFCD  F01B         	goto	l101
  1510   003722                     u9150:
  1511   003722                     
  1512                           ; BSR set to: 1
  1513                           ;main.c: 166:             coordX = strtof(token,((void*)0));
  1514   003722  C1BC  F030         	movff	main@token,strtof@s
  1515   003726  C1BD  F031         	movff	main@token+1,strtof@s+1
  1516   00372A  0E00               	movlw	0
  1517   00372C  6E32               	movwf	strtof@res^0,c
  1518   00372E  0E00               	movlw	0
  1519   003730  6E33               	movwf	(strtof@res+1)^0,c
  1520   003732  EC54  F008         	call	_strtof	;wreg free
  1521   003736  C030  F1B1         	movff	?_strtof,main@coordX
  1522   00373A  C031  F1B2         	movff	?_strtof+1,main@coordX+1
  1523   00373E  C032  F1B3         	movff	?_strtof+2,main@coordX+2
  1524   003742  C033  F1B4         	movff	?_strtof+3,main@coordX+3
  1525   003746                     
  1526                           ;main.c: 167:             token = strtok(((void*)0), ",");
  1527   003746  0E00               	movlw	0
  1528   003748  6E16               	movwf	strtok@s^0,c
  1529   00374A  0E00               	movlw	0
  1530   00374C  6E17               	movwf	(strtok@s+1)^0,c
  1531   00374E  0EA5               	movlw	low STR_3
  1532   003750  6E18               	movwf	strtok@sep^0,c
  1533   003752  0E10               	movlw	high STR_3
  1534   003754  6E19               	movwf	(strtok@sep+1)^0,c
  1535   003756  EC6F  F022         	call	_strtok	;wreg free
  1536   00375A  C016  F1BC         	movff	?_strtok,main@token
  1537   00375E  C017  F1BD         	movff	?_strtok+1,main@token+1
  1538   003762                     
  1539                           ;main.c: 168:             if (token) {
  1540   003762  0101               	movlb	1	; () banked
  1541   003764  51BC               	movf	main@token& (0+255),w,b
  1542   003766  11BD               	iorwf	(main@token+1)& (0+255),w,b
  1543   003768  B4D8               	btfsc	status,2,c
  1544   00376A  EFB9  F01B         	goto	u9161
  1545   00376E  EFBB  F01B         	goto	u9160
  1546   003772                     u9161:
  1547   003772  EFCD  F01B         	goto	l101
  1548   003776                     u9160:
  1549   003776                     
  1550                           ; BSR set to: 1
  1551                           ;main.c: 169:                 coordY = strtof(token,((void*)0));
  1552   003776  C1BC  F030         	movff	main@token,strtof@s
  1553   00377A  C1BD  F031         	movff	main@token+1,strtof@s+1
  1554   00377E  0E00               	movlw	0
  1555   003780  6E32               	movwf	strtof@res^0,c
  1556   003782  0E00               	movlw	0
  1557   003784  6E33               	movwf	(strtof@res+1)^0,c
  1558   003786  EC54  F008         	call	_strtof	;wreg free
  1559   00378A  C030  F1B5         	movff	?_strtof,main@coordY
  1560   00378E  C031  F1B6         	movff	?_strtof+1,main@coordY+1
  1561   003792  C032  F1B7         	movff	?_strtof+2,main@coordY+2
  1562   003796  C033  F1B8         	movff	?_strtof+3,main@coordY+3
  1563   00379A                     l101:
  1564                           
  1565                           ;main.c: 176:         finalX = coordX;
  1566   00379A  C1B1  F104         	movff	main@coordX,_finalX
  1567   00379E  C1B2  F105         	movff	main@coordX+1,_finalX+1
  1568   0037A2  C1B3  F106         	movff	main@coordX+2,_finalX+2
  1569   0037A6  C1B4  F107         	movff	main@coordX+3,_finalX+3
  1570                           
  1571                           ;main.c: 177:         finalY = coordY;
  1572   0037AA  C1B5  F100         	movff	main@coordY,_finalY
  1573   0037AE  C1B6  F101         	movff	main@coordY+1,_finalY+1
  1574   0037B2  C1B7  F102         	movff	main@coordY+2,_finalY+2
  1575   0037B6  C1B8  F103         	movff	main@coordY+3,_finalY+3
  1576   0037BA                     
  1577                           ;main.c: 180:         UART1_Write_Char('K');
  1578   0037BA  0E4B               	movlw	75
  1579   0037BC  ECC8  F027         	call	_UART1_Write_Char
  1580   0037C0                     
  1581                           ;main.c: 183:         sprintf(lcdBuffer, "Coord. finales: %.2f,%.2f", finalX, finalY);
  1582   0037C0  0E75               	movlw	low main@lcdBuffer
  1583   0037C2  0100               	movlb	0	; () banked
  1584   0037C4  6F9F               	movwf	sprintf@s& (0+255),b
  1585   0037C6  0E01               	movlw	high main@lcdBuffer
  1586   0037C8  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  1587   0037CA  0E59               	movlw	low STR_10
  1588   0037CC  6FA1               	movwf	sprintf@fmt& (0+255),b
  1589   0037CE  0E10               	movlw	high STR_10
  1590   0037D0  6FA2               	movwf	(sprintf@fmt+1)& (0+255),b
  1591   0037D2  C104  F0A3         	movff	_finalX,?_sprintf+4
  1592   0037D6  C105  F0A4         	movff	_finalX+1,?_sprintf+5
  1593   0037DA  C106  F0A5         	movff	_finalX+2,?_sprintf+6
  1594   0037DE  C107  F0A6         	movff	_finalX+3,?_sprintf+7
  1595   0037E2  C100  F0A7         	movff	_finalY,?_sprintf+8
  1596   0037E6  C101  F0A8         	movff	_finalY+1,?_sprintf+9
  1597   0037EA  C102  F0A9         	movff	_finalY+2,?_sprintf+10
  1598   0037EE  C103  F0AA         	movff	_finalY+3,?_sprintf+11
  1599   0037F2  EC18  F026         	call	_sprintf	;wreg free
  1600   0037F6                     
  1601                           ;main.c: 184:         SettingsLCD(0xC0);
  1602   0037F6  0EC0               	movlw	192
  1603   0037F8  ECBD  F027         	call	_SettingsLCD
  1604   0037FC                     
  1605                           ;main.c: 185:         UART1_Write_String(lcdBuffer);
  1606   0037FC  0E75               	movlw	low main@lcdBuffer
  1607   0037FE  6E0C               	movwf	UART1_Write_String@text^0,c
  1608   003800  0E01               	movlw	high main@lcdBuffer
  1609   003802  6E0D               	movwf	(UART1_Write_String@text+1)^0,c
  1610   003804  EC05  F025         	call	_UART1_Write_String	;wreg free
  1611   003808  EF22  F01A         	goto	l6574
  1612   00380C  EF76  F000         	goto	start
  1613   003810                     __end_of_main:
  1614                           	callstack 0
  1615                           
  1616 ;; *************** function _strtok *****************
  1617 ;; Defined at:
  1618 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strtok.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  s               2   21[COMRAM] PTR unsigned char 
  1621 ;;		 -> main@bufferFinal(20), NULL(0), main@bufferInicial(20), 
  1622 ;;  sep             2   23[COMRAM] PTR const unsigned char 
  1623 ;;		 -> STR_9(2), STR_8(2), STR_4(2), STR_3(2), 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  2   21[COMRAM] PTR unsigned char 
  1628 ;; Registers used:
  1629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;Total ram usage:        4 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 5
  1642 ;; This function calls:
  1643 ;;		_strcspn
  1644 ;;		_strspn
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text1
  1651   0044DE                     __ptext1:
  1652                           	callstack 0
  1653   0044DE                     _strtok:
  1654                           	callstack 25
  1655   0044DE  5016               	movf	strtok@s^0,w,c
  1656   0044E0  1017               	iorwf	(strtok@s+1)^0,w,c
  1657   0044E2  A4D8               	btfss	status,2,c
  1658   0044E4  EF76  F022         	goto	u5101
  1659   0044E8  EF78  F022         	goto	u5100
  1660   0044EC                     u5101:
  1661   0044EC  EF8B  F022         	goto	l4420
  1662   0044F0                     u5100:
  1663   0044F0  C04D  F016         	movff	strtok@p,strtok@s
  1664   0044F4  C04E  F017         	movff	strtok@p+1,strtok@s+1
  1665   0044F8  5016               	movf	strtok@s^0,w,c
  1666   0044FA  1017               	iorwf	(strtok@s+1)^0,w,c
  1667   0044FC  A4D8               	btfss	status,2,c
  1668   0044FE  EF83  F022         	goto	u5111
  1669   004502  EF85  F022         	goto	u5110
  1670   004506                     u5111:
  1671   004506  EF8B  F022         	goto	l4420
  1672   00450A                     u5110:
  1673   00450A  0E00               	movlw	0
  1674   00450C  6E16               	movwf	?_strtok^0,c
  1675   00450E  0E00               	movlw	0
  1676   004510  6E17               	movwf	(?_strtok+1)^0,c
  1677   004512  EFDC  F022         	goto	l1234
  1678   004516                     l4420:
  1679   004516  C016  F00F         	movff	strtok@s,strspn@s
  1680   00451A  C017  F010         	movff	strtok@s+1,strspn@s+1
  1681   00451E  C018  F011         	movff	strtok@sep,strspn@c
  1682   004522  C019  F012         	movff	strtok@sep+1,strspn@c+1
  1683   004526  EC6C  F024         	call	_strspn	;wreg free
  1684   00452A  500F               	movf	?_strspn^0,w,c
  1685   00452C  2616               	addwf	strtok@s^0,f,c
  1686   00452E  5010               	movf	(?_strspn+1)^0,w,c
  1687   004530  2217               	addwfc	(strtok@s+1)^0,f,c
  1688   004532  C016  FFD9         	movff	strtok@s,fsr2l
  1689   004536  C017  FFDA         	movff	strtok@s+1,fsr2h
  1690   00453A  50DF               	movf	indf2,w,c
  1691   00453C  A4D8               	btfss	status,2,c
  1692   00453E  EFA3  F022         	goto	u5121
  1693   004542  EFA5  F022         	goto	u5120
  1694   004546                     u5121:
  1695   004546  EFAF  F022         	goto	l4428
  1696   00454A                     u5120:
  1697   00454A  0E00               	movlw	0
  1698   00454C  6E4D               	movwf	strtok@p^0,c
  1699   00454E  0E00               	movlw	0
  1700   004550  6E4E               	movwf	(strtok@p+1)^0,c
  1701   004552  C04D  F016         	movff	strtok@p,?_strtok
  1702   004556  C04E  F017         	movff	strtok@p+1,?_strtok+1
  1703   00455A  EFDC  F022         	goto	l1234
  1704   00455E                     l4428:
  1705   00455E  C016  F00F         	movff	strtok@s,strcspn@s
  1706   004562  C017  F010         	movff	strtok@s+1,strcspn@s+1
  1707   004566  C018  F011         	movff	strtok@sep,strcspn@c
  1708   00456A  C019  F012         	movff	strtok@sep+1,strcspn@c+1
  1709   00456E  EC9F  F024         	call	_strcspn	;wreg free
  1710   004572  500F               	movf	?_strcspn^0,w,c
  1711   004574  2416               	addwf	strtok@s^0,w,c
  1712   004576  6E4D               	movwf	strtok@p^0,c
  1713   004578  5010               	movf	(?_strcspn+1)^0,w,c
  1714   00457A  2017               	addwfc	(strtok@s+1)^0,w,c
  1715   00457C  6E4E               	movwf	(strtok@p+1)^0,c
  1716   00457E  C04D  FFD9         	movff	strtok@p,fsr2l
  1717   004582  C04E  FFDA         	movff	strtok@p+1,fsr2h
  1718   004586  50DF               	movf	indf2,w,c
  1719   004588  B4D8               	btfsc	status,2,c
  1720   00458A  EFC9  F022         	goto	u5131
  1721   00458E  EFCB  F022         	goto	u5130
  1722   004592                     u5131:
  1723   004592  EFD4  F022         	goto	l4436
  1724   004596                     u5130:
  1725   004596  C04D  FFD9         	movff	strtok@p,fsr2l
  1726   00459A  C04E  FFDA         	movff	strtok@p+1,fsr2h
  1727   00459E  6ADF               	clrf	indf2,c
  1728   0045A0  4A4D               	infsnz	strtok@p^0,f,c
  1729   0045A2  2A4E               	incf	(strtok@p+1)^0,f,c
  1730   0045A4  EFD8  F022         	goto	l1237
  1731   0045A8                     l4436:
  1732   0045A8  0E00               	movlw	0
  1733   0045AA  6E4D               	movwf	strtok@p^0,c
  1734   0045AC  0E00               	movlw	0
  1735   0045AE  6E4E               	movwf	(strtok@p+1)^0,c
  1736   0045B0                     l1237:
  1737   0045B0  C016  F016         	movff	strtok@s,?_strtok
  1738   0045B4  C017  F017         	movff	strtok@s+1,?_strtok+1
  1739   0045B8                     l1234:
  1740   0045B8  0012               	return		;funcret
  1741   0045BA                     __end_of_strtok:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function _strspn *****************
  1745 ;; Defined at:
  1746 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strspn.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  s               2   14[COMRAM] PTR const unsigned char 
  1749 ;;		 -> main@bufferFinal(20), NULL(0), main@bufferInicial(20), 
  1750 ;;  c               2   16[COMRAM] PTR const unsigned char 
  1751 ;;		 -> STR_9(2), STR_8(2), STR_4(2), STR_3(2), 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  i               2   19[COMRAM] unsigned int 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  2   14[COMRAM] unsigned int 
  1756 ;; Registers used:
  1757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1763 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1766 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;Total ram usage:        7 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 4
  1770 ;; This function calls:
  1771 ;;		_strchr
  1772 ;; This function is called by:
  1773 ;;		_strtok
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text2
  1778   0048D8                     __ptext2:
  1779                           	callstack 0
  1780   0048D8                     _strspn:
  1781                           	callstack 25
  1782   0048D8  0E00               	movlw	0
  1783   0048DA  6E15               	movwf	(strspn@i+1)^0,c
  1784   0048DC  0E00               	movlw	0
  1785   0048DE  6E14               	movwf	strspn@i^0,c
  1786   0048E0  EF76  F024         	goto	l4318
  1787   0048E4                     l4316:
  1788   0048E4  4A0F               	infsnz	strspn@s^0,f,c
  1789   0048E6  2A10               	incf	(strspn@s+1)^0,f,c
  1790   0048E8  4A14               	infsnz	strspn@i^0,f,c
  1791   0048EA  2A15               	incf	(strspn@i+1)^0,f,c
  1792   0048EC                     l4318:
  1793   0048EC  C00F  FFD9         	movff	strspn@s,fsr2l
  1794   0048F0  C010  FFDA         	movff	strspn@s+1,fsr2h
  1795   0048F4  50DF               	movf	indf2,w,c
  1796   0048F6  B4D8               	btfsc	status,2,c
  1797   0048F8  EF80  F024         	goto	u5011
  1798   0048FC  EF82  F024         	goto	u5010
  1799   004900                     u5011:
  1800   004900  EF9A  F024         	goto	l1262
  1801   004904                     u5010:
  1802   004904  C011  F00B         	movff	strspn@c,strchr@s
  1803   004908  C012  F00C         	movff	strspn@c+1,strchr@s+1
  1804   00490C  C00F  FFD9         	movff	strspn@s,fsr2l
  1805   004910  C010  FFDA         	movff	strspn@s+1,fsr2h
  1806   004914  50DF               	movf	indf2,w,c
  1807   004916  6E13               	movwf	??_strspn^0,c
  1808   004918  5013               	movf	??_strspn^0,w,c
  1809   00491A  6E0D               	movwf	strchr@c^0,c
  1810   00491C  6A0E               	clrf	(strchr@c+1)^0,c
  1811   00491E  ECC6  F025         	call	_strchr	;wreg free
  1812   004922  500B               	movf	?_strchr^0,w,c
  1813   004924  100C               	iorwf	(?_strchr+1)^0,w,c
  1814   004926  A4D8               	btfss	status,2,c
  1815   004928  EF98  F024         	goto	u5021
  1816   00492C  EF9A  F024         	goto	u5020
  1817   004930                     u5021:
  1818   004930  EF72  F024         	goto	l4316
  1819   004934                     u5020:
  1820   004934                     l1262:
  1821   004934  C014  F00F         	movff	strspn@i,?_strspn
  1822   004938  C015  F010         	movff	strspn@i+1,?_strspn+1
  1823   00493C  0012               	return		;funcret
  1824   00493E                     __end_of_strspn:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _strcspn *****************
  1828 ;; Defined at:
  1829 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcspn.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  s               2   14[COMRAM] PTR const unsigned char 
  1832 ;;		 -> main@bufferFinal(20), NULL(0), main@bufferInicial(20), 
  1833 ;;  c               2   16[COMRAM] PTR const unsigned char 
  1834 ;;		 -> STR_9(2), STR_8(2), STR_4(2), STR_3(2), 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  i               2   19[COMRAM] unsigned int 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  2   14[COMRAM] unsigned int 
  1839 ;; Registers used:
  1840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;Total ram usage:        7 bytes
  1851 ;; Hardware stack levels used: 1
  1852 ;; Hardware stack levels required when called: 4
  1853 ;; This function calls:
  1854 ;;		_strchr
  1855 ;; This function is called by:
  1856 ;;		_strtok
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text3
  1861   00493E                     __ptext3:
  1862                           	callstack 0
  1863   00493E                     _strcspn:
  1864                           	callstack 25
  1865   00493E  0E00               	movlw	0
  1866   004940  6E15               	movwf	(strcspn@i+1)^0,c
  1867   004942  0E00               	movlw	0
  1868   004944  6E14               	movwf	strcspn@i^0,c
  1869   004946  EFA9  F024         	goto	l4326
  1870   00494A                     l4324:
  1871   00494A  4A0F               	infsnz	strcspn@s^0,f,c
  1872   00494C  2A10               	incf	(strcspn@s+1)^0,f,c
  1873   00494E  4A14               	infsnz	strcspn@i^0,f,c
  1874   004950  2A15               	incf	(strcspn@i+1)^0,f,c
  1875   004952                     l4326:
  1876   004952  C00F  FFD9         	movff	strcspn@s,fsr2l
  1877   004956  C010  FFDA         	movff	strcspn@s+1,fsr2h
  1878   00495A  50DF               	movf	indf2,w,c
  1879   00495C  B4D8               	btfsc	status,2,c
  1880   00495E  EFB3  F024         	goto	u5031
  1881   004962  EFB5  F024         	goto	u5030
  1882   004966                     u5031:
  1883   004966  EFCD  F024         	goto	l1246
  1884   00496A                     u5030:
  1885   00496A  C011  F00B         	movff	strcspn@c,strchr@s
  1886   00496E  C012  F00C         	movff	strcspn@c+1,strchr@s+1
  1887   004972  C00F  FFD9         	movff	strcspn@s,fsr2l
  1888   004976  C010  FFDA         	movff	strcspn@s+1,fsr2h
  1889   00497A  50DF               	movf	indf2,w,c
  1890   00497C  6E13               	movwf	??_strcspn^0,c
  1891   00497E  5013               	movf	??_strcspn^0,w,c
  1892   004980  6E0D               	movwf	strchr@c^0,c
  1893   004982  6A0E               	clrf	(strchr@c+1)^0,c
  1894   004984  ECC6  F025         	call	_strchr	;wreg free
  1895   004988  500B               	movf	?_strchr^0,w,c
  1896   00498A  100C               	iorwf	(?_strchr+1)^0,w,c
  1897   00498C  B4D8               	btfsc	status,2,c
  1898   00498E  EFCB  F024         	goto	u5041
  1899   004992  EFCD  F024         	goto	u5040
  1900   004996                     u5041:
  1901   004996  EFA5  F024         	goto	l4324
  1902   00499A                     u5040:
  1903   00499A                     l1246:
  1904   00499A  C014  F00F         	movff	strcspn@i,?_strcspn
  1905   00499E  C015  F010         	movff	strcspn@i+1,?_strcspn+1
  1906   0049A2  0012               	return		;funcret
  1907   0049A4                     __end_of_strcspn:
  1908                           	callstack 0
  1909                           
  1910 ;; *************** function _strchr *****************
  1911 ;; Defined at:
  1912 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strchr.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1915 ;;		 -> STR_9(2), STR_8(2), STR_4(2), STR_3(2), 
  1916 ;;  c               2   12[COMRAM] int 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  2   10[COMRAM] PTR unsigned char 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;Total ram usage:        4 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 3
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_strcspn
  1939 ;;		_strspn
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text4
  1944   004B8C                     __ptext4:
  1945                           	callstack 0
  1946   004B8C                     _strchr:
  1947                           	callstack 25
  1948   004B8C                     l1250:
  1949   004B8C  C00B  FFF6         	movff	strchr@s,tblptrl
  1950   004B90  C00C  FFF7         	movff	strchr@s+1,tblptrh
  1951   004B94                     	if	0	;tblptru may be non-zero
  1952   004B94                     	endif
  1953   004B94                     	if	0	;tblptru may be non-zero
  1954   004B94                     	endif
  1955   004B94  0008               	tblrd		*
  1956   004B96  50F5               	movf	tablat,w,c
  1957   004B98  180D               	xorwf	strchr@c^0,w,c
  1958   004B9A  A4D8               	btfss	status,2,c
  1959   004B9C  EFD2  F025         	goto	u4781
  1960   004BA0  EFD4  F025         	goto	u4780
  1961   004BA4                     u4781:
  1962   004BA4  EFDA  F025         	goto	l4184
  1963   004BA8                     u4780:
  1964   004BA8  C00B  F00B         	movff	strchr@s,?_strchr
  1965   004BAC  C00C  F00C         	movff	strchr@s+1,?_strchr+1
  1966   004BB0  EFEE  F025         	goto	l1252
  1967   004BB4                     l4184:
  1968   004BB4  C00B  FFF6         	movff	strchr@s,tblptrl
  1969   004BB8  C00C  FFF7         	movff	strchr@s+1,tblptrh
  1970   004BBC  4A0B               	infsnz	strchr@s^0,f,c
  1971   004BBE  2A0C               	incf	(strchr@s+1)^0,f,c
  1972   004BC0                     	if	0	;tblptru may be non-zero
  1973   004BC0                     	endif
  1974   004BC0                     	if	0	;tblptru may be non-zero
  1975   004BC0                     	endif
  1976   004BC0  0008               	tblrd		*
  1977   004BC2  50F5               	movf	tablat,w,c
  1978   004BC4  0900               	iorlw	0
  1979   004BC6  A4D8               	btfss	status,2,c
  1980   004BC8  EFE8  F025         	goto	u4791
  1981   004BCC  EFEA  F025         	goto	u4790
  1982   004BD0                     u4791:
  1983   004BD0  EFC6  F025         	goto	l1250
  1984   004BD4                     u4790:
  1985   004BD4  0E00               	movlw	0
  1986   004BD6  6E0B               	movwf	?_strchr^0,c
  1987   004BD8  0E00               	movlw	0
  1988   004BDA  6E0C               	movwf	(?_strchr+1)^0,c
  1989   004BDC                     l1252:
  1990   004BDC  0012               	return		;funcret
  1991   004BDE                     __end_of_strchr:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _strtof *****************
  1995 ;; Defined at:
  1996 ;;		line 96 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strtof.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  s               2   47[COMRAM] PTR const unsigned char 
  1999 ;;		 -> main@bufferFinal(20), NULL(0), main@bufferInicial(20), 
  2000 ;;  res             2   49[COMRAM] PTR PTR unsigned char 
  2001 ;;		 -> NULL(0), 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  _u              4   10[BANK0 ] struct .
  2004 ;;  eexp            2    8[BANK0 ] int 
  2005 ;;  expon           2    6[BANK0 ] int 
  2006 ;;  err             2    2[BANK0 ] int 
  2007 ;;  i               1   14[BANK0 ] unsigned char 
  2008 ;;  flags           1    5[BANK0 ] unsigned char 
  2009 ;;  digit           1    4[BANK0 ] unsigned char 
  2010 ;;  dpos            1    1[BANK0 ] unsigned char 
  2011 ;;  xpos            1    0[BANK0 ] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  4   47[COMRAM] float 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2021 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Totals:        10      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;Total ram usage:       25 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 5
  2028 ;; This function calls:
  2029 ;;		___fldiv
  2030 ;;		___fleq
  2031 ;;		___flge
  2032 ;;		___flmul
  2033 ;;		___flneg
  2034 ;;		___lmul
  2035 ;;		___wmul
  2036 ;;		___xxtofl
  2037 ;;		_isdigit
  2038 ;;		_isspace
  2039 ;;		_isxdigit
  2040 ;;		_nanf
  2041 ;;		_toupper
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text5
  2048   0010A8                     __ptext5:
  2049                           	callstack 0
  2050   0010A8                     _strtof:
  2051                           	callstack 25
  2052   0010A8  0E00               	movlw	0
  2053   0010AA  0100               	movlb	0	; () banked
  2054   0010AC  6F63               	movwf	(strtof@err+1)& (0+255),b
  2055   0010AE  0E00               	movlw	0
  2056   0010B0  6F62               	movwf	strtof@err& (0+255),b
  2057   0010B2                     
  2058                           ; BSR set to: 0
  2059   0010B2  5032               	movf	strtof@res^0,w,c
  2060   0010B4  1033               	iorwf	(strtof@res+1)^0,w,c
  2061   0010B6  B4D8               	btfsc	status,2,c
  2062   0010B8  EF60  F008         	goto	u8121
  2063   0010BC  EF62  F008         	goto	u8120
  2064   0010C0                     u8121:
  2065   0010C0  EF6E  F008         	goto	l6172
  2066   0010C4                     u8120:
  2067   0010C4                     
  2068                           ; BSR set to: 0
  2069   0010C4  C032  FFD9         	movff	strtof@res,fsr2l
  2070   0010C8  C033  FFDA         	movff	strtof@res+1,fsr2h
  2071   0010CC  C030  FFDE         	movff	strtof@s,postinc2
  2072   0010D0  C031  FFDD         	movff	strtof@s+1,postdec2
  2073   0010D4  EF6E  F008         	goto	l6172
  2074   0010D8                     l6168:
  2075                           
  2076                           ; BSR set to: 0
  2077   0010D8  4A30               	infsnz	strtof@s^0,f,c
  2078   0010DA  2A31               	incf	(strtof@s+1)^0,f,c
  2079   0010DC                     l6172:
  2080                           
  2081                           ; BSR set to: 0
  2082   0010DC  C030  FFD9         	movff	strtof@s,fsr2l
  2083   0010E0  C031  FFDA         	movff	strtof@s+1,fsr2h
  2084   0010E4  0E20               	movlw	32
  2085   0010E6  18DE               	xorwf	postinc2,w,c
  2086   0010E8  B4D8               	btfsc	status,2,c
  2087   0010EA  EF79  F008         	goto	u8131
  2088   0010EE  EF7C  F008         	goto	u8130
  2089   0010F2                     u8131:
  2090   0010F2  0E01               	movlw	1
  2091   0010F4  EF7D  F008         	goto	u8140
  2092   0010F8                     u8130:
  2093   0010F8  0E00               	movlw	0
  2094   0010FA                     u8140:
  2095   0010FA  6F68               	movwf	strtof@eexp& (0+255),b
  2096   0010FC  6B69               	clrf	(strtof@eexp+1)& (0+255),b
  2097   0010FE  5168               	movf	strtof@eexp& (0+255),w,b
  2098   001100  1169               	iorwf	(strtof@eexp+1)& (0+255),w,b
  2099   001102  A4D8               	btfss	status,2,c
  2100   001104  EF86  F008         	goto	u8151
  2101   001108  EF88  F008         	goto	u8150
  2102   00110C                     u8151:
  2103   00110C  EF6C  F008         	goto	l6168
  2104   001110                     u8150:
  2105   001110                     
  2106                           ; BSR set to: 0
  2107   001110  C030  FFD9         	movff	strtof@s,fsr2l
  2108   001114  C031  FFDA         	movff	strtof@s+1,fsr2h
  2109   001118  50DF               	movf	indf2,w,c
  2110   00111A  6E34               	movwf	??_strtof^0,c
  2111   00111C  5034               	movf	??_strtof^0,w,c
  2112   00111E  6F68               	movwf	strtof@eexp& (0+255),b
  2113   001120  6B69               	clrf	(strtof@eexp+1)& (0+255),b
  2114   001122  0EF7               	movlw	247
  2115   001124  2568               	addwf	strtof@eexp& (0+255),w,b
  2116   001126  6E35               	movwf	(??_strtof+1)^0,c
  2117   001128  0EFF               	movlw	255
  2118   00112A  2169               	addwfc	(strtof@eexp+1)& (0+255),w,b
  2119   00112C  6E36               	movwf	(??_strtof+2)^0,c
  2120   00112E  5036               	movf	(??_strtof+2)^0,w,c
  2121   001130  E109               	bnz	u8160
  2122   001132  0E05               	movlw	5
  2123   001134  5C35               	subwf	(??_strtof+1)^0,w,c
  2124   001136  A0D8               	btfss	status,0,c
  2125   001138  EFA0  F008         	goto	u8161
  2126   00113C  EFA2  F008         	goto	u8160
  2127   001140                     u8161:
  2128   001140  EF6C  F008         	goto	l6168
  2129   001144                     u8160:
  2130   001144                     
  2131                           ; BSR set to: 0
  2132   001144  0E00               	movlw	0
  2133   001146  6F65               	movwf	strtof@flags& (0+255),b
  2134   001148                     
  2135                           ; BSR set to: 0
  2136   001148  0E2D               	movlw	45
  2137   00114A  1968               	xorwf	strtof@eexp& (0+255),w,b
  2138   00114C  1169               	iorwf	(strtof@eexp+1)& (0+255),w,b
  2139   00114E  A4D8               	btfss	status,2,c
  2140   001150  EFAC  F008         	goto	u8171
  2141   001154  EFAE  F008         	goto	u8170
  2142   001158                     u8171:
  2143   001158  EFB4  F008         	goto	l6184
  2144   00115C                     u8170:
  2145   00115C                     
  2146                           ; BSR set to: 0
  2147   00115C  0E01               	movlw	1
  2148   00115E  6F65               	movwf	strtof@flags& (0+255),b
  2149   001160                     l6182:
  2150                           
  2151                           ; BSR set to: 0
  2152   001160  4A30               	infsnz	strtof@s^0,f,c
  2153   001162  2A31               	incf	(strtof@s+1)^0,f,c
  2154   001164  EFC0  F008         	goto	l6188
  2155   001168                     l6184:
  2156                           
  2157                           ; BSR set to: 0
  2158   001168  0E2B               	movlw	43
  2159   00116A  1968               	xorwf	strtof@eexp& (0+255),w,b
  2160   00116C  1169               	iorwf	(strtof@eexp+1)& (0+255),w,b
  2161   00116E  A4D8               	btfss	status,2,c
  2162   001170  EFBC  F008         	goto	u8181
  2163   001174  EFBE  F008         	goto	u8180
  2164   001178                     u8181:
  2165   001178  EFC0  F008         	goto	l6188
  2166   00117C                     u8180:
  2167   00117C  EFB0  F008         	goto	l6182
  2168   001180                     l6188:
  2169                           
  2170                           ; BSR set to: 0
  2171   001180  0E00               	movlw	0
  2172   001182  6F6E               	movwf	strtof@i& (0+255),b
  2173   001184  EFC5  F008         	goto	l6192
  2174   001188                     l6190:
  2175                           
  2176                           ; BSR set to: 0
  2177   001188  2B6E               	incf	strtof@i& (0+255),f,b
  2178   00118A                     l6192:
  2179                           
  2180                           ; BSR set to: 0
  2181   00118A  516E               	movf	strtof@i& (0+255),w,b
  2182   00118C  2430               	addwf	strtof@s^0,w,c
  2183   00118E  6ED9               	movwf	fsr2l,c
  2184   001190  0E00               	movlw	0
  2185   001192  2031               	addwfc	(strtof@s+1)^0,w,c
  2186   001194  6EDA               	movwf	fsr2h,c
  2187   001196  50DF               	movf	indf2,w,c
  2188   001198  B4D8               	btfsc	status,2,c
  2189   00119A  EFD1  F008         	goto	u8191
  2190   00119E  EFD3  F008         	goto	u8190
  2191   0011A2                     u8191:
  2192   0011A2  EF03  F009         	goto	l6198
  2193   0011A6                     u8190:
  2194   0011A6                     
  2195                           ; BSR set to: 0
  2196   0011A6  516E               	movf	strtof@i& (0+255),w,b
  2197   0011A8  2430               	addwf	strtof@s^0,w,c
  2198   0011AA  6ED9               	movwf	fsr2l,c
  2199   0011AC  0E00               	movlw	0
  2200   0011AE  2031               	addwfc	(strtof@s+1)^0,w,c
  2201   0011B0  6EDA               	movwf	fsr2h,c
  2202   0011B2  50DF               	movf	indf2,w,c
  2203   0011B4  6E34               	movwf	??_strtof^0,c
  2204   0011B6  0E90               	movlw	low STR_18
  2205   0011B8  256E               	addwf	strtof@i& (0+255),w,b
  2206   0011BA  6EF6               	movwf	tblptrl,c
  2207   0011BC  6AF7               	clrf	tblptrh,c
  2208   0011BE  0E10               	movlw	high STR_18
  2209   0011C0  22F7               	addwfc	tblptrh,f,c
  2210   0011C2                     	if	0	;There are less than 3 active tblptr bytes
  2211   0011C2                     	endif
  2212   0011C2  0008               	tblrd		*
  2213   0011C4  50F5               	movf	tablat,w,c
  2214   0011C6  1834               	xorwf	??_strtof^0,w,c
  2215   0011C8  B4D8               	btfsc	status,2,c
  2216   0011CA  EFE9  F008         	goto	u8201
  2217   0011CE  EFEB  F008         	goto	u8200
  2218   0011D2                     u8201:
  2219   0011D2  EFC4  F008         	goto	l6190
  2220   0011D6                     u8200:
  2221   0011D6                     
  2222                           ; BSR set to: 0
  2223   0011D6  516E               	movf	strtof@i& (0+255),w,b
  2224   0011D8  2430               	addwf	strtof@s^0,w,c
  2225   0011DA  6ED9               	movwf	fsr2l,c
  2226   0011DC  0E00               	movlw	0
  2227   0011DE  2031               	addwfc	(strtof@s+1)^0,w,c
  2228   0011E0  6EDA               	movwf	fsr2h,c
  2229   0011E2  50DF               	movf	indf2,w,c
  2230   0011E4  6E34               	movwf	??_strtof^0,c
  2231   0011E6  0E87               	movlw	low STR_19
  2232   0011E8  256E               	addwf	strtof@i& (0+255),w,b
  2233   0011EA  6EF6               	movwf	tblptrl,c
  2234   0011EC  6AF7               	clrf	tblptrh,c
  2235   0011EE  0E10               	movlw	high STR_19
  2236   0011F0  22F7               	addwfc	tblptrh,f,c
  2237   0011F2                     	if	0	;There are less than 3 active tblptr bytes
  2238   0011F2                     	endif
  2239   0011F2  0008               	tblrd		*
  2240   0011F4  50F5               	movf	tablat,w,c
  2241   0011F6  1834               	xorwf	??_strtof^0,w,c
  2242   0011F8  B4D8               	btfsc	status,2,c
  2243   0011FA  EF01  F009         	goto	u8211
  2244   0011FE  EF03  F009         	goto	u8210
  2245   001202                     u8211:
  2246   001202  EFC4  F008         	goto	l6190
  2247   001206                     u8210:
  2248   001206                     l6198:
  2249                           
  2250                           ; BSR set to: 0
  2251   001206  0E02               	movlw	2
  2252   001208  656E               	cpfsgt	strtof@i& (0+255),b
  2253   00120A  EF09  F009         	goto	u8221
  2254   00120E  EF0B  F009         	goto	u8220
  2255   001212                     u8221:
  2256   001212  EF37  F009         	goto	l6210
  2257   001216                     u8220:
  2258   001216                     
  2259                           ; BSR set to: 0
  2260   001216  0E00               	movlw	0
  2261   001218  6F6A               	movwf	strtof@_u& (0+255),b
  2262   00121A  0E00               	movlw	0
  2263   00121C  6F6B               	movwf	(strtof@_u+1)& (0+255),b
  2264   00121E  0E80               	movlw	128
  2265   001220  6F6C               	movwf	(strtof@_u+2)& (0+255),b
  2266   001222  0E7F               	movlw	127
  2267   001224  6F6D               	movwf	(strtof@_u+3)& (0+255),b
  2268   001226                     
  2269                           ; BSR set to: 0
  2270   001226  5032               	movf	strtof@res^0,w,c
  2271   001228  1033               	iorwf	(strtof@res+1)^0,w,c
  2272   00122A  B4D8               	btfsc	status,2,c
  2273   00122C  EF1A  F009         	goto	u8231
  2274   001230  EF1C  F009         	goto	u8230
  2275   001234                     u8231:
  2276   001234  EF70  F010         	goto	l6556
  2277   001238                     u8230:
  2278   001238                     
  2279                           ; BSR set to: 0
  2280   001238  0E08               	movlw	8
  2281   00123A  196E               	xorwf	strtof@i& (0+255),w,b
  2282   00123C  B4D8               	btfsc	status,2,c
  2283   00123E  EF23  F009         	goto	u8241
  2284   001242  EF25  F009         	goto	u8240
  2285   001246                     u8241:
  2286   001246  EF27  F009         	goto	l6208
  2287   00124A                     u8240:
  2288   00124A                     
  2289                           ; BSR set to: 0
  2290   00124A  0E03               	movlw	3
  2291   00124C  6F6E               	movwf	strtof@i& (0+255),b
  2292   00124E                     l6208:
  2293                           
  2294                           ; BSR set to: 0
  2295   00124E  516E               	movf	strtof@i& (0+255),w,b
  2296   001250  2430               	addwf	strtof@s^0,w,c
  2297   001252  6E34               	movwf	??_strtof^0,c
  2298   001254  0E00               	movlw	0
  2299   001256  2031               	addwfc	(strtof@s+1)^0,w,c
  2300   001258  6E35               	movwf	(??_strtof+1)^0,c
  2301   00125A  C032  FFD9         	movff	strtof@res,fsr2l
  2302   00125E  C033  FFDA         	movff	strtof@res+1,fsr2h
  2303   001262  C034  FFDE         	movff	??_strtof,postinc2
  2304   001266  C035  FFDD         	movff	??_strtof+1,postdec2
  2305   00126A  EF70  F010         	goto	l6556
  2306   00126E                     l6210:
  2307                           
  2308                           ; BSR set to: 0
  2309   00126E  0E00               	movlw	0
  2310   001270  6F6E               	movwf	strtof@i& (0+255),b
  2311   001272  EF3C  F009         	goto	l6214
  2312   001276                     l6212:
  2313                           
  2314                           ; BSR set to: 0
  2315   001276  2B6E               	incf	strtof@i& (0+255),f,b
  2316   001278                     l6214:
  2317                           
  2318                           ; BSR set to: 0
  2319   001278  516E               	movf	strtof@i& (0+255),w,b
  2320   00127A  2430               	addwf	strtof@s^0,w,c
  2321   00127C  6ED9               	movwf	fsr2l,c
  2322   00127E  0E00               	movlw	0
  2323   001280  2031               	addwfc	(strtof@s+1)^0,w,c
  2324   001282  6EDA               	movwf	fsr2h,c
  2325   001284  50DF               	movf	indf2,w,c
  2326   001286  B4D8               	btfsc	status,2,c
  2327   001288  EF48  F009         	goto	u8251
  2328   00128C  EF4A  F009         	goto	u8250
  2329   001290                     u8251:
  2330   001290  EF7A  F009         	goto	l6220
  2331   001294                     u8250:
  2332   001294                     
  2333                           ; BSR set to: 0
  2334   001294  516E               	movf	strtof@i& (0+255),w,b
  2335   001296  2430               	addwf	strtof@s^0,w,c
  2336   001298  6ED9               	movwf	fsr2l,c
  2337   00129A  0E00               	movlw	0
  2338   00129C  2031               	addwfc	(strtof@s+1)^0,w,c
  2339   00129E  6EDA               	movwf	fsr2h,c
  2340   0012A0  50DF               	movf	indf2,w,c
  2341   0012A2  6E34               	movwf	??_strtof^0,c
  2342   0012A4  0EA1               	movlw	low STR_15
  2343   0012A6  256E               	addwf	strtof@i& (0+255),w,b
  2344   0012A8  6EF6               	movwf	tblptrl,c
  2345   0012AA  6AF7               	clrf	tblptrh,c
  2346   0012AC  0E10               	movlw	high STR_15
  2347   0012AE  22F7               	addwfc	tblptrh,f,c
  2348   0012B0                     	if	0	;There are less than 3 active tblptr bytes
  2349   0012B0                     	endif
  2350   0012B0  0008               	tblrd		*
  2351   0012B2  50F5               	movf	tablat,w,c
  2352   0012B4  1834               	xorwf	??_strtof^0,w,c
  2353   0012B6  B4D8               	btfsc	status,2,c
  2354   0012B8  EF60  F009         	goto	u8261
  2355   0012BC  EF62  F009         	goto	u8260
  2356   0012C0                     u8261:
  2357   0012C0  EF3B  F009         	goto	l6212
  2358   0012C4                     u8260:
  2359   0012C4                     
  2360                           ; BSR set to: 0
  2361   0012C4  516E               	movf	strtof@i& (0+255),w,b
  2362   0012C6  2430               	addwf	strtof@s^0,w,c
  2363   0012C8  6ED9               	movwf	fsr2l,c
  2364   0012CA  0E00               	movlw	0
  2365   0012CC  2031               	addwfc	(strtof@s+1)^0,w,c
  2366   0012CE  6EDA               	movwf	fsr2h,c
  2367   0012D0  50DF               	movf	indf2,w,c
  2368   0012D2  6E34               	movwf	??_strtof^0,c
  2369   0012D4  0E99               	movlw	low STR_24
  2370   0012D6  256E               	addwf	strtof@i& (0+255),w,b
  2371   0012D8  6EF6               	movwf	tblptrl,c
  2372   0012DA  6AF7               	clrf	tblptrh,c
  2373   0012DC  0E10               	movlw	high STR_24
  2374   0012DE  22F7               	addwfc	tblptrh,f,c
  2375   0012E0                     	if	0	;There are less than 3 active tblptr bytes
  2376   0012E0                     	endif
  2377   0012E0  0008               	tblrd		*
  2378   0012E2  50F5               	movf	tablat,w,c
  2379   0012E4  1834               	xorwf	??_strtof^0,w,c
  2380   0012E6  B4D8               	btfsc	status,2,c
  2381   0012E8  EF78  F009         	goto	u8271
  2382   0012EC  EF7A  F009         	goto	u8270
  2383   0012F0                     u8271:
  2384   0012F0  EF3B  F009         	goto	l6212
  2385   0012F4                     u8270:
  2386   0012F4                     l6220:
  2387                           
  2388                           ; BSR set to: 0
  2389   0012F4  0E03               	movlw	3
  2390   0012F6  196E               	xorwf	strtof@i& (0+255),w,b
  2391   0012F8  A4D8               	btfss	status,2,c
  2392   0012FA  EF81  F009         	goto	u8281
  2393   0012FE  EF83  F009         	goto	u8280
  2394   001302                     u8281:
  2395   001302  EFF2  F009         	goto	l6244
  2396   001306                     u8280:
  2397   001306                     
  2398                           ; BSR set to: 0
  2399   001306  0E1F               	movlw	low (STR_1+30)
  2400   001308  6E0B               	movwf	nanf@s^0,c
  2401   00130A  0E10               	movlw	high (STR_1+30)
  2402   00130C  6E0C               	movwf	(nanf@s+1)^0,c
  2403   00130E  ECA0  F027         	call	_nanf	;wreg free
  2404   001312  C00B  F06A         	movff	?_nanf,strtof@_u
  2405   001316  C00C  F06B         	movff	?_nanf+1,strtof@_u+1
  2406   00131A  C00D  F06C         	movff	?_nanf+2,strtof@_u+2
  2407   00131E  C00E  F06D         	movff	?_nanf+3,strtof@_u+3
  2408   001322  5032               	movf	strtof@res^0,w,c
  2409   001324  1033               	iorwf	(strtof@res+1)^0,w,c
  2410   001326  B4D8               	btfsc	status,2,c
  2411   001328  EF98  F009         	goto	u8291
  2412   00132C  EF9A  F009         	goto	u8290
  2413   001330                     u8291:
  2414   001330  EF70  F010         	goto	l6556
  2415   001334                     u8290:
  2416   001334  0100               	movlb	0	; () banked
  2417   001336  516E               	movf	strtof@i& (0+255),w,b
  2418   001338  2630               	addwf	strtof@s^0,f,c
  2419   00133A  0E00               	movlw	0
  2420   00133C  2231               	addwfc	(strtof@s+1)^0,f,c
  2421   00133E                     
  2422                           ; BSR set to: 0
  2423   00133E  C030  FFD9         	movff	strtof@s,fsr2l
  2424   001342  C031  FFDA         	movff	strtof@s+1,fsr2h
  2425   001346  0E28               	movlw	40
  2426   001348  18DE               	xorwf	postinc2,w,c
  2427   00134A  A4D8               	btfss	status,2,c
  2428   00134C  EFAA  F009         	goto	u8301
  2429   001350  EFAC  F009         	goto	u8300
  2430   001354                     u8301:
  2431   001354  EFE8  F009         	goto	l6242
  2432   001358                     u8300:
  2433   001358                     
  2434                           ; BSR set to: 0
  2435   001358  0E00               	movlw	0
  2436   00135A  6F6E               	movwf	strtof@i& (0+255),b
  2437   00135C  EFB1  F009         	goto	l6234
  2438   001360                     l6232:
  2439                           
  2440                           ; BSR set to: 0
  2441   001360  2B6E               	incf	strtof@i& (0+255),f,b
  2442   001362                     l6234:
  2443                           
  2444                           ; BSR set to: 0
  2445   001362  516E               	movf	strtof@i& (0+255),w,b
  2446   001364  2430               	addwf	strtof@s^0,w,c
  2447   001366  6ED9               	movwf	fsr2l,c
  2448   001368  0E00               	movlw	0
  2449   00136A  2031               	addwfc	(strtof@s+1)^0,w,c
  2450   00136C  6EDA               	movwf	fsr2h,c
  2451   00136E  50DF               	movf	indf2,w,c
  2452   001370  B4D8               	btfsc	status,2,c
  2453   001372  EFBD  F009         	goto	u8311
  2454   001376  EFBF  F009         	goto	u8310
  2455   00137A                     u8311:
  2456   00137A  EFCE  F009         	goto	l6238
  2457   00137E                     u8310:
  2458   00137E                     
  2459                           ; BSR set to: 0
  2460   00137E  516E               	movf	strtof@i& (0+255),w,b
  2461   001380  2430               	addwf	strtof@s^0,w,c
  2462   001382  6ED9               	movwf	fsr2l,c
  2463   001384  0E00               	movlw	0
  2464   001386  2031               	addwfc	(strtof@s+1)^0,w,c
  2465   001388  6EDA               	movwf	fsr2h,c
  2466   00138A  0E29               	movlw	41
  2467   00138C  18DE               	xorwf	postinc2,w,c
  2468   00138E  A4D8               	btfss	status,2,c
  2469   001390  EFCC  F009         	goto	u8321
  2470   001394  EFCE  F009         	goto	u8320
  2471   001398                     u8321:
  2472   001398  EFB0  F009         	goto	l6232
  2473   00139C                     u8320:
  2474   00139C                     l6238:
  2475                           
  2476                           ; BSR set to: 0
  2477   00139C  516E               	movf	strtof@i& (0+255),w,b
  2478   00139E  2430               	addwf	strtof@s^0,w,c
  2479   0013A0  6ED9               	movwf	fsr2l,c
  2480   0013A2  0E00               	movlw	0
  2481   0013A4  2031               	addwfc	(strtof@s+1)^0,w,c
  2482   0013A6  6EDA               	movwf	fsr2h,c
  2483   0013A8  0E29               	movlw	41
  2484   0013AA  18DE               	xorwf	postinc2,w,c
  2485   0013AC  A4D8               	btfss	status,2,c
  2486   0013AE  EFDB  F009         	goto	u8331
  2487   0013B2  EFDD  F009         	goto	u8330
  2488   0013B6                     u8331:
  2489   0013B6  EFE8  F009         	goto	l6242
  2490   0013BA                     u8330:
  2491   0013BA                     
  2492                           ; BSR set to: 0
  2493   0013BA  516E               	movf	strtof@i& (0+255),w,b
  2494   0013BC  6E34               	movwf	??_strtof^0,c
  2495   0013BE  6A35               	clrf	(??_strtof+1)^0,c
  2496   0013C0  0E01               	movlw	1
  2497   0013C2  2634               	addwf	??_strtof^0,f,c
  2498   0013C4  0E00               	movlw	0
  2499   0013C6  2235               	addwfc	(??_strtof+1)^0,f,c
  2500   0013C8  5034               	movf	??_strtof^0,w,c
  2501   0013CA  2630               	addwf	strtof@s^0,f,c
  2502   0013CC  5035               	movf	(??_strtof+1)^0,w,c
  2503   0013CE  2231               	addwfc	(strtof@s+1)^0,f,c
  2504   0013D0                     l6242:
  2505                           
  2506                           ; BSR set to: 0
  2507   0013D0  C032  FFD9         	movff	strtof@res,fsr2l
  2508   0013D4  C033  FFDA         	movff	strtof@res+1,fsr2h
  2509   0013D8  C030  FFDE         	movff	strtof@s,postinc2
  2510   0013DC  C031  FFDD         	movff	strtof@s+1,postdec2
  2511   0013E0  EF70  F010         	goto	l6556
  2512   0013E4                     l6244:
  2513                           
  2514                           ; BSR set to: 0
  2515   0013E4  0E00               	movlw	0
  2516   0013E6  6F69               	movwf	(strtof@eexp+1)& (0+255),b
  2517   0013E8  0E00               	movlw	0
  2518   0013EA  6F68               	movwf	strtof@eexp& (0+255),b
  2519   0013EC  0E00               	movlw	0
  2520   0013EE  6F6A               	movwf	strtof@_u& (0+255),b
  2521   0013F0  0E00               	movlw	0
  2522   0013F2  6F6B               	movwf	(strtof@_u+1)& (0+255),b
  2523   0013F4  0E00               	movlw	0
  2524   0013F6  6F6C               	movwf	(strtof@_u+2)& (0+255),b
  2525   0013F8  0E00               	movlw	0
  2526   0013FA  6F6D               	movwf	(strtof@_u+3)& (0+255),b
  2527   0013FC  0E00               	movlw	0
  2528   0013FE  6F60               	movwf	strtof@xpos& (0+255),b
  2529   001400  0E00               	movlw	0
  2530   001402  6F61               	movwf	strtof@dpos& (0+255),b
  2531   001404  0E00               	movlw	0
  2532   001406  6F67               	movwf	(strtof@expon+1)& (0+255),b
  2533   001408  0E00               	movlw	0
  2534   00140A  6F66               	movwf	strtof@expon& (0+255),b
  2535   00140C  0E00               	movlw	0
  2536   00140E  6F6E               	movwf	strtof@i& (0+255),b
  2537   001410  EF0B  F00A         	goto	l6248
  2538   001414                     l6246:
  2539                           
  2540                           ; BSR set to: 0
  2541   001414  2B6E               	incf	strtof@i& (0+255),f,b
  2542   001416                     l6248:
  2543                           
  2544                           ; BSR set to: 0
  2545   001416  516E               	movf	strtof@i& (0+255),w,b
  2546   001418  2430               	addwf	strtof@s^0,w,c
  2547   00141A  6ED9               	movwf	fsr2l,c
  2548   00141C  0E00               	movlw	0
  2549   00141E  2031               	addwfc	(strtof@s+1)^0,w,c
  2550   001420  6EDA               	movwf	fsr2h,c
  2551   001422  0E30               	movlw	48
  2552   001424  18DE               	xorwf	postinc2,w,c
  2553   001426  B4D8               	btfsc	status,2,c
  2554   001428  EF18  F00A         	goto	u8341
  2555   00142C  EF1A  F00A         	goto	u8340
  2556   001430                     u8341:
  2557   001430  EF0A  F00A         	goto	l6246
  2558   001434                     u8340:
  2559   001434                     
  2560                           ; BSR set to: 0
  2561   001434  516E               	movf	strtof@i& (0+255),w,b
  2562   001436  B4D8               	btfsc	status,2,c
  2563   001438  EF20  F00A         	goto	u8351
  2564   00143C  EF22  F00A         	goto	u8350
  2565   001440                     u8351:
  2566   001440  EFD9  F00D         	goto	l1136
  2567   001444                     u8350:
  2568   001444                     
  2569                           ; BSR set to: 0
  2570   001444  516E               	movf	strtof@i& (0+255),w,b
  2571   001446  2430               	addwf	strtof@s^0,w,c
  2572   001448  6ED9               	movwf	fsr2l,c
  2573   00144A  0E00               	movlw	0
  2574   00144C  2031               	addwfc	(strtof@s+1)^0,w,c
  2575   00144E  6EDA               	movwf	fsr2h,c
  2576   001450  0E78               	movlw	120
  2577   001452  18DE               	xorwf	postinc2,w,c
  2578   001454  B4D8               	btfsc	status,2,c
  2579   001456  EF2F  F00A         	goto	u8361
  2580   00145A  EF31  F00A         	goto	u8360
  2581   00145E                     u8361:
  2582   00145E  EF40  F00A         	goto	l6256
  2583   001462                     u8360:
  2584   001462                     
  2585                           ; BSR set to: 0
  2586   001462  516E               	movf	strtof@i& (0+255),w,b
  2587   001464  2430               	addwf	strtof@s^0,w,c
  2588   001466  6ED9               	movwf	fsr2l,c
  2589   001468  0E00               	movlw	0
  2590   00146A  2031               	addwfc	(strtof@s+1)^0,w,c
  2591   00146C  6EDA               	movwf	fsr2h,c
  2592   00146E  0E58               	movlw	88
  2593   001470  18DE               	xorwf	postinc2,w,c
  2594   001472  A4D8               	btfss	status,2,c
  2595   001474  EF3E  F00A         	goto	u8371
  2596   001478  EF40  F00A         	goto	u8370
  2597   00147C                     u8371:
  2598   00147C  EFD9  F00D         	goto	l1136
  2599   001480                     u8370:
  2600   001480                     l6256:
  2601                           
  2602                           ; BSR set to: 0
  2603   001480  516E               	movf	strtof@i& (0+255),w,b
  2604   001482  2430               	addwf	strtof@s^0,w,c
  2605   001484  6E34               	movwf	??_strtof^0,c
  2606   001486  0E00               	movlw	0
  2607   001488  2031               	addwfc	(strtof@s+1)^0,w,c
  2608   00148A  6E35               	movwf	(??_strtof+1)^0,c
  2609   00148C  0E01               	movlw	1
  2610   00148E  2434               	addwf	??_strtof^0,w,c
  2611   001490  6ED9               	movwf	fsr2l,c
  2612   001492  0E00               	movlw	0
  2613   001494  2035               	addwfc	(??_strtof+1)^0,w,c
  2614   001496  6EDA               	movwf	fsr2h,c
  2615   001498  50DF               	movf	indf2,w,c
  2616   00149A  6E36               	movwf	(??_strtof+2)^0,c
  2617   00149C  5036               	movf	(??_strtof+2)^0,w,c
  2618   00149E  6E0F               	movwf	isxdigit@c^0,c
  2619   0014A0  6A10               	clrf	(isxdigit@c+1)^0,c
  2620   0014A2  EC67  F025         	call	_isxdigit	;wreg free
  2621   0014A6  500F               	movf	?_isxdigit^0,w,c
  2622   0014A8  1010               	iorwf	(?_isxdigit+1)^0,w,c
  2623   0014AA  A4D8               	btfss	status,2,c
  2624   0014AC  EF5A  F00A         	goto	u8381
  2625   0014B0  EF5C  F00A         	goto	u8380
  2626   0014B4                     u8381:
  2627   0014B4  EF74  F00A         	goto	l1072
  2628   0014B8                     u8380:
  2629   0014B8  0100               	movlb	0	; () banked
  2630   0014BA  516E               	movf	strtof@i& (0+255),w,b
  2631   0014BC  2430               	addwf	strtof@s^0,w,c
  2632   0014BE  6E34               	movwf	??_strtof^0,c
  2633   0014C0  0E00               	movlw	0
  2634   0014C2  2031               	addwfc	(strtof@s+1)^0,w,c
  2635   0014C4  6E35               	movwf	(??_strtof+1)^0,c
  2636   0014C6  0E01               	movlw	1
  2637   0014C8  2434               	addwf	??_strtof^0,w,c
  2638   0014CA  6ED9               	movwf	fsr2l,c
  2639   0014CC  0E00               	movlw	0
  2640   0014CE  2035               	addwfc	(??_strtof+1)^0,w,c
  2641   0014D0  6EDA               	movwf	fsr2h,c
  2642   0014D2  0E2E               	movlw	46
  2643   0014D4  18DE               	xorwf	postinc2,w,c
  2644   0014D6  B4D8               	btfsc	status,2,c
  2645   0014D8  EF70  F00A         	goto	u8391
  2646   0014DC  EF72  F00A         	goto	u8390
  2647   0014E0                     u8391:
  2648   0014E0  EF74  F00A         	goto	l1072
  2649   0014E4                     u8390:
  2650   0014E4  EFFB  F00C         	goto	l6396
  2651   0014E8                     l1072:
  2652   0014E8  C06E  F060         	movff	strtof@i,strtof@xpos
  2653   0014EC                     l6262:
  2654   0014EC  0100               	movlb	0	; () banked
  2655   0014EE  2B6E               	incf	strtof@i& (0+255),f,b
  2656   0014F0                     
  2657                           ; BSR set to: 0
  2658   0014F0  516E               	movf	strtof@i& (0+255),w,b
  2659   0014F2  2430               	addwf	strtof@s^0,w,c
  2660   0014F4  6ED9               	movwf	fsr2l,c
  2661   0014F6  0E00               	movlw	0
  2662   0014F8  2031               	addwfc	(strtof@s+1)^0,w,c
  2663   0014FA  6EDA               	movwf	fsr2h,c
  2664   0014FC  0E30               	movlw	48
  2665   0014FE  18DE               	xorwf	postinc2,w,c
  2666   001500  B4D8               	btfsc	status,2,c
  2667   001502  EF85  F00A         	goto	u8401
  2668   001506  EF87  F00A         	goto	u8400
  2669   00150A                     u8401:
  2670   00150A  EF76  F00A         	goto	l6262
  2671   00150E                     u8400:
  2672   00150E                     l6268:
  2673                           
  2674                           ; BSR set to: 0
  2675   00150E  516E               	movf	strtof@i& (0+255),w,b
  2676   001510  2430               	addwf	strtof@s^0,w,c
  2677   001512  6ED9               	movwf	fsr2l,c
  2678   001514  0E00               	movlw	0
  2679   001516  2031               	addwfc	(strtof@s+1)^0,w,c
  2680   001518  6EDA               	movwf	fsr2h,c
  2681   00151A  0E70               	movlw	112
  2682   00151C  18DE               	xorwf	postinc2,w,c
  2683   00151E  B4D8               	btfsc	status,2,c
  2684   001520  EF94  F00A         	goto	u8411
  2685   001524  EF96  F00A         	goto	u8410
  2686   001528                     u8411:
  2687   001528  EF0F  F00C         	goto	l6336
  2688   00152C                     u8410:
  2689   00152C                     
  2690                           ; BSR set to: 0
  2691   00152C  516E               	movf	strtof@i& (0+255),w,b
  2692   00152E  2430               	addwf	strtof@s^0,w,c
  2693   001530  6ED9               	movwf	fsr2l,c
  2694   001532  0E00               	movlw	0
  2695   001534  2031               	addwfc	(strtof@s+1)^0,w,c
  2696   001536  6EDA               	movwf	fsr2h,c
  2697   001538  0E50               	movlw	80
  2698   00153A  18DE               	xorwf	postinc2,w,c
  2699   00153C  A4D8               	btfss	status,2,c
  2700   00153E  EFA3  F00A         	goto	u8421
  2701   001542  EFA5  F00A         	goto	u8420
  2702   001546                     u8421:
  2703   001546  EFA7  F00A         	goto	l6274
  2704   00154A                     u8420:
  2705   00154A  EF0F  F00C         	goto	l6336
  2706   00154E                     l6274:
  2707                           
  2708                           ; BSR set to: 0
  2709   00154E  516E               	movf	strtof@i& (0+255),w,b
  2710   001550  2430               	addwf	strtof@s^0,w,c
  2711   001552  6ED9               	movwf	fsr2l,c
  2712   001554  0E00               	movlw	0
  2713   001556  2031               	addwfc	(strtof@s+1)^0,w,c
  2714   001558  6EDA               	movwf	fsr2h,c
  2715   00155A  0E2E               	movlw	46
  2716   00155C  18DE               	xorwf	postinc2,w,c
  2717   00155E  A4D8               	btfss	status,2,c
  2718   001560  EFB4  F00A         	goto	u8431
  2719   001564  EFB6  F00A         	goto	u8430
  2720   001568                     u8431:
  2721   001568  EFBC  F00A         	goto	l6282
  2722   00156C                     u8430:
  2723   00156C                     
  2724                           ; BSR set to: 0
  2725   00156C  8965               	bsf	strtof@flags& (0+255),4,b
  2726   00156E                     
  2727                           ; BSR set to: 0
  2728   00156E  C06E  F061         	movff	strtof@i,strtof@dpos
  2729   001572  2B6E               	incf	strtof@i& (0+255),f,b
  2730   001574  EF0F  F00C         	goto	l6336
  2731   001578                     l6282:
  2732                           
  2733                           ; BSR set to: 0
  2734   001578  516E               	movf	strtof@i& (0+255),w,b
  2735   00157A  2430               	addwf	strtof@s^0,w,c
  2736   00157C  6ED9               	movwf	fsr2l,c
  2737   00157E  0E00               	movlw	0
  2738   001580  2031               	addwfc	(strtof@s+1)^0,w,c
  2739   001582  6EDA               	movwf	fsr2h,c
  2740   001584  50DF               	movf	indf2,w,c
  2741   001586  6E34               	movwf	??_strtof^0,c
  2742   001588  5034               	movf	??_strtof^0,w,c
  2743   00158A  6E0F               	movwf	isxdigit@c^0,c
  2744   00158C  6A10               	clrf	(isxdigit@c+1)^0,c
  2745   00158E  EC67  F025         	call	_isxdigit	;wreg free
  2746   001592  500F               	movf	?_isxdigit^0,w,c
  2747   001594  1010               	iorwf	(?_isxdigit+1)^0,w,c
  2748   001596  B4D8               	btfsc	status,2,c
  2749   001598  EFD0  F00A         	goto	u8441
  2750   00159C  EFD2  F00A         	goto	u8440
  2751   0015A0                     u8441:
  2752   0015A0  EFFB  F00C         	goto	l6396
  2753   0015A4                     u8440:
  2754   0015A4  0E00               	movlw	0
  2755   0015A6  0100               	movlb	0	; () banked
  2756   0015A8  6F64               	movwf	strtof@digit& (0+255),b
  2757   0015AA                     
  2758                           ; BSR set to: 0
  2759   0015AA  516E               	movf	strtof@i& (0+255),w,b
  2760   0015AC  2430               	addwf	strtof@s^0,w,c
  2761   0015AE  6ED9               	movwf	fsr2l,c
  2762   0015B0  0E00               	movlw	0
  2763   0015B2  2031               	addwfc	(strtof@s+1)^0,w,c
  2764   0015B4  6EDA               	movwf	fsr2h,c
  2765   0015B6  50DF               	movf	indf2,w,c
  2766   0015B8  6E34               	movwf	??_strtof^0,c
  2767   0015BA  0ED0               	movlw	208
  2768   0015BC  2434               	addwf	??_strtof^0,w,c
  2769   0015BE  6E35               	movwf	(??_strtof+1)^0,c
  2770   0015C0  6A36               	clrf	(??_strtof+2)^0,c
  2771   0015C2  0EFF               	movlw	255
  2772   0015C4  2236               	addwfc	(??_strtof+2)^0,f,c
  2773   0015C6  5036               	movf	(??_strtof+2)^0,w,c
  2774   0015C8  E107               	bnz	u8451
  2775   0015CA  0E0A               	movlw	10
  2776   0015CC  5C35               	subwf	(??_strtof+1)^0,w,c
  2777   0015CE  B0D8               	btfsc	status,0,c
  2778   0015D0  EFEC  F00A         	goto	u8451
  2779   0015D4  EFEE  F00A         	goto	u8450
  2780   0015D8                     u8451:
  2781   0015D8  EFF9  F00A         	goto	l6292
  2782   0015DC                     u8450:
  2783   0015DC                     
  2784                           ; BSR set to: 0
  2785   0015DC  516E               	movf	strtof@i& (0+255),w,b
  2786   0015DE  2430               	addwf	strtof@s^0,w,c
  2787   0015E0  6ED9               	movwf	fsr2l,c
  2788   0015E2  0E00               	movlw	0
  2789   0015E4  2031               	addwfc	(strtof@s+1)^0,w,c
  2790   0015E6  6EDA               	movwf	fsr2h,c
  2791   0015E8  50DF               	movf	indf2,w,c
  2792   0015EA  0FD0               	addlw	208
  2793   0015EC  6F64               	movwf	strtof@digit& (0+255),b
  2794   0015EE  EF0A  F00B         	goto	l6294
  2795   0015F2                     l6292:
  2796                           
  2797                           ; BSR set to: 0
  2798   0015F2  516E               	movf	strtof@i& (0+255),w,b
  2799   0015F4  2430               	addwf	strtof@s^0,w,c
  2800   0015F6  6ED9               	movwf	fsr2l,c
  2801   0015F8  0E00               	movlw	0
  2802   0015FA  2031               	addwfc	(strtof@s+1)^0,w,c
  2803   0015FC  6EDA               	movwf	fsr2h,c
  2804   0015FE  50DF               	movf	indf2,w,c
  2805   001600  6E34               	movwf	??_strtof^0,c
  2806   001602  5034               	movf	??_strtof^0,w,c
  2807   001604  6E0F               	movwf	toupper@c^0,c
  2808   001606  6A10               	clrf	(toupper@c+1)^0,c
  2809   001608  ECF0  F026         	call	_toupper	;wreg free
  2810   00160C  500F               	movf	?_toupper^0,w,c
  2811   00160E  0FC9               	addlw	201
  2812   001610  0100               	movlb	0	; () banked
  2813   001612  6F64               	movwf	strtof@digit& (0+255),b
  2814   001614                     l6294:
  2815                           
  2816                           ; BSR set to: 0
  2817   001614  BF69               	btfsc	(strtof@eexp+1)& (0+255),7,b
  2818   001616  EF18  F00B         	goto	u8460
  2819   00161A  5169               	movf	(strtof@eexp+1)& (0+255),w,b
  2820   00161C  E107               	bnz	u8461
  2821   00161E  0E08               	movlw	8
  2822   001620  5D68               	subwf	strtof@eexp& (0+255),w,b
  2823   001622  B0D8               	btfsc	status,0,c
  2824   001624  EF16  F00B         	goto	u8461
  2825   001628  EF18  F00B         	goto	u8460
  2826   00162C                     u8461:
  2827   00162C  EF37  F00B         	goto	l6298
  2828   001630                     u8460:
  2829   001630                     
  2830                           ; BSR set to: 0
  2831   001630  5168               	movf	strtof@eexp& (0+255),w,b
  2832   001632  0807               	sublw	7
  2833   001634  6E34               	movwf	??_strtof^0,c
  2834   001636  90D8               	bcf	status,0,c
  2835   001638  3634               	rlcf	??_strtof^0,f,c
  2836   00163A  90D8               	bcf	status,0,c
  2837   00163C  3634               	rlcf	??_strtof^0,f,c
  2838   00163E  C064  F035         	movff	strtof@digit,??_strtof+1
  2839   001642  6A36               	clrf	(??_strtof+2)^0,c
  2840   001644  6A37               	clrf	(??_strtof+3)^0,c
  2841   001646  6A38               	clrf	(??_strtof+4)^0,c
  2842   001648  2A34               	incf	??_strtof^0,f,c
  2843   00164A  EF2C  F00B         	goto	u8470
  2844   00164E                     u8475:
  2845   00164E  90D8               	bcf	status,0,c
  2846   001650  3635               	rlcf	(??_strtof+1)^0,f,c
  2847   001652  3636               	rlcf	(??_strtof+2)^0,f,c
  2848   001654  3637               	rlcf	(??_strtof+3)^0,f,c
  2849   001656  3638               	rlcf	(??_strtof+4)^0,f,c
  2850   001658                     u8470:
  2851   001658  2E34               	decfsz	??_strtof^0,f,c
  2852   00165A  EF27  F00B         	goto	u8475
  2853   00165E  5035               	movf	(??_strtof+1)^0,w,c
  2854   001660  136A               	iorwf	strtof@_u& (0+255),f,b
  2855   001662  5036               	movf	(??_strtof+2)^0,w,c
  2856   001664  136B               	iorwf	(strtof@_u+1)& (0+255),f,b
  2857   001666  5037               	movf	(??_strtof+3)^0,w,c
  2858   001668  136C               	iorwf	(strtof@_u+2)& (0+255),f,b
  2859   00166A  5038               	movf	(??_strtof+4)^0,w,c
  2860   00166C  136D               	iorwf	(strtof@_u+3)& (0+255),f,b
  2861   00166E                     l6298:
  2862                           
  2863                           ; BSR set to: 0
  2864   00166E  4B68               	infsnz	strtof@eexp& (0+255),f,b
  2865   001670  2B69               	incf	(strtof@eexp+1)& (0+255),f,b
  2866   001672                     
  2867                           ; BSR set to: 0
  2868   001672  0E04               	movlw	4
  2869   001674  2766               	addwf	strtof@expon& (0+255),f,b
  2870   001676  0E00               	movlw	0
  2871   001678  2367               	addwfc	(strtof@expon+1)& (0+255),f,b
  2872   00167A                     
  2873                           ; BSR set to: 0
  2874   00167A  2B6E               	incf	strtof@i& (0+255),f,b
  2875   00167C  EF87  F00A         	goto	l6268
  2876   001680                     l6304:
  2877                           
  2878                           ; BSR set to: 0
  2879   001680  516E               	movf	strtof@i& (0+255),w,b
  2880   001682  2430               	addwf	strtof@s^0,w,c
  2881   001684  6ED9               	movwf	fsr2l,c
  2882   001686  0E00               	movlw	0
  2883   001688  2031               	addwfc	(strtof@s+1)^0,w,c
  2884   00168A  6EDA               	movwf	fsr2h,c
  2885   00168C  0E30               	movlw	48
  2886   00168E  18DE               	xorwf	postinc2,w,c
  2887   001690  A4D8               	btfss	status,2,c
  2888   001692  EF4D  F00B         	goto	u8481
  2889   001696  EF4F  F00B         	goto	u8480
  2890   00169A                     u8481:
  2891   00169A  EF5E  F00B         	goto	l6310
  2892   00169E                     u8480:
  2893   00169E                     
  2894                           ; BSR set to: 0
  2895   00169E  5168               	movf	strtof@eexp& (0+255),w,b
  2896   0016A0  1169               	iorwf	(strtof@eexp+1)& (0+255),w,b
  2897   0016A2  A4D8               	btfss	status,2,c
  2898   0016A4  EF56  F00B         	goto	u8491
  2899   0016A8  EF58  F00B         	goto	u8490
  2900   0016AC                     u8491:
  2901   0016AC  EF5E  F00B         	goto	l6310
  2902   0016B0                     u8490:
  2903   0016B0                     
  2904                           ; BSR set to: 0
  2905   0016B0  0EFC               	movlw	252
  2906   0016B2  2766               	addwf	strtof@expon& (0+255),f,b
  2907   0016B4  0EFF               	movlw	255
  2908   0016B6  2367               	addwfc	(strtof@expon+1)& (0+255),f,b
  2909   0016B8  EF0E  F00C         	goto	l6334
  2910   0016BC                     l6310:
  2911                           
  2912                           ; BSR set to: 0
  2913   0016BC  516E               	movf	strtof@i& (0+255),w,b
  2914   0016BE  2430               	addwf	strtof@s^0,w,c
  2915   0016C0  6ED9               	movwf	fsr2l,c
  2916   0016C2  0E00               	movlw	0
  2917   0016C4  2031               	addwfc	(strtof@s+1)^0,w,c
  2918   0016C6  6EDA               	movwf	fsr2h,c
  2919   0016C8  50DF               	movf	indf2,w,c
  2920   0016CA  6E34               	movwf	??_strtof^0,c
  2921   0016CC  5034               	movf	??_strtof^0,w,c
  2922   0016CE  6E0F               	movwf	isxdigit@c^0,c
  2923   0016D0  6A10               	clrf	(isxdigit@c+1)^0,c
  2924   0016D2  EC67  F025         	call	_isxdigit	;wreg free
  2925   0016D6  500F               	movf	?_isxdigit^0,w,c
  2926   0016D8  1010               	iorwf	(?_isxdigit+1)^0,w,c
  2927   0016DA  B4D8               	btfsc	status,2,c
  2928   0016DC  EF72  F00B         	goto	u8501
  2929   0016E0  EF74  F00B         	goto	u8500
  2930   0016E4                     u8501:
  2931   0016E4  EFDD  F00B         	goto	l6328
  2932   0016E8                     u8500:
  2933   0016E8  0E00               	movlw	0
  2934   0016EA  0100               	movlb	0	; () banked
  2935   0016EC  6F64               	movwf	strtof@digit& (0+255),b
  2936   0016EE                     
  2937                           ; BSR set to: 0
  2938   0016EE  516E               	movf	strtof@i& (0+255),w,b
  2939   0016F0  2430               	addwf	strtof@s^0,w,c
  2940   0016F2  6ED9               	movwf	fsr2l,c
  2941   0016F4  0E00               	movlw	0
  2942   0016F6  2031               	addwfc	(strtof@s+1)^0,w,c
  2943   0016F8  6EDA               	movwf	fsr2h,c
  2944   0016FA  50DF               	movf	indf2,w,c
  2945   0016FC  6E34               	movwf	??_strtof^0,c
  2946   0016FE  0ED0               	movlw	208
  2947   001700  2434               	addwf	??_strtof^0,w,c
  2948   001702  6E35               	movwf	(??_strtof+1)^0,c
  2949   001704  6A36               	clrf	(??_strtof+2)^0,c
  2950   001706  0EFF               	movlw	255
  2951   001708  2236               	addwfc	(??_strtof+2)^0,f,c
  2952   00170A  5036               	movf	(??_strtof+2)^0,w,c
  2953   00170C  E107               	bnz	u8511
  2954   00170E  0E0A               	movlw	10
  2955   001710  5C35               	subwf	(??_strtof+1)^0,w,c
  2956   001712  B0D8               	btfsc	status,0,c
  2957   001714  EF8E  F00B         	goto	u8511
  2958   001718  EF90  F00B         	goto	u8510
  2959   00171C                     u8511:
  2960   00171C  EF9B  F00B         	goto	l6320
  2961   001720                     u8510:
  2962   001720                     
  2963                           ; BSR set to: 0
  2964   001720  516E               	movf	strtof@i& (0+255),w,b
  2965   001722  2430               	addwf	strtof@s^0,w,c
  2966   001724  6ED9               	movwf	fsr2l,c
  2967   001726  0E00               	movlw	0
  2968   001728  2031               	addwfc	(strtof@s+1)^0,w,c
  2969   00172A  6EDA               	movwf	fsr2h,c
  2970   00172C  50DF               	movf	indf2,w,c
  2971   00172E  0FD0               	addlw	208
  2972   001730  6F64               	movwf	strtof@digit& (0+255),b
  2973   001732  EFAC  F00B         	goto	l6322
  2974   001736                     l6320:
  2975                           
  2976                           ; BSR set to: 0
  2977   001736  516E               	movf	strtof@i& (0+255),w,b
  2978   001738  2430               	addwf	strtof@s^0,w,c
  2979   00173A  6ED9               	movwf	fsr2l,c
  2980   00173C  0E00               	movlw	0
  2981   00173E  2031               	addwfc	(strtof@s+1)^0,w,c
  2982   001740  6EDA               	movwf	fsr2h,c
  2983   001742  50DF               	movf	indf2,w,c
  2984   001744  6E34               	movwf	??_strtof^0,c
  2985   001746  5034               	movf	??_strtof^0,w,c
  2986   001748  6E0F               	movwf	toupper@c^0,c
  2987   00174A  6A10               	clrf	(toupper@c+1)^0,c
  2988   00174C  ECF0  F026         	call	_toupper	;wreg free
  2989   001750  500F               	movf	?_toupper^0,w,c
  2990   001752  0FC9               	addlw	201
  2991   001754  0100               	movlb	0	; () banked
  2992   001756  6F64               	movwf	strtof@digit& (0+255),b
  2993   001758                     l6322:
  2994                           
  2995                           ; BSR set to: 0
  2996   001758  BF69               	btfsc	(strtof@eexp+1)& (0+255),7,b
  2997   00175A  EFBA  F00B         	goto	u8520
  2998   00175E  5169               	movf	(strtof@eexp+1)& (0+255),w,b
  2999   001760  E107               	bnz	u8521
  3000   001762  0E08               	movlw	8
  3001   001764  5D68               	subwf	strtof@eexp& (0+255),w,b
  3002   001766  B0D8               	btfsc	status,0,c
  3003   001768  EFB8  F00B         	goto	u8521
  3004   00176C  EFBA  F00B         	goto	u8520
  3005   001770                     u8521:
  3006   001770  EFD9  F00B         	goto	l6326
  3007   001774                     u8520:
  3008   001774                     
  3009                           ; BSR set to: 0
  3010   001774  5168               	movf	strtof@eexp& (0+255),w,b
  3011   001776  0807               	sublw	7
  3012   001778  6E34               	movwf	??_strtof^0,c
  3013   00177A  90D8               	bcf	status,0,c
  3014   00177C  3634               	rlcf	??_strtof^0,f,c
  3015   00177E  90D8               	bcf	status,0,c
  3016   001780  3634               	rlcf	??_strtof^0,f,c
  3017   001782  C064  F035         	movff	strtof@digit,??_strtof+1
  3018   001786  6A36               	clrf	(??_strtof+2)^0,c
  3019   001788  6A37               	clrf	(??_strtof+3)^0,c
  3020   00178A  6A38               	clrf	(??_strtof+4)^0,c
  3021   00178C  2A34               	incf	??_strtof^0,f,c
  3022   00178E  EFCE  F00B         	goto	u8530
  3023   001792                     u8535:
  3024   001792  90D8               	bcf	status,0,c
  3025   001794  3635               	rlcf	(??_strtof+1)^0,f,c
  3026   001796  3636               	rlcf	(??_strtof+2)^0,f,c
  3027   001798  3637               	rlcf	(??_strtof+3)^0,f,c
  3028   00179A  3638               	rlcf	(??_strtof+4)^0,f,c
  3029   00179C                     u8530:
  3030   00179C  2E34               	decfsz	??_strtof^0,f,c
  3031   00179E  EFC9  F00B         	goto	u8535
  3032   0017A2  5035               	movf	(??_strtof+1)^0,w,c
  3033   0017A4  136A               	iorwf	strtof@_u& (0+255),f,b
  3034   0017A6  5036               	movf	(??_strtof+2)^0,w,c
  3035   0017A8  136B               	iorwf	(strtof@_u+1)& (0+255),f,b
  3036   0017AA  5037               	movf	(??_strtof+3)^0,w,c
  3037   0017AC  136C               	iorwf	(strtof@_u+2)& (0+255),f,b
  3038   0017AE  5038               	movf	(??_strtof+4)^0,w,c
  3039   0017B0  136D               	iorwf	(strtof@_u+3)& (0+255),f,b
  3040   0017B2                     l6326:
  3041                           
  3042                           ; BSR set to: 0
  3043   0017B2  4B68               	infsnz	strtof@eexp& (0+255),f,b
  3044   0017B4  2B69               	incf	(strtof@eexp+1)& (0+255),f,b
  3045   0017B6  EF0E  F00C         	goto	l6334
  3046   0017BA                     l6328:
  3047   0017BA  0100               	movlb	0	; () banked
  3048   0017BC  516E               	movf	strtof@i& (0+255),w,b
  3049   0017BE  6E34               	movwf	??_strtof^0,c
  3050   0017C0  6A35               	clrf	(??_strtof+1)^0,c
  3051   0017C2  5161               	movf	strtof@dpos& (0+255),w,b
  3052   0017C4  6E36               	movwf	(??_strtof+2)^0,c
  3053   0017C6  6A37               	clrf	(??_strtof+3)^0,c
  3054   0017C8  0E01               	movlw	1
  3055   0017CA  2636               	addwf	(??_strtof+2)^0,f,c
  3056   0017CC  0E00               	movlw	0
  3057   0017CE  2237               	addwfc	(??_strtof+3)^0,f,c
  3058   0017D0  5034               	movf	??_strtof^0,w,c
  3059   0017D2  1836               	xorwf	(??_strtof+2)^0,w,c
  3060   0017D4  E107               	bnz	u8541
  3061   0017D6  5035               	movf	(??_strtof+1)^0,w,c
  3062   0017D8  1837               	xorwf	(??_strtof+3)^0,w,c
  3063   0017DA  A4D8               	btfss	status,2,c
  3064   0017DC  EFF2  F00B         	goto	u8541
  3065   0017E0  EFF4  F00B         	goto	u8540
  3066   0017E4                     u8541:
  3067   0017E4  EF16  F00C         	goto	l6338
  3068   0017E8                     u8540:
  3069   0017E8                     
  3070                           ; BSR set to: 0
  3071   0017E8  5161               	movf	strtof@dpos& (0+255),w,b
  3072   0017EA  6E34               	movwf	??_strtof^0,c
  3073   0017EC  6A35               	clrf	(??_strtof+1)^0,c
  3074   0017EE  5160               	movf	strtof@xpos& (0+255),w,b
  3075   0017F0  6E36               	movwf	(??_strtof+2)^0,c
  3076   0017F2  6A37               	clrf	(??_strtof+3)^0,c
  3077   0017F4  0E01               	movlw	1
  3078   0017F6  2636               	addwf	(??_strtof+2)^0,f,c
  3079   0017F8  0E00               	movlw	0
  3080   0017FA  2237               	addwfc	(??_strtof+3)^0,f,c
  3081   0017FC  5034               	movf	??_strtof^0,w,c
  3082   0017FE  1836               	xorwf	(??_strtof+2)^0,w,c
  3083   001800  E107               	bnz	u8551
  3084   001802  5035               	movf	(??_strtof+1)^0,w,c
  3085   001804  1837               	xorwf	(??_strtof+3)^0,w,c
  3086   001806  A4D8               	btfss	status,2,c
  3087   001808  EF08  F00C         	goto	u8551
  3088   00180C  EF0A  F00C         	goto	u8550
  3089   001810                     u8551:
  3090   001810  EF16  F00C         	goto	l6338
  3091   001814                     u8550:
  3092   001814                     
  3093                           ; BSR set to: 0
  3094   001814  C060  F06E         	movff	strtof@xpos,strtof@i
  3095   001818  EFFB  F00C         	goto	l6396
  3096   00181C                     l6334:
  3097                           
  3098                           ; BSR set to: 0
  3099   00181C  2B6E               	incf	strtof@i& (0+255),f,b
  3100   00181E                     l6336:
  3101                           
  3102                           ; BSR set to: 0
  3103   00181E  B965               	btfsc	strtof@flags& (0+255),4,b
  3104   001820  EF14  F00C         	goto	u8561
  3105   001824  EF16  F00C         	goto	u8560
  3106   001828                     u8561:
  3107   001828  EF40  F00B         	goto	l6304
  3108   00182C                     u8560:
  3109   00182C                     l6338:
  3110                           
  3111                           ; BSR set to: 0
  3112   00182C  516E               	movf	strtof@i& (0+255),w,b
  3113   00182E  2630               	addwf	strtof@s^0,f,c
  3114   001830  0E00               	movlw	0
  3115   001832  2231               	addwfc	(strtof@s+1)^0,f,c
  3116   001834                     
  3117                           ; BSR set to: 0
  3118   001834  0E00               	movlw	0
  3119   001836  6F6E               	movwf	strtof@i& (0+255),b
  3120   001838                     
  3121                           ; BSR set to: 0
  3122   001838  C030  FFD9         	movff	strtof@s,fsr2l
  3123   00183C  C031  FFDA         	movff	strtof@s+1,fsr2h
  3124   001840  0E70               	movlw	112
  3125   001842  18DE               	xorwf	postinc2,w,c
  3126   001844  B4D8               	btfsc	status,2,c
  3127   001846  EF27  F00C         	goto	u8571
  3128   00184A  EF29  F00C         	goto	u8570
  3129   00184E                     u8571:
  3130   00184E  EF38  F00C         	goto	l6348
  3131   001852                     u8570:
  3132   001852                     
  3133                           ; BSR set to: 0
  3134   001852  C030  FFD9         	movff	strtof@s,fsr2l
  3135   001856  C031  FFDA         	movff	strtof@s+1,fsr2h
  3136   00185A  0E50               	movlw	80
  3137   00185C  18DE               	xorwf	postinc2,w,c
  3138   00185E  B4D8               	btfsc	status,2,c
  3139   001860  EF34  F00C         	goto	u8581
  3140   001864  EF36  F00C         	goto	u8580
  3141   001868                     u8581:
  3142   001868  EF38  F00C         	goto	l6348
  3143   00186C                     u8580:
  3144   00186C  EFFB  F00C         	goto	l6396
  3145   001870                     l6348:
  3146                           
  3147                           ; BSR set to: 0
  3148   001870  2B6E               	incf	strtof@i& (0+255),f,b
  3149   001872                     
  3150                           ; BSR set to: 0
  3151   001872  EE20 F001          	lfsr	2,1
  3152   001876  5030               	movf	strtof@s^0,w,c
  3153   001878  26D9               	addwf	fsr2l,f,c
  3154   00187A  5031               	movf	(strtof@s+1)^0,w,c
  3155   00187C  22DA               	addwfc	fsr2h,f,c
  3156   00187E  0E2B               	movlw	43
  3157   001880  18DE               	xorwf	postinc2,w,c
  3158   001882  A4D8               	btfss	status,2,c
  3159   001884  EF46  F00C         	goto	u8591
  3160   001888  EF48  F00C         	goto	u8590
  3161   00188C                     u8591:
  3162   00188C  EF4B  F00C         	goto	l6354
  3163   001890                     u8590:
  3164   001890                     
  3165                           ; BSR set to: 0
  3166   001890  2B6E               	incf	strtof@i& (0+255),f,b
  3167   001892  EF5C  F00C         	goto	l6360
  3168   001896                     l6354:
  3169                           
  3170                           ; BSR set to: 0
  3171   001896  EE20 F001          	lfsr	2,1
  3172   00189A  5030               	movf	strtof@s^0,w,c
  3173   00189C  26D9               	addwf	fsr2l,f,c
  3174   00189E  5031               	movf	(strtof@s+1)^0,w,c
  3175   0018A0  22DA               	addwfc	fsr2h,f,c
  3176   0018A2  0E2D               	movlw	45
  3177   0018A4  18DE               	xorwf	postinc2,w,c
  3178   0018A6  A4D8               	btfss	status,2,c
  3179   0018A8  EF58  F00C         	goto	u8601
  3180   0018AC  EF5A  F00C         	goto	u8600
  3181   0018B0                     u8601:
  3182   0018B0  EF5C  F00C         	goto	l6360
  3183   0018B4                     u8600:
  3184   0018B4                     
  3185                           ; BSR set to: 0
  3186   0018B4  8765               	bsf	strtof@flags& (0+255),3,b
  3187   0018B6  2B6E               	incf	strtof@i& (0+255),f,b
  3188   0018B8                     l6360:
  3189                           
  3190                           ; BSR set to: 0
  3191   0018B8  516E               	movf	strtof@i& (0+255),w,b
  3192   0018BA  2430               	addwf	strtof@s^0,w,c
  3193   0018BC  6ED9               	movwf	fsr2l,c
  3194   0018BE  0E00               	movlw	0
  3195   0018C0  2031               	addwfc	(strtof@s+1)^0,w,c
  3196   0018C2  6EDA               	movwf	fsr2h,c
  3197   0018C4  50DF               	movf	indf2,w,c
  3198   0018C6  6E34               	movwf	??_strtof^0,c
  3199   0018C8  0ED0               	movlw	208
  3200   0018CA  2434               	addwf	??_strtof^0,w,c
  3201   0018CC  6E35               	movwf	(??_strtof+1)^0,c
  3202   0018CE  6A36               	clrf	(??_strtof+2)^0,c
  3203   0018D0  0EFF               	movlw	255
  3204   0018D2  2236               	addwfc	(??_strtof+2)^0,f,c
  3205   0018D4  5036               	movf	(??_strtof+2)^0,w,c
  3206   0018D6  E109               	bnz	u8610
  3207   0018D8  0E0A               	movlw	10
  3208   0018DA  5C35               	subwf	(??_strtof+1)^0,w,c
  3209   0018DC  A0D8               	btfss	status,0,c
  3210   0018DE  EF73  F00C         	goto	u8611
  3211   0018E2  EF75  F00C         	goto	u8610
  3212   0018E6                     u8611:
  3213   0018E6  EF79  F00C         	goto	l6364
  3214   0018EA                     u8610:
  3215   0018EA                     
  3216                           ; BSR set to: 0
  3217   0018EA  0E00               	movlw	0
  3218   0018EC  6F6E               	movwf	strtof@i& (0+255),b
  3219   0018EE  EFFB  F00C         	goto	l6396
  3220   0018F2                     l6364:
  3221                           
  3222                           ; BSR set to: 0
  3223   0018F2  516E               	movf	strtof@i& (0+255),w,b
  3224   0018F4  2630               	addwf	strtof@s^0,f,c
  3225   0018F6  0E00               	movlw	0
  3226   0018F8  2231               	addwfc	(strtof@s+1)^0,f,c
  3227   0018FA                     
  3228                           ; BSR set to: 0
  3229   0018FA  0E00               	movlw	0
  3230   0018FC  6F6E               	movwf	strtof@i& (0+255),b
  3231   0018FE  EF82  F00C         	goto	l6370
  3232   001902                     l6368:
  3233                           
  3234                           ; BSR set to: 0
  3235   001902  2B6E               	incf	strtof@i& (0+255),f,b
  3236   001904                     l6370:
  3237                           
  3238                           ; BSR set to: 0
  3239   001904  516E               	movf	strtof@i& (0+255),w,b
  3240   001906  2430               	addwf	strtof@s^0,w,c
  3241   001908  6ED9               	movwf	fsr2l,c
  3242   00190A  0E00               	movlw	0
  3243   00190C  2031               	addwfc	(strtof@s+1)^0,w,c
  3244   00190E  6EDA               	movwf	fsr2h,c
  3245   001910  0E30               	movlw	48
  3246   001912  18DE               	xorwf	postinc2,w,c
  3247   001914  B4D8               	btfsc	status,2,c
  3248   001916  EF8F  F00C         	goto	u8621
  3249   00191A  EF91  F00C         	goto	u8620
  3250   00191E                     u8621:
  3251   00191E  EF81  F00C         	goto	l6368
  3252   001922                     u8620:
  3253   001922                     
  3254                           ; BSR set to: 0
  3255   001922  0E00               	movlw	0
  3256   001924  6F69               	movwf	(strtof@eexp+1)& (0+255),b
  3257   001926  0E00               	movlw	0
  3258   001928  6F68               	movwf	strtof@eexp& (0+255),b
  3259   00192A  EFC1  F00C         	goto	l6384
  3260   00192E                     l6374:
  3261                           
  3262                           ; BSR set to: 0
  3263   00192E  516E               	movf	strtof@i& (0+255),w,b
  3264   001930  B4D8               	btfsc	status,2,c
  3265   001932  EF9D  F00C         	goto	u8631
  3266   001936  EF9F  F00C         	goto	u8630
  3267   00193A                     u8631:
  3268   00193A  EFAD  F00C         	goto	l6378
  3269   00193E                     u8630:
  3270   00193E                     
  3271                           ; BSR set to: 0
  3272   00193E  C068  F00B         	movff	strtof@eexp,___wmul@multiplier
  3273   001942  C069  F00C         	movff	strtof@eexp+1,___wmul@multiplier+1
  3274   001946  0E00               	movlw	0
  3275   001948  6E0E               	movwf	(___wmul@multiplicand+1)^0,c
  3276   00194A  0E0A               	movlw	10
  3277   00194C  6E0D               	movwf	___wmul@multiplicand^0,c
  3278   00194E  EC69  F027         	call	___wmul	;wreg free
  3279   001952  C00B  F068         	movff	?___wmul,strtof@eexp
  3280   001956  C00C  F069         	movff	?___wmul+1,strtof@eexp+1
  3281   00195A                     l6378:
  3282   00195A  0100               	movlb	0	; () banked
  3283   00195C  516E               	movf	strtof@i& (0+255),w,b
  3284   00195E  2430               	addwf	strtof@s^0,w,c
  3285   001960  6ED9               	movwf	fsr2l,c
  3286   001962  0E00               	movlw	0
  3287   001964  2031               	addwfc	(strtof@s+1)^0,w,c
  3288   001966  6EDA               	movwf	fsr2h,c
  3289   001968  50DF               	movf	indf2,w,c
  3290   00196A  6E34               	movwf	??_strtof^0,c
  3291   00196C  0ED0               	movlw	208
  3292   00196E  2434               	addwf	??_strtof^0,w,c
  3293   001970  6E35               	movwf	(??_strtof+1)^0,c
  3294   001972  6A36               	clrf	(??_strtof+2)^0,c
  3295   001974  0EFF               	movlw	255
  3296   001976  2236               	addwfc	(??_strtof+2)^0,f,c
  3297   001978  5035               	movf	(??_strtof+1)^0,w,c
  3298   00197A  2768               	addwf	strtof@eexp& (0+255),f,b
  3299   00197C  5036               	movf	(??_strtof+2)^0,w,c
  3300   00197E  2369               	addwfc	(strtof@eexp+1)& (0+255),f,b
  3301   001980                     
  3302                           ; BSR set to: 0
  3303   001980  2B6E               	incf	strtof@i& (0+255),f,b
  3304   001982                     l6384:
  3305                           
  3306                           ; BSR set to: 0
  3307   001982  516E               	movf	strtof@i& (0+255),w,b
  3308   001984  2430               	addwf	strtof@s^0,w,c
  3309   001986  6ED9               	movwf	fsr2l,c
  3310   001988  0E00               	movlw	0
  3311   00198A  2031               	addwfc	(strtof@s+1)^0,w,c
  3312   00198C  6EDA               	movwf	fsr2h,c
  3313   00198E  50DF               	movf	indf2,w,c
  3314   001990  6E34               	movwf	??_strtof^0,c
  3315   001992  0ED0               	movlw	208
  3316   001994  2434               	addwf	??_strtof^0,w,c
  3317   001996  6E35               	movwf	(??_strtof+1)^0,c
  3318   001998  6A36               	clrf	(??_strtof+2)^0,c
  3319   00199A  0EFF               	movlw	255
  3320   00199C  2236               	addwfc	(??_strtof+2)^0,f,c
  3321   00199E  5036               	movf	(??_strtof+2)^0,w,c
  3322   0019A0  E109               	bnz	u8640
  3323   0019A2  0E0A               	movlw	10
  3324   0019A4  5C35               	subwf	(??_strtof+1)^0,w,c
  3325   0019A6  A0D8               	btfss	status,0,c
  3326   0019A8  EFD8  F00C         	goto	u8641
  3327   0019AC  EFDA  F00C         	goto	u8640
  3328   0019B0                     u8641:
  3329   0019B0  EF97  F00C         	goto	l6374
  3330   0019B4                     u8640:
  3331   0019B4                     
  3332                           ; BSR set to: 0
  3333   0019B4  516E               	movf	strtof@i& (0+255),w,b
  3334   0019B6  A4D8               	btfss	status,2,c
  3335   0019B8  EFE0  F00C         	goto	u8651
  3336   0019BC  EFE2  F00C         	goto	u8650
  3337   0019C0                     u8651:
  3338   0019C0  EFEC  F00C         	goto	l1124
  3339   0019C4                     u8650:
  3340   0019C4                     
  3341                           ; BSR set to: 0
  3342   0019C4  0E00               	movlw	0
  3343   0019C6  6E30               	movwf	?_strtof^0,c
  3344   0019C8  0E00               	movlw	0
  3345   0019CA  6E31               	movwf	(?_strtof+1)^0,c
  3346   0019CC  0E00               	movlw	0
  3347   0019CE  6E32               	movwf	(?_strtof+2)^0,c
  3348   0019D0  0E00               	movlw	0
  3349   0019D2  6E33               	movwf	(?_strtof+3)^0,c
  3350   0019D4  EFA7  F010         	goto	l1125
  3351   0019D8                     l1124:
  3352                           
  3353                           ; BSR set to: 0
  3354   0019D8  A765               	btfss	strtof@flags& (0+255),3,b
  3355   0019DA  EFF1  F00C         	goto	u8661
  3356   0019DE  EFF3  F00C         	goto	u8660
  3357   0019E2                     u8661:
  3358   0019E2  EFF7  F00C         	goto	l6394
  3359   0019E6                     u8660:
  3360   0019E6                     
  3361                           ; BSR set to: 0
  3362   0019E6  6D68               	negf	strtof@eexp& (0+255),b
  3363   0019E8  1F69               	comf	(strtof@eexp+1)& (0+255),f,b
  3364   0019EA  B0D8               	btfsc	status,0,c
  3365   0019EC  2B69               	incf	(strtof@eexp+1)& (0+255),f,b
  3366   0019EE                     l6394:
  3367                           
  3368                           ; BSR set to: 0
  3369   0019EE  5168               	movf	strtof@eexp& (0+255),w,b
  3370   0019F0  2766               	addwf	strtof@expon& (0+255),f,b
  3371   0019F2  5169               	movf	(strtof@eexp+1)& (0+255),w,b
  3372   0019F4  2367               	addwfc	(strtof@expon+1)& (0+255),f,b
  3373   0019F6                     l6396:
  3374   0019F6  5032               	movf	strtof@res^0,w,c
  3375   0019F8  1033               	iorwf	(strtof@res+1)^0,w,c
  3376   0019FA  B4D8               	btfsc	status,2,c
  3377   0019FC  EF02  F00D         	goto	u8671
  3378   001A00  EF04  F00D         	goto	u8670
  3379   001A04                     u8671:
  3380   001A04  EF13  F00D         	goto	l6400
  3381   001A08                     u8670:
  3382   001A08  0100               	movlb	0	; () banked
  3383   001A0A  516E               	movf	strtof@i& (0+255),w,b
  3384   001A0C  2430               	addwf	strtof@s^0,w,c
  3385   001A0E  6E34               	movwf	??_strtof^0,c
  3386   001A10  0E00               	movlw	0
  3387   001A12  2031               	addwfc	(strtof@s+1)^0,w,c
  3388   001A14  6E35               	movwf	(??_strtof+1)^0,c
  3389   001A16  C032  FFD9         	movff	strtof@res,fsr2l
  3390   001A1A  C033  FFDA         	movff	strtof@res+1,fsr2h
  3391   001A1E  C034  FFDE         	movff	??_strtof,postinc2
  3392   001A22  C035  FFDD         	movff	??_strtof+1,postdec2
  3393   001A26                     l6400:
  3394   001A26  0100               	movlb	0	; () banked
  3395   001A28  516A               	movf	strtof@_u& (0+255),w,b
  3396   001A2A  116B               	iorwf	(strtof@_u+1)& (0+255),w,b
  3397   001A2C  116C               	iorwf	(strtof@_u+2)& (0+255),w,b
  3398   001A2E  116D               	iorwf	(strtof@_u+3)& (0+255),w,b
  3399   001A30  A4D8               	btfss	status,2,c
  3400   001A32  EF1D  F00D         	goto	u8681
  3401   001A36  EF1F  F00D         	goto	u8680
  3402   001A3A                     u8681:
  3403   001A3A  EF29  F00D         	goto	l6406
  3404   001A3E                     u8680:
  3405   001A3E                     
  3406                           ; BSR set to: 0
  3407   001A3E  0E00               	movlw	0
  3408   001A40  6E30               	movwf	?_strtof^0,c
  3409   001A42  0E00               	movlw	0
  3410   001A44  6E31               	movwf	(?_strtof+1)^0,c
  3411   001A46  0E00               	movlw	0
  3412   001A48  6E32               	movwf	(?_strtof+2)^0,c
  3413   001A4A  0E00               	movlw	0
  3414   001A4C  6E33               	movwf	(?_strtof+3)^0,c
  3415   001A4E  EFA7  F010         	goto	l1125
  3416   001A52                     l6406:
  3417                           
  3418                           ; BSR set to: 0
  3419   001A52  0EFF               	movlw	255
  3420   001A54  156A               	andwf	strtof@_u& (0+255),w,b
  3421   001A56  6E34               	movwf	??_strtof^0,c
  3422   001A58  0E00               	movlw	0
  3423   001A5A  156B               	andwf	(strtof@_u+1)& (0+255),w,b
  3424   001A5C  6E35               	movwf	(??_strtof+1)^0,c
  3425   001A5E  0E00               	movlw	0
  3426   001A60  156C               	andwf	(strtof@_u+2)& (0+255),w,b
  3427   001A62  6E36               	movwf	(??_strtof+2)^0,c
  3428   001A64  0E00               	movlw	0
  3429   001A66  156D               	andwf	(strtof@_u+3)& (0+255),w,b
  3430   001A68  6E37               	movwf	(??_strtof+3)^0,c
  3431   001A6A  5037               	movf	(??_strtof+3)^0,w,c
  3432   001A6C  1036               	iorwf	(??_strtof+2)^0,w,c
  3433   001A6E  1035               	iorwf	(??_strtof+1)^0,w,c
  3434   001A70  E109               	bnz	u8690
  3435   001A72  0E81               	movlw	129
  3436   001A74  5C34               	subwf	??_strtof^0,w,c
  3437   001A76  A0D8               	btfss	status,0,c
  3438   001A78  EF40  F00D         	goto	u8691
  3439   001A7C  EF42  F00D         	goto	u8690
  3440   001A80                     u8691:
  3441   001A80  EF54  F00D         	goto	l6412
  3442   001A84                     u8690:
  3443   001A84                     
  3444                           ; BSR set to: 0
  3445   001A84  0E00               	movlw	0
  3446   001A86  276A               	addwf	strtof@_u& (0+255),f,b
  3447   001A88  0E01               	movlw	1
  3448   001A8A  236B               	addwfc	(strtof@_u+1)& (0+255),f,b
  3449   001A8C  0E00               	movlw	0
  3450   001A8E  236C               	addwfc	(strtof@_u+2)& (0+255),f,b
  3451   001A90  0E00               	movlw	0
  3452   001A92  236D               	addwfc	(strtof@_u+3)& (0+255),f,b
  3453   001A94  EF54  F00D         	goto	l6412
  3454   001A98                     l6410:
  3455                           
  3456                           ; BSR set to: 0
  3457   001A98  90D8               	bcf	status,0,c
  3458   001A9A  376A               	rlcf	strtof@_u& (0+255),f,b
  3459   001A9C  376B               	rlcf	(strtof@_u+1)& (0+255),f,b
  3460   001A9E  376C               	rlcf	(strtof@_u+2)& (0+255),f,b
  3461   001AA0  376D               	rlcf	(strtof@_u+3)& (0+255),f,b
  3462   001AA2  0766               	decf	strtof@expon& (0+255),f,b
  3463   001AA4  A0D8               	btfss	status,0,c
  3464   001AA6  0767               	decf	(strtof@expon+1)& (0+255),f,b
  3465   001AA8                     l6412:
  3466                           
  3467                           ; BSR set to: 0
  3468   001AA8  AF6D               	btfss	(strtof@_u+3)& (0+255),7,b
  3469   001AAA  EF59  F00D         	goto	u8701
  3470   001AAE  EF5B  F00D         	goto	u8700
  3471   001AB2                     u8701:
  3472   001AB2  EF4C  F00D         	goto	l6410
  3473   001AB6                     u8700:
  3474   001AB6                     
  3475                           ; BSR set to: 0
  3476   001AB6  AF67               	btfss	(strtof@expon+1)& (0+255),7,b
  3477   001AB8  EF67  F00D         	goto	u8711
  3478   001ABC  0E83               	movlw	131
  3479   001ABE  5D66               	subwf	strtof@expon& (0+255),w,b
  3480   001AC0  0EFF               	movlw	255
  3481   001AC2  5967               	subwfb	(strtof@expon+1)& (0+255),w,b
  3482   001AC4  B0D8               	btfsc	status,0,c
  3483   001AC6  EF67  F00D         	goto	u8711
  3484   001ACA  EF69  F00D         	goto	u8710
  3485   001ACE                     u8711:
  3486   001ACE  EF75  F00D         	goto	l6418
  3487   001AD2                     u8710:
  3488   001AD2                     
  3489                           ; BSR set to: 0
  3490   001AD2  0EFF               	movlw	255
  3491   001AD4  6F67               	movwf	(strtof@expon+1)& (0+255),b
  3492   001AD6  0E81               	movlw	129
  3493   001AD8  6F66               	movwf	strtof@expon& (0+255),b
  3494   001ADA  0E00               	movlw	0
  3495   001ADC  6F6A               	movwf	strtof@_u& (0+255),b
  3496   001ADE  0E00               	movlw	0
  3497   001AE0  6F6B               	movwf	(strtof@_u+1)& (0+255),b
  3498   001AE2  0E00               	movlw	0
  3499   001AE4  6F6C               	movwf	(strtof@_u+2)& (0+255),b
  3500   001AE6  0E00               	movlw	0
  3501   001AE8  6F6D               	movwf	(strtof@_u+3)& (0+255),b
  3502   001AEA                     l6418:
  3503                           
  3504                           ; BSR set to: 0
  3505   001AEA  0E81               	movlw	129
  3506   001AEC  1966               	xorwf	strtof@expon& (0+255),w,b
  3507   001AEE  E108               	bnz	u8720
  3508   001AF0  2967               	incf	(strtof@expon+1)& (0+255),w,b
  3509   001AF2  B4D8               	btfsc	status,2,c
  3510   001AF4  EF7E  F00D         	goto	u8721
  3511   001AF8  EF80  F00D         	goto	u8720
  3512   001AFC                     u8721:
  3513   001AFC  EF88  F00D         	goto	l6422
  3514   001B00                     u8720:
  3515   001B00                     
  3516                           ; BSR set to: 0
  3517   001B00  90D8               	bcf	status,0,c
  3518   001B02  376A               	rlcf	strtof@_u& (0+255),f,b
  3519   001B04  376B               	rlcf	(strtof@_u+1)& (0+255),f,b
  3520   001B06  376C               	rlcf	(strtof@_u+2)& (0+255),f,b
  3521   001B08  376D               	rlcf	(strtof@_u+3)& (0+255),f,b
  3522   001B0A  0766               	decf	strtof@expon& (0+255),f,b
  3523   001B0C  A0D8               	btfss	status,0,c
  3524   001B0E  0767               	decf	(strtof@expon+1)& (0+255),f,b
  3525   001B10                     l6422:
  3526                           
  3527                           ; BSR set to: 0
  3528   001B10  BF67               	btfsc	(strtof@expon+1)& (0+255),7,b
  3529   001B12  EF94  F00D         	goto	u8731
  3530   001B16  5167               	movf	(strtof@expon+1)& (0+255),w,b
  3531   001B18  E109               	bnz	u8730
  3532   001B1A  0E80               	movlw	128
  3533   001B1C  5D66               	subwf	strtof@expon& (0+255),w,b
  3534   001B1E  A0D8               	btfss	status,0,c
  3535   001B20  EF94  F00D         	goto	u8731
  3536   001B24  EF96  F00D         	goto	u8730
  3537   001B28                     u8731:
  3538   001B28  EFA8  F00D         	goto	l6426
  3539   001B2C                     u8730:
  3540   001B2C                     
  3541                           ; BSR set to: 0
  3542   001B2C  0E00               	movlw	0
  3543   001B2E  6F6A               	movwf	strtof@_u& (0+255),b
  3544   001B30  0E00               	movlw	0
  3545   001B32  6F6B               	movwf	(strtof@_u+1)& (0+255),b
  3546   001B34  0E00               	movlw	0
  3547   001B36  6F6C               	movwf	(strtof@_u+2)& (0+255),b
  3548   001B38  0E00               	movlw	0
  3549   001B3A  6F6D               	movwf	(strtof@_u+3)& (0+255),b
  3550   001B3C  0E00               	movlw	0
  3551   001B3E  6F67               	movwf	(strtof@expon+1)& (0+255),b
  3552   001B40  0E80               	movlw	128
  3553   001B42  6F66               	movwf	strtof@expon& (0+255),b
  3554   001B44  0E00               	movlw	0
  3555   001B46  6F63               	movwf	(strtof@err+1)& (0+255),b
  3556   001B48  0E22               	movlw	34
  3557   001B4A  6F62               	movwf	strtof@err& (0+255),b
  3558   001B4C  EF70  F010         	goto	l6556
  3559   001B50                     l6426:
  3560                           
  3561                           ; BSR set to: 0
  3562   001B50  0E09               	movlw	9
  3563   001B52  6E34               	movwf	??_strtof^0,c
  3564   001B54                     u8745:
  3565   001B54  90D8               	bcf	status,0,c
  3566   001B56  336D               	rrcf	(strtof@_u+3)& (0+255),f,b
  3567   001B58  336C               	rrcf	(strtof@_u+2)& (0+255),f,b
  3568   001B5A  336B               	rrcf	(strtof@_u+1)& (0+255),f,b
  3569   001B5C  336A               	rrcf	strtof@_u& (0+255),f,b
  3570   001B5E  2E34               	decfsz	??_strtof^0,f,c
  3571   001B60  EFAA  F00D         	goto	u8745
  3572   001B64  0EFF               	movlw	255
  3573   001B66  176A               	andwf	strtof@_u& (0+255),f,b
  3574   001B68  0EFF               	movlw	255
  3575   001B6A  176B               	andwf	(strtof@_u+1)& (0+255),f,b
  3576   001B6C  0E7F               	movlw	127
  3577   001B6E  176C               	andwf	(strtof@_u+2)& (0+255),f,b
  3578   001B70  0E00               	movlw	0
  3579   001B72  176D               	andwf	(strtof@_u+3)& (0+255),f,b
  3580   001B74  0E7F               	movlw	127
  3581   001B76  2566               	addwf	strtof@expon& (0+255),w,b
  3582   001B78  6E34               	movwf	??_strtof^0,c
  3583   001B7A  0E00               	movlw	0
  3584   001B7C  2167               	addwfc	(strtof@expon+1)& (0+255),w,b
  3585   001B7E  6E35               	movwf	(??_strtof+1)^0,c
  3586   001B80  0EFF               	movlw	255
  3587   001B82  1434               	andwf	??_strtof^0,w,c
  3588   001B84  6E36               	movwf	(??_strtof+2)^0,c
  3589   001B86  6A37               	clrf	(??_strtof+3)^0,c
  3590   001B88  6A38               	clrf	(??_strtof+4)^0,c
  3591   001B8A  6A39               	clrf	(??_strtof+5)^0,c
  3592   001B8C  0E17               	movlw	23
  3593   001B8E                     u8755:
  3594   001B8E  90D8               	bcf	status,0,c
  3595   001B90  3636               	rlcf	(??_strtof+2)^0,f,c
  3596   001B92  3637               	rlcf	(??_strtof+3)^0,f,c
  3597   001B94  3638               	rlcf	(??_strtof+4)^0,f,c
  3598   001B96  3639               	rlcf	(??_strtof+5)^0,f,c
  3599   001B98  2EE8               	decfsz	wreg,f,c
  3600   001B9A  EFC7  F00D         	goto	u8755
  3601   001B9E  5036               	movf	(??_strtof+2)^0,w,c
  3602   001BA0  136A               	iorwf	strtof@_u& (0+255),f,b
  3603   001BA2  5037               	movf	(??_strtof+3)^0,w,c
  3604   001BA4  136B               	iorwf	(strtof@_u+1)& (0+255),f,b
  3605   001BA6  5038               	movf	(??_strtof+4)^0,w,c
  3606   001BA8  136C               	iorwf	(strtof@_u+2)& (0+255),f,b
  3607   001BAA  5039               	movf	(??_strtof+5)^0,w,c
  3608   001BAC  136D               	iorwf	(strtof@_u+3)& (0+255),f,b
  3609   001BAE  EF70  F010         	goto	l6556
  3610   001BB2                     l1136:
  3611                           
  3612                           ; BSR set to: 0
  3613   001BB2  B965               	btfsc	strtof@flags& (0+255),4,b
  3614   001BB4  EFDE  F00D         	goto	u8761
  3615   001BB8  EFE0  F00D         	goto	u8760
  3616   001BBC                     u8761:
  3617   001BBC  EFF2  F00D         	goto	l6434
  3618   001BC0                     u8760:
  3619   001BC0                     
  3620                           ; BSR set to: 0
  3621   001BC0  C030  FFD9         	movff	strtof@s,fsr2l
  3622   001BC4  C031  FFDA         	movff	strtof@s+1,fsr2h
  3623   001BC8  0E2E               	movlw	46
  3624   001BCA  18DE               	xorwf	postinc2,w,c
  3625   001BCC  A4D8               	btfss	status,2,c
  3626   001BCE  EFEB  F00D         	goto	u8771
  3627   001BD2  EFED  F00D         	goto	u8770
  3628   001BD6                     u8771:
  3629   001BD6  EFF2  F00D         	goto	l6434
  3630   001BDA                     u8770:
  3631   001BDA                     
  3632                           ; BSR set to: 0
  3633   001BDA  8965               	bsf	strtof@flags& (0+255),4,b
  3634   001BDC  4A30               	infsnz	strtof@s^0,f,c
  3635   001BDE  2A31               	incf	(strtof@s+1)^0,f,c
  3636   001BE0  EFD9  F00D         	goto	l1136
  3637   001BE4                     l6434:
  3638                           
  3639                           ; BSR set to: 0
  3640   001BE4  C030  FFD9         	movff	strtof@s,fsr2l
  3641   001BE8  C031  FFDA         	movff	strtof@s+1,fsr2h
  3642   001BEC  50DF               	movf	indf2,w,c
  3643   001BEE  6E34               	movwf	??_strtof^0,c
  3644   001BF0  0ED0               	movlw	208
  3645   001BF2  2434               	addwf	??_strtof^0,w,c
  3646   001BF4  6E35               	movwf	(??_strtof+1)^0,c
  3647   001BF6  6A36               	clrf	(??_strtof+2)^0,c
  3648   001BF8  0EFF               	movlw	255
  3649   001BFA  2236               	addwfc	(??_strtof+2)^0,f,c
  3650   001BFC  5036               	movf	(??_strtof+2)^0,w,c
  3651   001BFE  E109               	bnz	u8780
  3652   001C00  0E0A               	movlw	10
  3653   001C02  5C35               	subwf	(??_strtof+1)^0,w,c
  3654   001C04  A0D8               	btfss	status,0,c
  3655   001C06  EF07  F00E         	goto	u8781
  3656   001C0A  EF09  F00E         	goto	u8780
  3657   001C0E                     u8781:
  3658   001C0E  EF0B  F00E         	goto	l6438
  3659   001C12                     u8780:
  3660   001C12  EF5A  F00E         	goto	l6452
  3661   001C16                     l6438:
  3662                           
  3663                           ; BSR set to: 0
  3664   001C16  8365               	bsf	strtof@flags& (0+255),1,b
  3665   001C18                     
  3666                           ; BSR set to: 0
  3667   001C18  0E09               	movlw	9
  3668   001C1A  1968               	xorwf	strtof@eexp& (0+255),w,b
  3669   001C1C  1169               	iorwf	(strtof@eexp+1)& (0+255),w,b
  3670   001C1E  B4D8               	btfsc	status,2,c
  3671   001C20  EF14  F00E         	goto	u8791
  3672   001C24  EF16  F00E         	goto	u8790
  3673   001C28                     u8791:
  3674   001C28  EF4D  F00E         	goto	l1143
  3675   001C2C                     u8790:
  3676   001C2C                     
  3677                           ; BSR set to: 0
  3678   001C2C  A965               	btfss	strtof@flags& (0+255),4,b
  3679   001C2E  EF1B  F00E         	goto	u8801
  3680   001C32  EF1D  F00E         	goto	u8800
  3681   001C36                     u8801:
  3682   001C36  EF20  F00E         	goto	l1144
  3683   001C3A                     u8800:
  3684   001C3A                     
  3685                           ; BSR set to: 0
  3686   001C3A  0766               	decf	strtof@expon& (0+255),f,b
  3687   001C3C  A0D8               	btfss	status,0,c
  3688   001C3E  0767               	decf	(strtof@expon+1)& (0+255),f,b
  3689   001C40                     l1144:
  3690                           
  3691                           ; BSR set to: 0
  3692   001C40  4B68               	infsnz	strtof@eexp& (0+255),f,b
  3693   001C42  2B69               	incf	(strtof@eexp+1)& (0+255),f,b
  3694   001C44                     
  3695                           ; BSR set to: 0
  3696   001C44  C06A  F00B         	movff	strtof@_u,___lmul@multiplier
  3697   001C48  C06B  F00C         	movff	strtof@_u+1,___lmul@multiplier+1
  3698   001C4C  C06C  F00D         	movff	strtof@_u+2,___lmul@multiplier+2
  3699   001C50  C06D  F00E         	movff	strtof@_u+3,___lmul@multiplier+3
  3700   001C54  0E0A               	movlw	10
  3701   001C56  6E0F               	movwf	___lmul@multiplicand^0,c
  3702   001C58  0E00               	movlw	0
  3703   001C5A  6E10               	movwf	(___lmul@multiplicand+1)^0,c
  3704   001C5C  0E00               	movlw	0
  3705   001C5E  6E11               	movwf	(___lmul@multiplicand+2)^0,c
  3706   001C60  0E00               	movlw	0
  3707   001C62  6E12               	movwf	(___lmul@multiplicand+3)^0,c
  3708   001C64  EC37  F024         	call	___lmul	;wreg free
  3709   001C68  C00B  F06A         	movff	?___lmul,strtof@_u
  3710   001C6C  C00C  F06B         	movff	?___lmul+1,strtof@_u+1
  3711   001C70  C00D  F06C         	movff	?___lmul+2,strtof@_u+2
  3712   001C74  C00E  F06D         	movff	?___lmul+3,strtof@_u+3
  3713   001C78  C030  FFD9         	movff	strtof@s,fsr2l
  3714   001C7C  C031  FFDA         	movff	strtof@s+1,fsr2h
  3715   001C80  50DF               	movf	indf2,w,c
  3716   001C82  6E34               	movwf	??_strtof^0,c
  3717   001C84  0ED0               	movlw	208
  3718   001C86  2634               	addwf	??_strtof^0,f,c
  3719   001C88  5034               	movf	??_strtof^0,w,c
  3720   001C8A  0100               	movlb	0	; () banked
  3721   001C8C  276A               	addwf	strtof@_u& (0+255),f,b
  3722   001C8E  0E00               	movlw	0
  3723   001C90  236B               	addwfc	(strtof@_u+1)& (0+255),f,b
  3724   001C92  236C               	addwfc	(strtof@_u+2)& (0+255),f,b
  3725   001C94  236D               	addwfc	(strtof@_u+3)& (0+255),f,b
  3726   001C96  EF56  F00E         	goto	l1145
  3727   001C9A                     l1143:
  3728                           
  3729                           ; BSR set to: 0
  3730   001C9A  B965               	btfsc	strtof@flags& (0+255),4,b
  3731   001C9C  EF52  F00E         	goto	u8811
  3732   001CA0  EF54  F00E         	goto	u8810
  3733   001CA4                     u8811:
  3734   001CA4  EF56  F00E         	goto	l1145
  3735   001CA8                     u8810:
  3736   001CA8                     
  3737                           ; BSR set to: 0
  3738   001CA8  4B66               	infsnz	strtof@expon& (0+255),f,b
  3739   001CAA  2B67               	incf	(strtof@expon+1)& (0+255),f,b
  3740   001CAC                     l1145:
  3741                           
  3742                           ; BSR set to: 0
  3743   001CAC  4A30               	infsnz	strtof@s^0,f,c
  3744   001CAE  2A31               	incf	(strtof@s+1)^0,f,c
  3745   001CB0  EFD9  F00D         	goto	l1136
  3746   001CB4                     l6452:
  3747                           
  3748                           ; BSR set to: 0
  3749   001CB4  0E00               	movlw	0
  3750   001CB6  6F69               	movwf	(strtof@eexp+1)& (0+255),b
  3751   001CB8  0E00               	movlw	0
  3752   001CBA  6F68               	movwf	strtof@eexp& (0+255),b
  3753   001CBC                     
  3754                           ; BSR set to: 0
  3755   001CBC  C030  FFD9         	movff	strtof@s,fsr2l
  3756   001CC0  C031  FFDA         	movff	strtof@s+1,fsr2h
  3757   001CC4  0E65               	movlw	101
  3758   001CC6  18DE               	xorwf	postinc2,w,c
  3759   001CC8  B4D8               	btfsc	status,2,c
  3760   001CCA  EF69  F00E         	goto	u8821
  3761   001CCE  EF6B  F00E         	goto	u8820
  3762   001CD2                     u8821:
  3763   001CD2  EF78  F00E         	goto	l6458
  3764   001CD6                     u8820:
  3765   001CD6                     
  3766                           ; BSR set to: 0
  3767   001CD6  C030  FFD9         	movff	strtof@s,fsr2l
  3768   001CDA  C031  FFDA         	movff	strtof@s+1,fsr2h
  3769   001CDE  0E45               	movlw	69
  3770   001CE0  18DE               	xorwf	postinc2,w,c
  3771   001CE2  A4D8               	btfss	status,2,c
  3772   001CE4  EF76  F00E         	goto	u8831
  3773   001CE8  EF78  F00E         	goto	u8830
  3774   001CEC                     u8831:
  3775   001CEC  EF05  F00F         	goto	l6492
  3776   001CF0                     u8830:
  3777   001CF0                     l6458:
  3778                           
  3779                           ; BSR set to: 0
  3780   001CF0  4A30               	infsnz	strtof@s^0,f,c
  3781   001CF2  2A31               	incf	(strtof@s+1)^0,f,c
  3782   001CF4  C030  FFD9         	movff	strtof@s,fsr2l
  3783   001CF8  C031  FFDA         	movff	strtof@s+1,fsr2h
  3784   001CFC  0E2D               	movlw	45
  3785   001CFE  18DE               	xorwf	postinc2,w,c
  3786   001D00  A4D8               	btfss	status,2,c
  3787   001D02  EF85  F00E         	goto	u8841
  3788   001D06  EF87  F00E         	goto	u8840
  3789   001D0A                     u8841:
  3790   001D0A  EF8C  F00E         	goto	l6462
  3791   001D0E                     u8840:
  3792   001D0E                     
  3793                           ; BSR set to: 0
  3794   001D0E  8765               	bsf	strtof@flags& (0+255),3,b
  3795   001D10  4A30               	infsnz	strtof@s^0,f,c
  3796   001D12  2A31               	incf	(strtof@s+1)^0,f,c
  3797   001D14  EF9B  F00E         	goto	l6468
  3798   001D18                     l6462:
  3799                           
  3800                           ; BSR set to: 0
  3801   001D18  C030  FFD9         	movff	strtof@s,fsr2l
  3802   001D1C  C031  FFDA         	movff	strtof@s+1,fsr2h
  3803   001D20  0E2B               	movlw	43
  3804   001D22  18DE               	xorwf	postinc2,w,c
  3805   001D24  A4D8               	btfss	status,2,c
  3806   001D26  EF97  F00E         	goto	u8851
  3807   001D2A  EF99  F00E         	goto	u8850
  3808   001D2E                     u8851:
  3809   001D2E  EF9B  F00E         	goto	l6468
  3810   001D32                     u8850:
  3811   001D32                     l6464:
  3812   001D32  4A30               	infsnz	strtof@s^0,f,c
  3813   001D34  2A31               	incf	(strtof@s+1)^0,f,c
  3814   001D36                     l6468:
  3815   001D36  C030  FFD9         	movff	strtof@s,fsr2l
  3816   001D3A  C031  FFDA         	movff	strtof@s+1,fsr2h
  3817   001D3E  0E30               	movlw	48
  3818   001D40  18DE               	xorwf	postinc2,w,c
  3819   001D42  B4D8               	btfsc	status,2,c
  3820   001D44  EFA6  F00E         	goto	u8861
  3821   001D48  EFA8  F00E         	goto	u8860
  3822   001D4C                     u8861:
  3823   001D4C  EF99  F00E         	goto	l6464
  3824   001D50                     u8860:
  3825   001D50  0E00               	movlw	0
  3826   001D52  0100               	movlb	0	; () banked
  3827   001D54  6F64               	movwf	strtof@digit& (0+255),b
  3828   001D56  EFC9  F00E         	goto	l6480
  3829   001D5A                     l6472:
  3830                           
  3831                           ; BSR set to: 0
  3832   001D5A  C030  FFD9         	movff	strtof@s,fsr2l
  3833   001D5E  C031  FFDA         	movff	strtof@s+1,fsr2h
  3834   001D62  50DF               	movf	indf2,w,c
  3835   001D64  6E34               	movwf	??_strtof^0,c
  3836   001D66  0ED0               	movlw	208
  3837   001D68  2634               	addwf	??_strtof^0,f,c
  3838   001D6A  C068  F00B         	movff	strtof@eexp,___wmul@multiplier
  3839   001D6E  C069  F00C         	movff	strtof@eexp+1,___wmul@multiplier+1
  3840   001D72  0E00               	movlw	0
  3841   001D74  6E0E               	movwf	(___wmul@multiplicand+1)^0,c
  3842   001D76  0E0A               	movlw	10
  3843   001D78  6E0D               	movwf	___wmul@multiplicand^0,c
  3844   001D7A  EC69  F027         	call	___wmul	;wreg free
  3845   001D7E  5034               	movf	??_strtof^0,w,c
  3846   001D80  240B               	addwf	?___wmul^0,w,c
  3847   001D82  0100               	movlb	0	; () banked
  3848   001D84  6F68               	movwf	strtof@eexp& (0+255),b
  3849   001D86  0E00               	movlw	0
  3850   001D88  200C               	addwfc	(?___wmul+1)^0,w,c
  3851   001D8A  6F69               	movwf	(strtof@eexp+1)& (0+255),b
  3852   001D8C                     
  3853                           ; BSR set to: 0
  3854   001D8C  4A30               	infsnz	strtof@s^0,f,c
  3855   001D8E  2A31               	incf	(strtof@s+1)^0,f,c
  3856   001D90                     
  3857                           ; BSR set to: 0
  3858   001D90  2B64               	incf	strtof@digit& (0+255),f,b
  3859   001D92                     l6480:
  3860                           
  3861                           ; BSR set to: 0
  3862   001D92  C030  FFD9         	movff	strtof@s,fsr2l
  3863   001D96  C031  FFDA         	movff	strtof@s+1,fsr2h
  3864   001D9A  50DF               	movf	indf2,w,c
  3865   001D9C  6E34               	movwf	??_strtof^0,c
  3866   001D9E  0ED0               	movlw	208
  3867   001DA0  2434               	addwf	??_strtof^0,w,c
  3868   001DA2  6E35               	movwf	(??_strtof+1)^0,c
  3869   001DA4  6A36               	clrf	(??_strtof+2)^0,c
  3870   001DA6  0EFF               	movlw	255
  3871   001DA8  2236               	addwfc	(??_strtof+2)^0,f,c
  3872   001DAA  5036               	movf	(??_strtof+2)^0,w,c
  3873   001DAC  E109               	bnz	u8870
  3874   001DAE  0E0A               	movlw	10
  3875   001DB0  5C35               	subwf	(??_strtof+1)^0,w,c
  3876   001DB2  A0D8               	btfss	status,0,c
  3877   001DB4  EFDE  F00E         	goto	u8871
  3878   001DB8  EFE0  F00E         	goto	u8870
  3879   001DBC                     u8871:
  3880   001DBC  EFAD  F00E         	goto	l6472
  3881   001DC0                     u8870:
  3882   001DC0                     
  3883                           ; BSR set to: 0
  3884   001DC0  5164               	movf	strtof@digit& (0+255),w,b
  3885   001DC2  A4D8               	btfss	status,2,c
  3886   001DC4  EFE6  F00E         	goto	u8881
  3887   001DC8  EFE8  F00E         	goto	u8880
  3888   001DCC                     u8881:
  3889   001DCC  EFFA  F00E         	goto	l6488
  3890   001DD0                     u8880:
  3891   001DD0                     
  3892                           ; BSR set to: 0
  3893   001DD0  EE2F F0FF          	lfsr	2,-1
  3894   001DD4  5030               	movf	strtof@s^0,w,c
  3895   001DD6  26D9               	addwf	fsr2l,f,c
  3896   001DD8  5031               	movf	(strtof@s+1)^0,w,c
  3897   001DDA  22DA               	addwfc	fsr2h,f,c
  3898   001DDC  0E30               	movlw	48
  3899   001DDE  18DE               	xorwf	postinc2,w,c
  3900   001DE0  B4D8               	btfsc	status,2,c
  3901   001DE2  EFF5  F00E         	goto	u8891
  3902   001DE6  EFF7  F00E         	goto	u8890
  3903   001DEA                     u8891:
  3904   001DEA  EFFA  F00E         	goto	l6488
  3905   001DEE                     u8890:
  3906   001DEE                     
  3907                           ; BSR set to: 0
  3908   001DEE  0630               	decf	strtof@s^0,f,c
  3909   001DF0  A0D8               	btfss	status,0,c
  3910   001DF2  0631               	decf	(strtof@s+1)^0,f,c
  3911   001DF4                     l6488:
  3912                           
  3913                           ; BSR set to: 0
  3914   001DF4  A765               	btfss	strtof@flags& (0+255),3,b
  3915   001DF6  EFFF  F00E         	goto	u8901
  3916   001DFA  EF01  F00F         	goto	u8900
  3917   001DFE                     u8901:
  3918   001DFE  EF05  F00F         	goto	l6492
  3919   001E02                     u8900:
  3920   001E02                     
  3921                           ; BSR set to: 0
  3922   001E02  6D68               	negf	strtof@eexp& (0+255),b
  3923   001E04  1F69               	comf	(strtof@eexp+1)& (0+255),f,b
  3924   001E06  B0D8               	btfsc	status,0,c
  3925   001E08  2B69               	incf	(strtof@eexp+1)& (0+255),f,b
  3926   001E0A                     l6492:
  3927                           
  3928                           ; BSR set to: 0
  3929   001E0A  5168               	movf	strtof@eexp& (0+255),w,b
  3930   001E0C  2766               	addwf	strtof@expon& (0+255),f,b
  3931   001E0E  5169               	movf	(strtof@eexp+1)& (0+255),w,b
  3932   001E10  2367               	addwfc	(strtof@expon+1)& (0+255),f,b
  3933   001E12                     
  3934                           ; BSR set to: 0
  3935   001E12  5032               	movf	strtof@res^0,w,c
  3936   001E14  1033               	iorwf	(strtof@res+1)^0,w,c
  3937   001E16  B4D8               	btfsc	status,2,c
  3938   001E18  EF10  F00F         	goto	u8911
  3939   001E1C  EF12  F00F         	goto	u8910
  3940   001E20                     u8911:
  3941   001E20  EF21  F00F         	goto	l6500
  3942   001E24                     u8910:
  3943   001E24                     
  3944                           ; BSR set to: 0
  3945   001E24  A365               	btfss	strtof@flags& (0+255),1,b
  3946   001E26  EF17  F00F         	goto	u8921
  3947   001E2A  EF19  F00F         	goto	u8920
  3948   001E2E                     u8921:
  3949   001E2E  EF21  F00F         	goto	l6500
  3950   001E32                     u8920:
  3951   001E32                     
  3952                           ; BSR set to: 0
  3953   001E32  C032  FFD9         	movff	strtof@res,fsr2l
  3954   001E36  C033  FFDA         	movff	strtof@res+1,fsr2h
  3955   001E3A  C030  FFDE         	movff	strtof@s,postinc2
  3956   001E3E  C031  FFDD         	movff	strtof@s+1,postdec2
  3957   001E42                     l6500:
  3958                           
  3959                           ; BSR set to: 0
  3960   001E42  C06A  F00B         	movff	strtof@_u,___xxtofl@val
  3961   001E46  C06B  F00C         	movff	strtof@_u+1,___xxtofl@val+1
  3962   001E4A  C06C  F00D         	movff	strtof@_u+2,___xxtofl@val+2
  3963   001E4E  C06D  F00E         	movff	strtof@_u+3,___xxtofl@val+3
  3964   001E52  0E00               	movlw	0
  3965   001E54  EC11  F020         	call	___xxtofl
  3966   001E58  C00B  F06A         	movff	?___xxtofl,strtof@_u
  3967   001E5C  C00C  F06B         	movff	?___xxtofl+1,strtof@_u+1
  3968   001E60  C00D  F06C         	movff	?___xxtofl+2,strtof@_u+2
  3969   001E64  C00E  F06D         	movff	?___xxtofl+3,strtof@_u+3
  3970   001E68  C06A  F00B         	movff	strtof@_u,___fleq@ff1
  3971   001E6C  C06B  F00C         	movff	strtof@_u+1,___fleq@ff1+1
  3972   001E70  C06C  F00D         	movff	strtof@_u+2,___fleq@ff1+2
  3973   001E74  C06D  F00E         	movff	strtof@_u+3,___fleq@ff1+3
  3974   001E78  0E00               	movlw	0
  3975   001E7A  6E0F               	movwf	___fleq@ff2^0,c
  3976   001E7C  0E00               	movlw	0
  3977   001E7E  6E10               	movwf	(___fleq@ff2+1)^0,c
  3978   001E80  0E00               	movlw	0
  3979   001E82  6E11               	movwf	(___fleq@ff2+2)^0,c
  3980   001E84  0E00               	movlw	0
  3981   001E86  6E12               	movwf	(___fleq@ff2+3)^0,c
  3982   001E88  ECA5  F023         	call	___fleq	;wreg free
  3983   001E8C  A0D8               	btfss	status,0,c
  3984   001E8E  EF4B  F00F         	goto	u8931
  3985   001E92  EF4D  F00F         	goto	u8930
  3986   001E96                     u8931:
  3987   001E96  EF57  F00F         	goto	l6508
  3988   001E9A                     u8930:
  3989   001E9A  0E00               	movlw	0
  3990   001E9C  6E30               	movwf	?_strtof^0,c
  3991   001E9E  0E00               	movlw	0
  3992   001EA0  6E31               	movwf	(?_strtof+1)^0,c
  3993   001EA2  0E00               	movlw	0
  3994   001EA4  6E32               	movwf	(?_strtof+2)^0,c
  3995   001EA6  0E00               	movlw	0
  3996   001EA8  6E33               	movwf	(?_strtof+3)^0,c
  3997   001EAA  EFA7  F010         	goto	l1125
  3998   001EAE                     l6508:
  3999   001EAE  0100               	movlb	0	; () banked
  4000   001EB0  BF67               	btfsc	(strtof@expon+1)& (0+255),7,b
  4001   001EB2  EF5F  F00F         	goto	u8940
  4002   001EB6  EF5D  F00F         	goto	u8941
  4003   001EBA                     u8941:
  4004   001EBA  EFF0  F00F         	goto	l6536
  4005   001EBE                     u8940:
  4006   001EBE                     
  4007                           ; BSR set to: 0
  4008   001EBE  6D66               	negf	strtof@expon& (0+255),b
  4009   001EC0  1F67               	comf	(strtof@expon+1)& (0+255),f,b
  4010   001EC2  B0D8               	btfsc	status,0,c
  4011   001EC4  2B67               	incf	(strtof@expon+1)& (0+255),f,b
  4012   001EC6  EF84  F00F         	goto	l6516
  4013   001ECA                     l6512:
  4014                           
  4015                           ; BSR set to: 0
  4016   001ECA  C06A  F00B         	movff	strtof@_u,___fldiv@b
  4017   001ECE  C06B  F00C         	movff	strtof@_u+1,___fldiv@b+1
  4018   001ED2  C06C  F00D         	movff	strtof@_u+2,___fldiv@b+2
  4019   001ED6  C06D  F00E         	movff	strtof@_u+3,___fldiv@b+3
  4020   001EDA  0EF9               	movlw	249
  4021   001EDC  6E0F               	movwf	___fldiv@a^0,c
  4022   001EDE  0E02               	movlw	2
  4023   001EE0  6E10               	movwf	(___fldiv@a+1)^0,c
  4024   001EE2  0E15               	movlw	21
  4025   001EE4  6E11               	movwf	(___fldiv@a+2)^0,c
  4026   001EE6  0E50               	movlw	80
  4027   001EE8  6E12               	movwf	(___fldiv@a+3)^0,c
  4028   001EEA  EC08  F01C         	call	___fldiv	;wreg free
  4029   001EEE  C00B  F06A         	movff	?___fldiv,strtof@_u
  4030   001EF2  C00C  F06B         	movff	?___fldiv+1,strtof@_u+1
  4031   001EF6  C00D  F06C         	movff	?___fldiv+2,strtof@_u+2
  4032   001EFA  C00E  F06D         	movff	?___fldiv+3,strtof@_u+3
  4033   001EFE  0100               	movlb	0	; () banked
  4034   001F00  0EF6               	movlw	246
  4035   001F02  2766               	addwf	strtof@expon& (0+255),f,b
  4036   001F04  0EFF               	movlw	255
  4037   001F06  2367               	addwfc	(strtof@expon+1)& (0+255),f,b
  4038   001F08                     l6516:
  4039                           
  4040                           ; BSR set to: 0
  4041   001F08  BF67               	btfsc	(strtof@expon+1)& (0+255),7,b
  4042   001F0A  EF92  F00F         	goto	u8950
  4043   001F0E  5167               	movf	(strtof@expon+1)& (0+255),w,b
  4044   001F10  E107               	bnz	u8951
  4045   001F12  0E0A               	movlw	10
  4046   001F14  5D66               	subwf	strtof@expon& (0+255),w,b
  4047   001F16  B0D8               	btfsc	status,0,c
  4048   001F18  EF90  F00F         	goto	u8951
  4049   001F1C  EF92  F00F         	goto	u8950
  4050   001F20                     u8951:
  4051   001F20  EF65  F00F         	goto	l6512
  4052   001F24                     u8950:
  4053   001F24  EFB2  F00F         	goto	l6522
  4054   001F28                     l6518:
  4055                           
  4056                           ; BSR set to: 0
  4057   001F28  C06A  F00B         	movff	strtof@_u,___fldiv@b
  4058   001F2C  C06B  F00C         	movff	strtof@_u+1,___fldiv@b+1
  4059   001F30  C06C  F00D         	movff	strtof@_u+2,___fldiv@b+2
  4060   001F34  C06D  F00E         	movff	strtof@_u+3,___fldiv@b+3
  4061   001F38  0E00               	movlw	0
  4062   001F3A  6E0F               	movwf	___fldiv@a^0,c
  4063   001F3C  0E00               	movlw	0
  4064   001F3E  6E10               	movwf	(___fldiv@a+1)^0,c
  4065   001F40  0E20               	movlw	32
  4066   001F42  6E11               	movwf	(___fldiv@a+2)^0,c
  4067   001F44  0E41               	movlw	65
  4068   001F46  6E12               	movwf	(___fldiv@a+3)^0,c
  4069   001F48  EC08  F01C         	call	___fldiv	;wreg free
  4070   001F4C  C00B  F06A         	movff	?___fldiv,strtof@_u
  4071   001F50  C00C  F06B         	movff	?___fldiv+1,strtof@_u+1
  4072   001F54  C00D  F06C         	movff	?___fldiv+2,strtof@_u+2
  4073   001F58  C00E  F06D         	movff	?___fldiv+3,strtof@_u+3
  4074   001F5C  0100               	movlb	0	; () banked
  4075   001F5E  0766               	decf	strtof@expon& (0+255),f,b
  4076   001F60  A0D8               	btfss	status,0,c
  4077   001F62  0767               	decf	(strtof@expon+1)& (0+255),f,b
  4078   001F64                     l6522:
  4079                           
  4080                           ; BSR set to: 0
  4081   001F64  5166               	movf	strtof@expon& (0+255),w,b
  4082   001F66  1167               	iorwf	(strtof@expon+1)& (0+255),w,b
  4083   001F68  A4D8               	btfss	status,2,c
  4084   001F6A  EFB9  F00F         	goto	u8961
  4085   001F6E  EFBB  F00F         	goto	u8960
  4086   001F72                     u8961:
  4087   001F72  EF94  F00F         	goto	l6518
  4088   001F76                     u8960:
  4089   001F76                     
  4090                           ; BSR set to: 0
  4091   001F76  C06A  F024         	movff	strtof@_u,___flge@ff1
  4092   001F7A  C06B  F025         	movff	strtof@_u+1,___flge@ff1+1
  4093   001F7E  C06C  F026         	movff	strtof@_u+2,___flge@ff1+2
  4094   001F82  C06D  F027         	movff	strtof@_u+3,___flge@ff1+3
  4095   001F86  0E00               	movlw	0
  4096   001F88  6E28               	movwf	___flge@ff2^0,c
  4097   001F8A  0E00               	movlw	0
  4098   001F8C  6E29               	movwf	(___flge@ff2+1)^0,c
  4099   001F8E  0E80               	movlw	128
  4100   001F90  6E2A               	movwf	(___flge@ff2+2)^0,c
  4101   001F92  0E00               	movlw	0
  4102   001F94  6E2B               	movwf	(___flge@ff2+3)^0,c
  4103   001F96  EC6E  F021         	call	___flge	;wreg free
  4104   001F9A  B0D8               	btfsc	status,0,c
  4105   001F9C  EFD2  F00F         	goto	u8971
  4106   001FA0  EFD4  F00F         	goto	u8970
  4107   001FA4                     u8971:
  4108   001FA4  EF70  F010         	goto	l6556
  4109   001FA8                     u8970:
  4110   001FA8  0100               	movlb	0	; () banked
  4111   001FAA  A165               	btfss	strtof@flags& (0+255),0,b
  4112   001FAC  EFDA  F00F         	goto	u8981
  4113   001FB0  EFDC  F00F         	goto	u8980
  4114   001FB4                     u8981:
  4115   001FB4  EFE6  F00F         	goto	l6532
  4116   001FB8                     u8980:
  4117   001FB8                     
  4118                           ; BSR set to: 0
  4119   001FB8  0E00               	movlw	0
  4120   001FBA  6E30               	movwf	?_strtof^0,c
  4121   001FBC  0E00               	movlw	0
  4122   001FBE  6E31               	movwf	(?_strtof+1)^0,c
  4123   001FC0  0E80               	movlw	128
  4124   001FC2  6E32               	movwf	(?_strtof+2)^0,c
  4125   001FC4  0E80               	movlw	128
  4126   001FC6  6E33               	movwf	(?_strtof+3)^0,c
  4127   001FC8  EFA7  F010         	goto	l1125
  4128   001FCC                     l6532:
  4129                           
  4130                           ; BSR set to: 0
  4131   001FCC  0E00               	movlw	0
  4132   001FCE  6E30               	movwf	?_strtof^0,c
  4133   001FD0  0E00               	movlw	0
  4134   001FD2  6E31               	movwf	(?_strtof+1)^0,c
  4135   001FD4  0E80               	movlw	128
  4136   001FD6  6E32               	movwf	(?_strtof+2)^0,c
  4137   001FD8  0E00               	movlw	0
  4138   001FDA  6E33               	movwf	(?_strtof+3)^0,c
  4139   001FDC  EFA7  F010         	goto	l1125
  4140   001FE0                     l6536:
  4141                           
  4142                           ; BSR set to: 0
  4143   001FE0  BF67               	btfsc	(strtof@expon+1)& (0+255),7,b
  4144   001FE2  EFFB  F00F         	goto	u8991
  4145   001FE6  5167               	movf	(strtof@expon+1)& (0+255),w,b
  4146   001FE8  E108               	bnz	u8990
  4147   001FEA  0566               	decf	strtof@expon& (0+255),w,b
  4148   001FEC  A0D8               	btfss	status,0,c
  4149   001FEE  EFFB  F00F         	goto	u8991
  4150   001FF2  EFFD  F00F         	goto	u8990
  4151   001FF6                     u8991:
  4152   001FF6  EF70  F010         	goto	l6556
  4153   001FFA                     u8990:
  4154   001FFA  EF1E  F010         	goto	l6544
  4155   001FFE                     l6540:
  4156                           
  4157                           ; BSR set to: 0
  4158   001FFE  C06A  F00B         	movff	strtof@_u,___flmul@b
  4159   002002  C06B  F00C         	movff	strtof@_u+1,___flmul@b+1
  4160   002006  C06C  F00D         	movff	strtof@_u+2,___flmul@b+2
  4161   00200A  C06D  F00E         	movff	strtof@_u+3,___flmul@b+3
  4162   00200E  0EF9               	movlw	249
  4163   002010  6E0F               	movwf	___flmul@a^0,c
  4164   002012  0E02               	movlw	2
  4165   002014  6E10               	movwf	(___flmul@a+1)^0,c
  4166   002016  0E15               	movlw	21
  4167   002018  6E11               	movwf	(___flmul@a+2)^0,c
  4168   00201A  0E50               	movlw	80
  4169   00201C  6E12               	movwf	(___flmul@a+3)^0,c
  4170   00201E  EC05  F018         	call	___flmul	;wreg free
  4171   002022  C00B  F06A         	movff	?___flmul,strtof@_u
  4172   002026  C00C  F06B         	movff	?___flmul+1,strtof@_u+1
  4173   00202A  C00D  F06C         	movff	?___flmul+2,strtof@_u+2
  4174   00202E  C00E  F06D         	movff	?___flmul+3,strtof@_u+3
  4175   002032  0100               	movlb	0	; () banked
  4176   002034  0EF6               	movlw	246
  4177   002036  2766               	addwf	strtof@expon& (0+255),f,b
  4178   002038  0EFF               	movlw	255
  4179   00203A  2367               	addwfc	(strtof@expon+1)& (0+255),f,b
  4180   00203C                     l6544:
  4181                           
  4182                           ; BSR set to: 0
  4183   00203C  5167               	movf	(strtof@expon+1)& (0+255),w,b
  4184   00203E  E107               	bnz	u9001
  4185   002040  0E0A               	movlw	10
  4186   002042  5D66               	subwf	strtof@expon& (0+255),w,b
  4187   002044  B0D8               	btfsc	status,0,c
  4188   002046  EF27  F010         	goto	u9001
  4189   00204A  EF29  F010         	goto	u9000
  4190   00204E                     u9001:
  4191   00204E  EFFF  F00F         	goto	l6540
  4192   002052                     u9000:
  4193   002052  EF49  F010         	goto	l6550
  4194   002056                     l6546:
  4195                           
  4196                           ; BSR set to: 0
  4197   002056  C06A  F00B         	movff	strtof@_u,___flmul@b
  4198   00205A  C06B  F00C         	movff	strtof@_u+1,___flmul@b+1
  4199   00205E  C06C  F00D         	movff	strtof@_u+2,___flmul@b+2
  4200   002062  C06D  F00E         	movff	strtof@_u+3,___flmul@b+3
  4201   002066  0E00               	movlw	0
  4202   002068  6E0F               	movwf	___flmul@a^0,c
  4203   00206A  0E00               	movlw	0
  4204   00206C  6E10               	movwf	(___flmul@a+1)^0,c
  4205   00206E  0E20               	movlw	32
  4206   002070  6E11               	movwf	(___flmul@a+2)^0,c
  4207   002072  0E41               	movlw	65
  4208   002074  6E12               	movwf	(___flmul@a+3)^0,c
  4209   002076  EC05  F018         	call	___flmul	;wreg free
  4210   00207A  C00B  F06A         	movff	?___flmul,strtof@_u
  4211   00207E  C00C  F06B         	movff	?___flmul+1,strtof@_u+1
  4212   002082  C00D  F06C         	movff	?___flmul+2,strtof@_u+2
  4213   002086  C00E  F06D         	movff	?___flmul+3,strtof@_u+3
  4214   00208A  0100               	movlb	0	; () banked
  4215   00208C  0766               	decf	strtof@expon& (0+255),f,b
  4216   00208E  A0D8               	btfss	status,0,c
  4217   002090  0767               	decf	(strtof@expon+1)& (0+255),f,b
  4218   002092                     l6550:
  4219                           
  4220                           ; BSR set to: 0
  4221   002092  5166               	movf	strtof@expon& (0+255),w,b
  4222   002094  1167               	iorwf	(strtof@expon+1)& (0+255),w,b
  4223   002096  A4D8               	btfss	status,2,c
  4224   002098  EF50  F010         	goto	u9011
  4225   00209C  EF52  F010         	goto	u9010
  4226   0020A0                     u9011:
  4227   0020A0  EF2B  F010         	goto	l6546
  4228   0020A4                     u9010:
  4229   0020A4                     
  4230                           ; BSR set to: 0
  4231   0020A4  0EFF               	movlw	255
  4232   0020A6  6E24               	movwf	___flge@ff1^0,c
  4233   0020A8  0EFF               	movlw	255
  4234   0020AA  6E25               	movwf	(___flge@ff1+1)^0,c
  4235   0020AC  0E7F               	movlw	127
  4236   0020AE  6E26               	movwf	(___flge@ff1+2)^0,c
  4237   0020B0  0E7F               	movlw	127
  4238   0020B2  6E27               	movwf	(___flge@ff1+3)^0,c
  4239   0020B4  C06A  F028         	movff	strtof@_u,___flge@ff2
  4240   0020B8  C06B  F029         	movff	strtof@_u+1,___flge@ff2+1
  4241   0020BC  C06C  F02A         	movff	strtof@_u+2,___flge@ff2+2
  4242   0020C0  C06D  F02B         	movff	strtof@_u+3,___flge@ff2+3
  4243   0020C4  EC6E  F021         	call	___flge	;wreg free
  4244   0020C8  B0D8               	btfsc	status,0,c
  4245   0020CA  EF69  F010         	goto	u9021
  4246   0020CE  EF6B  F010         	goto	u9020
  4247   0020D2                     u9021:
  4248   0020D2  EF70  F010         	goto	l6556
  4249   0020D6                     u9020:
  4250   0020D6  0E00               	movlw	0
  4251   0020D8  0100               	movlb	0	; () banked
  4252   0020DA  6F63               	movwf	(strtof@err+1)& (0+255),b
  4253   0020DC  0E22               	movlw	34
  4254   0020DE  6F62               	movwf	strtof@err& (0+255),b
  4255   0020E0                     l6556:
  4256   0020E0  0100               	movlb	0	; () banked
  4257   0020E2  5162               	movf	strtof@err& (0+255),w,b
  4258   0020E4  1163               	iorwf	(strtof@err+1)& (0+255),w,b
  4259   0020E6  B4D8               	btfsc	status,2,c
  4260   0020E8  EF78  F010         	goto	u9031
  4261   0020EC  EF7A  F010         	goto	u9030
  4262   0020F0                     u9031:
  4263   0020F0  EF86  F010         	goto	l6562
  4264   0020F4                     u9030:
  4265   0020F4                     
  4266                           ; BSR set to: 0
  4267   0020F4  C062  F04F         	movff	strtof@err,_errno
  4268   0020F8  C063  F050         	movff	strtof@err+1,_errno+1
  4269   0020FC                     
  4270                           ; BSR set to: 0
  4271   0020FC  0E00               	movlw	0
  4272   0020FE  6F6A               	movwf	strtof@_u& (0+255),b
  4273   002100  0E00               	movlw	0
  4274   002102  6F6B               	movwf	(strtof@_u+1)& (0+255),b
  4275   002104  0E80               	movlw	128
  4276   002106  6F6C               	movwf	(strtof@_u+2)& (0+255),b
  4277   002108  0E7F               	movlw	127
  4278   00210A  6F6D               	movwf	(strtof@_u+3)& (0+255),b
  4279   00210C                     l6562:
  4280                           
  4281                           ; BSR set to: 0
  4282   00210C  A165               	btfss	strtof@flags& (0+255),0,b
  4283   00210E  EF8B  F010         	goto	u9041
  4284   002112  EF8D  F010         	goto	u9040
  4285   002116                     u9041:
  4286   002116  EF9F  F010         	goto	l6566
  4287   00211A                     u9040:
  4288   00211A                     
  4289                           ; BSR set to: 0
  4290   00211A  C06A  F00B         	movff	strtof@_u,___flneg@f1
  4291   00211E  C06B  F00C         	movff	strtof@_u+1,___flneg@f1+1
  4292   002122  C06C  F00D         	movff	strtof@_u+2,___flneg@f1+2
  4293   002126  C06D  F00E         	movff	strtof@_u+3,___flneg@f1+3
  4294   00212A  EC0C  F027         	call	___flneg	;wreg free
  4295   00212E  C00B  F06A         	movff	?___flneg,strtof@_u
  4296   002132  C00C  F06B         	movff	?___flneg+1,strtof@_u+1
  4297   002136  C00D  F06C         	movff	?___flneg+2,strtof@_u+2
  4298   00213A  C00E  F06D         	movff	?___flneg+3,strtof@_u+3
  4299   00213E                     l6566:
  4300   00213E  C06A  F030         	movff	strtof@_u,?_strtof
  4301   002142  C06B  F031         	movff	strtof@_u+1,?_strtof+1
  4302   002146  C06C  F032         	movff	strtof@_u+2,?_strtof+2
  4303   00214A  C06D  F033         	movff	strtof@_u+3,?_strtof+3
  4304   00214E                     l1125:
  4305   00214E  0012               	return		;funcret
  4306   002150                     __end_of_strtof:
  4307                           	callstack 0
  4308                           
  4309 ;; *************** function _toupper *****************
  4310 ;; Defined at:
  4311 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\toupper.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  c               2   14[COMRAM] int 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  2   14[COMRAM] int 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;Total ram usage:        4 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; Hardware stack levels required when called: 4
  4332 ;; This function calls:
  4333 ;;		_islower
  4334 ;; This function is called by:
  4335 ;;		_strtof
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text6
  4340   004DE0                     __ptext6:
  4341                           	callstack 0
  4342   004DE0                     _toupper:
  4343                           	callstack 25
  4344   004DE0  0E9F               	movlw	159
  4345   004DE2  240F               	addwf	toupper@c^0,w,c
  4346   004DE4  6E11               	movwf	??_toupper^0,c
  4347   004DE6  0EFF               	movlw	255
  4348   004DE8  2010               	addwfc	(toupper@c+1)^0,w,c
  4349   004DEA  6E12               	movwf	(??_toupper+1)^0,c
  4350   004DEC  5012               	movf	(??_toupper+1)^0,w,c
  4351   004DEE  E107               	bnz	u8111
  4352   004DF0  0E1A               	movlw	26
  4353   004DF2  5C11               	subwf	??_toupper^0,w,c
  4354   004DF4  B0D8               	btfsc	status,0,c
  4355   004DF6  EFFF  F026         	goto	u8111
  4356   004DFA  EF01  F027         	goto	u8110
  4357   004DFE                     u8111:
  4358   004DFE  EF07  F027         	goto	l1268
  4359   004E02                     u8110:
  4360   004E02  0E5F               	movlw	95
  4361   004E04  140F               	andwf	toupper@c^0,w,c
  4362   004E06  6E0F               	movwf	?_toupper^0,c
  4363   004E08  6A10               	clrf	(?_toupper+1)^0,c
  4364   004E0A  EF0B  F027         	goto	l1271
  4365   004E0E                     l1268:
  4366   004E0E  C00F  F00F         	movff	toupper@c,?_toupper
  4367   004E12  C010  F010         	movff	toupper@c+1,?_toupper+1
  4368   004E16                     l1271:
  4369   004E16  0012               	return		;funcret
  4370   004E18                     __end_of_toupper:
  4371                           	callstack 0
  4372                           
  4373 ;; *************** function _islower *****************
  4374 ;; Defined at:
  4375 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\islower.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  c               2   10[COMRAM] int 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;		None
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  2   10[COMRAM] int 
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4393 ;;Total ram usage:        4 bytes
  4394 ;; Hardware stack levels used: 1
  4395 ;; Hardware stack levels required when called: 3
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_toupper
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text7
  4404   004E50                     __ptext7:
  4405                           	callstack 0
  4406   004E50                     _islower:
  4407                           	callstack 25
  4408   004E50  0E9F               	movlw	159
  4409   004E52  240B               	addwf	islower@c^0,w,c
  4410   004E54  6E0D               	movwf	??_islower^0,c
  4411   004E56  0EFF               	movlw	255
  4412   004E58  200C               	addwfc	(islower@c+1)^0,w,c
  4413   004E5A  6E0E               	movwf	(??_islower+1)^0,c
  4414   004E5C  500E               	movf	(??_islower+1)^0,w,c
  4415   004E5E  E10A               	bnz	u7920
  4416   004E60  0E1A               	movlw	26
  4417   004E62  5C0D               	subwf	??_islower^0,w,c
  4418   004E64  A0D8               	btfss	status,0,c
  4419   004E66  EF37  F027         	goto	u7921
  4420   004E6A  EF3A  F027         	goto	u7920
  4421   004E6E                     u7921:
  4422   004E6E  0E01               	movlw	1
  4423   004E70  EF3B  F027         	goto	u7930
  4424   004E74                     u7920:
  4425   004E74  0E00               	movlw	0
  4426   004E76                     u7930:
  4427   004E76  6E0B               	movwf	?_islower^0,c
  4428   004E78  6A0C               	clrf	(?_islower+1)^0,c
  4429   004E7A  0012               	return		;funcret
  4430   004E7C                     __end_of_islower:
  4431                           	callstack 0
  4432                           
  4433 ;; *************** function _nanf *****************
  4434 ;; Defined at:
  4435 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nanf.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4438 ;;		 -> STR_26(1), 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  u               4   14[COMRAM] struct .
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  4   10[COMRAM] float 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;Total ram usage:        8 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 3
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_strtof
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text8
  4465   004F40                     __ptext8:
  4466                           	callstack 0
  4467   004F40                     _nanf:
  4468                           	callstack 26
  4469   004F40  0EFF               	movlw	255
  4470   004F42  6E0F               	movwf	nanf@u^0,c
  4471   004F44  0EFF               	movlw	255
  4472   004F46  6E10               	movwf	(nanf@u+1)^0,c
  4473   004F48  0EFF               	movlw	255
  4474   004F4A  6E11               	movwf	(nanf@u+2)^0,c
  4475   004F4C  0E7F               	movlw	127
  4476   004F4E  6E12               	movwf	(nanf@u+3)^0,c
  4477   004F50  C00F  F00B         	movff	nanf@u,?_nanf
  4478   004F54  C010  F00C         	movff	nanf@u+1,?_nanf+1
  4479   004F58  C011  F00D         	movff	nanf@u+2,?_nanf+2
  4480   004F5C  C012  F00E         	movff	nanf@u+3,?_nanf+3
  4481   004F60  0012               	return		;funcret
  4482   004F62                     __end_of_nanf:
  4483                           	callstack 0
  4484                           
  4485 ;; *************** function _isxdigit *****************
  4486 ;; Defined at:
  4487 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\isxdigit.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  c               2   14[COMRAM] int 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  2   14[COMRAM] int 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;Total ram usage:        7 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 4
  4508 ;; This function calls:
  4509 ;;		_isdigit
  4510 ;; This function is called by:
  4511 ;;		_strtof
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text9
  4516   004ACE                     __ptext9:
  4517                           	callstack 0
  4518   004ACE                     _isxdigit:
  4519                           	callstack 25
  4520   004ACE  0E01               	movlw	1
  4521   004AD0  6E15               	movwf	_isxdigit$1014^0,c
  4522   004AD2  0ED0               	movlw	208
  4523   004AD4  240F               	addwf	isxdigit@c^0,w,c
  4524   004AD6  6E11               	movwf	??_isxdigit^0,c
  4525   004AD8  0EFF               	movlw	255
  4526   004ADA  2010               	addwfc	(isxdigit@c+1)^0,w,c
  4527   004ADC  6E12               	movwf	(??_isxdigit+1)^0,c
  4528   004ADE  5012               	movf	(??_isxdigit+1)^0,w,c
  4529   004AE0  E109               	bnz	u8090
  4530   004AE2  0E0A               	movlw	10
  4531   004AE4  5C11               	subwf	??_isxdigit^0,w,c
  4532   004AE6  A0D8               	btfss	status,0,c
  4533   004AE8  EF78  F025         	goto	u8091
  4534   004AEC  EF7A  F025         	goto	u8090
  4535   004AF0                     u8091:
  4536   004AF0  EF93  F025         	goto	l6136
  4537   004AF4                     u8090:
  4538   004AF4  0E20               	movlw	32
  4539   004AF6  100F               	iorwf	isxdigit@c^0,w,c
  4540   004AF8  6E11               	movwf	??_isxdigit^0,c
  4541   004AFA  0E00               	movlw	0
  4542   004AFC  1010               	iorwf	(isxdigit@c+1)^0,w,c
  4543   004AFE  6E12               	movwf	(??_isxdigit+1)^0,c
  4544   004B00  0E9F               	movlw	159
  4545   004B02  2411               	addwf	??_isxdigit^0,w,c
  4546   004B04  6E13               	movwf	(??_isxdigit+2)^0,c
  4547   004B06  0EFF               	movlw	255
  4548   004B08  2012               	addwfc	(??_isxdigit+1)^0,w,c
  4549   004B0A  6E14               	movwf	(??_isxdigit+3)^0,c
  4550   004B0C  5014               	movf	(??_isxdigit+3)^0,w,c
  4551   004B0E  E109               	bnz	u8100
  4552   004B10  0E06               	movlw	6
  4553   004B12  5C13               	subwf	(??_isxdigit+2)^0,w,c
  4554   004B14  A0D8               	btfss	status,0,c
  4555   004B16  EF8F  F025         	goto	u8101
  4556   004B1A  EF91  F025         	goto	u8100
  4557   004B1E                     u8101:
  4558   004B1E  EF93  F025         	goto	l6136
  4559   004B22                     u8100:
  4560   004B22  0E00               	movlw	0
  4561   004B24  6E15               	movwf	_isxdigit$1014^0,c
  4562   004B26                     l6136:
  4563   004B26  C015  F00F         	movff	_isxdigit$1014,?_isxdigit
  4564   004B2A  6A10               	clrf	(?_isxdigit+1)^0,c
  4565   004B2C  0012               	return		;funcret
  4566   004B2E                     __end_of_isxdigit:
  4567                           	callstack 0
  4568                           
  4569 ;; *************** function _isdigit *****************
  4570 ;; Defined at:
  4571 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\isdigit.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  c               2   10[COMRAM] int 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  2   10[COMRAM] int 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;Total ram usage:        4 bytes
  4590 ;; Hardware stack levels used: 1
  4591 ;; Hardware stack levels required when called: 3
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_strtof
  4596 ;;		_isxdigit
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text10
  4601   004E7C                     __ptext10:
  4602                           	callstack 0
  4603   004E7C                     _isdigit:
  4604                           	callstack 25
  4605   004E7C  0ED0               	movlw	208
  4606   004E7E  240B               	addwf	isdigit@c^0,w,c
  4607   004E80  6E0D               	movwf	??_isdigit^0,c
  4608   004E82  0EFF               	movlw	255
  4609   004E84  200C               	addwfc	(isdigit@c+1)^0,w,c
  4610   004E86  6E0E               	movwf	(??_isdigit+1)^0,c
  4611   004E88  500E               	movf	(??_isdigit+1)^0,w,c
  4612   004E8A  E10A               	bnz	u7900
  4613   004E8C  0E0A               	movlw	10
  4614   004E8E  5C0D               	subwf	??_isdigit^0,w,c
  4615   004E90  A0D8               	btfss	status,0,c
  4616   004E92  EF4D  F027         	goto	u7901
  4617   004E96  EF50  F027         	goto	u7900
  4618   004E9A                     u7901:
  4619   004E9A  0E01               	movlw	1
  4620   004E9C  EF51  F027         	goto	u7910
  4621   004EA0                     u7900:
  4622   004EA0  0E00               	movlw	0
  4623   004EA2                     u7910:
  4624   004EA2  6E0B               	movwf	?_isdigit^0,c
  4625   004EA4  6A0C               	clrf	(?_isdigit+1)^0,c
  4626   004EA6  0012               	return		;funcret
  4627   004EA8                     __end_of_isdigit:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function _isspace *****************
  4631 ;; Defined at:
  4632 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\isspace.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  c               2   10[COMRAM] int 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  2   10[COMRAM] int 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;Total ram usage:        5 bytes
  4651 ;; Hardware stack levels used: 1
  4652 ;; Hardware stack levels required when called: 3
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_strtof
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text11
  4661   004CD0                     __ptext11:
  4662                           	callstack 0
  4663   004CD0                     _isspace:
  4664                           	callstack 26
  4665   004CD0  0E01               	movlw	1
  4666   004CD2  6E0F               	movwf	_isspace$1002^0,c
  4667   004CD4  0E20               	movlw	32
  4668   004CD6  180B               	xorwf	isspace@c^0,w,c
  4669   004CD8  100C               	iorwf	(isspace@c+1)^0,w,c
  4670   004CDA  B4D8               	btfsc	status,2,c
  4671   004CDC  EF72  F026         	goto	u8071
  4672   004CE0  EF74  F026         	goto	u8070
  4673   004CE4                     u8071:
  4674   004CE4  EF87  F026         	goto	l6112
  4675   004CE8                     u8070:
  4676   004CE8  0EF7               	movlw	247
  4677   004CEA  240B               	addwf	isspace@c^0,w,c
  4678   004CEC  6E0D               	movwf	??_isspace^0,c
  4679   004CEE  0EFF               	movlw	255
  4680   004CF0  200C               	addwfc	(isspace@c+1)^0,w,c
  4681   004CF2  6E0E               	movwf	(??_isspace+1)^0,c
  4682   004CF4  500E               	movf	(??_isspace+1)^0,w,c
  4683   004CF6  E109               	bnz	u8080
  4684   004CF8  0E05               	movlw	5
  4685   004CFA  5C0D               	subwf	??_isspace^0,w,c
  4686   004CFC  A0D8               	btfss	status,0,c
  4687   004CFE  EF83  F026         	goto	u8081
  4688   004D02  EF85  F026         	goto	u8080
  4689   004D06                     u8081:
  4690   004D06  EF87  F026         	goto	l6112
  4691   004D0A                     u8080:
  4692   004D0A  0E00               	movlw	0
  4693   004D0C  6E0F               	movwf	_isspace$1002^0,c
  4694   004D0E                     l6112:
  4695   004D0E  C00F  F00B         	movff	_isspace$1002,?_isspace
  4696   004D12  6A0C               	clrf	(?_isspace+1)^0,c
  4697   004D14  0012               	return		;funcret
  4698   004D16                     __end_of_isspace:
  4699                           	callstack 0
  4700                           
  4701 ;; *************** function ___xxtofl *****************
  4702 ;; Defined at:
  4703 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  sign            1    wreg     unsigned char 
  4706 ;;  val             4   10[COMRAM] long 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  sign            1   18[COMRAM] unsigned char 
  4709 ;;  arg             4   20[COMRAM] unsigned long 
  4710 ;;  exp             1   19[COMRAM] unsigned char 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  4   10[COMRAM] unsigned char 
  4713 ;; Registers used:
  4714 ;;		wreg, status,2, status,0
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;Total ram usage:       14 bytes
  4725 ;; Hardware stack levels used: 1
  4726 ;; Hardware stack levels required when called: 3
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_strtof
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text12
  4735   004022                     __ptext12:
  4736                           	callstack 0
  4737   004022                     ___xxtofl:
  4738                           	callstack 26
  4739                           
  4740                           ;incstack = 0
  4741                           ;___xxtofl@sign stored from wreg
  4742   004022  6E13               	movwf	___xxtofl@sign^0,c
  4743   004024  5013               	movf	___xxtofl@sign^0,w,c
  4744   004026  B4D8               	btfsc	status,2,c
  4745   004028  EF18  F020         	goto	u7961
  4746   00402C  EF1A  F020         	goto	u7960
  4747   004030                     u7961:
  4748   004030  EF3C  F020         	goto	l805
  4749   004034                     u7960:
  4750   004034  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  4751   004036  EF21  F020         	goto	u7970
  4752   00403A  EF1F  F020         	goto	u7971
  4753   00403E                     u7971:
  4754   00403E  EF3C  F020         	goto	l805
  4755   004042                     u7970:
  4756   004042  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  4757   004046  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  4758   00404A  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  4759   00404E  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  4760   004052  1E0F               	comf	??___xxtofl^0,f,c
  4761   004054  1E10               	comf	(??___xxtofl+1)^0,f,c
  4762   004056  1E11               	comf	(??___xxtofl+2)^0,f,c
  4763   004058  1E12               	comf	(??___xxtofl+3)^0,f,c
  4764   00405A  2A0F               	incf	??___xxtofl^0,f,c
  4765   00405C  0E00               	movlw	0
  4766   00405E  2210               	addwfc	(??___xxtofl+1)^0,f,c
  4767   004060  2211               	addwfc	(??___xxtofl+2)^0,f,c
  4768   004062  2212               	addwfc	(??___xxtofl+3)^0,f,c
  4769   004064  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  4770   004068  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  4771   00406C  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  4772   004070  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  4773   004074  EF44  F020         	goto	l6054
  4774   004078                     l805:
  4775   004078  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  4776   00407C  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4777   004080  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4778   004084  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4779   004088                     l6054:
  4780   004088  500B               	movf	___xxtofl@val^0,w,c
  4781   00408A  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  4782   00408C  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  4783   00408E  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  4784   004090  A4D8               	btfss	status,2,c
  4785   004092  EF4D  F020         	goto	u7981
  4786   004096  EF4F  F020         	goto	u7980
  4787   00409A                     u7981:
  4788   00409A  EF59  F020         	goto	l6060
  4789   00409E                     u7980:
  4790   00409E  0E00               	movlw	0
  4791   0040A0  6E0B               	movwf	?___xxtofl^0,c
  4792   0040A2  0E00               	movlw	0
  4793   0040A4  6E0C               	movwf	(?___xxtofl+1)^0,c
  4794   0040A6  0E00               	movlw	0
  4795   0040A8  6E0D               	movwf	(?___xxtofl+2)^0,c
  4796   0040AA  0E00               	movlw	0
  4797   0040AC  6E0E               	movwf	(?___xxtofl+3)^0,c
  4798   0040AE  EFEA  F020         	goto	l808
  4799   0040B2                     l6060:
  4800   0040B2  0E96               	movlw	150
  4801   0040B4  6E14               	movwf	___xxtofl@exp^0,c
  4802   0040B6  EF63  F020         	goto	l6064
  4803   0040BA                     l6062:
  4804   0040BA  2A14               	incf	___xxtofl@exp^0,f,c
  4805   0040BC  90D8               	bcf	status,0,c
  4806   0040BE  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  4807   0040C0  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  4808   0040C2  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  4809   0040C4  3215               	rrcf	___xxtofl@arg^0,f,c
  4810   0040C6                     l6064:
  4811   0040C6  0E00               	movlw	0
  4812   0040C8  1415               	andwf	___xxtofl@arg^0,w,c
  4813   0040CA  6E0F               	movwf	??___xxtofl^0,c
  4814   0040CC  0E00               	movlw	0
  4815   0040CE  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  4816   0040D0  6E10               	movwf	(??___xxtofl+1)^0,c
  4817   0040D2  0E00               	movlw	0
  4818   0040D4  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  4819   0040D6  6E11               	movwf	(??___xxtofl+2)^0,c
  4820   0040D8  0EFE               	movlw	254
  4821   0040DA  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  4822   0040DC  6E12               	movwf	(??___xxtofl+3)^0,c
  4823   0040DE  500F               	movf	??___xxtofl^0,w,c
  4824   0040E0  1010               	iorwf	(??___xxtofl+1)^0,w,c
  4825   0040E2  1011               	iorwf	(??___xxtofl+2)^0,w,c
  4826   0040E4  1012               	iorwf	(??___xxtofl+3)^0,w,c
  4827   0040E6  A4D8               	btfss	status,2,c
  4828   0040E8  EF78  F020         	goto	u7991
  4829   0040EC  EF7A  F020         	goto	u7990
  4830   0040F0                     u7991:
  4831   0040F0  EF5D  F020         	goto	l6062
  4832   0040F4                     u7990:
  4833   0040F4  EF88  F020         	goto	l812
  4834   0040F8                     l6066:
  4835   0040F8  2A14               	incf	___xxtofl@exp^0,f,c
  4836   0040FA  0E01               	movlw	1
  4837   0040FC  2615               	addwf	___xxtofl@arg^0,f,c
  4838   0040FE  0E00               	movlw	0
  4839   004100  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  4840   004102  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  4841   004104  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  4842   004106  90D8               	bcf	status,0,c
  4843   004108  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  4844   00410A  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  4845   00410C  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  4846   00410E  3215               	rrcf	___xxtofl@arg^0,f,c
  4847   004110                     l812:
  4848   004110  0E00               	movlw	0
  4849   004112  1415               	andwf	___xxtofl@arg^0,w,c
  4850   004114  6E0F               	movwf	??___xxtofl^0,c
  4851   004116  0E00               	movlw	0
  4852   004118  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  4853   00411A  6E10               	movwf	(??___xxtofl+1)^0,c
  4854   00411C  0E00               	movlw	0
  4855   00411E  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  4856   004120  6E11               	movwf	(??___xxtofl+2)^0,c
  4857   004122  0EFF               	movlw	255
  4858   004124  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  4859   004126  6E12               	movwf	(??___xxtofl+3)^0,c
  4860   004128  500F               	movf	??___xxtofl^0,w,c
  4861   00412A  1010               	iorwf	(??___xxtofl+1)^0,w,c
  4862   00412C  1011               	iorwf	(??___xxtofl+2)^0,w,c
  4863   00412E  1012               	iorwf	(??___xxtofl+3)^0,w,c
  4864   004130  A4D8               	btfss	status,2,c
  4865   004132  EF9D  F020         	goto	u8001
  4866   004136  EF9F  F020         	goto	u8000
  4867   00413A                     u8001:
  4868   00413A  EF7C  F020         	goto	l6066
  4869   00413E                     u8000:
  4870   00413E  EFA7  F020         	goto	l6074
  4871   004142                     l6072:
  4872   004142  0614               	decf	___xxtofl@exp^0,f,c
  4873   004144  90D8               	bcf	status,0,c
  4874   004146  3615               	rlcf	___xxtofl@arg^0,f,c
  4875   004148  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  4876   00414A  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  4877   00414C  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  4878   00414E                     l6074:
  4879   00414E  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  4880   004150  EFAC  F020         	goto	u8011
  4881   004154  EFAE  F020         	goto	u8010
  4882   004158                     u8011:
  4883   004158  EFB6  F020         	goto	l819
  4884   00415C                     u8010:
  4885   00415C  0E02               	movlw	2
  4886   00415E  6014               	cpfslt	___xxtofl@exp^0,c
  4887   004160  EFB4  F020         	goto	u8021
  4888   004164  EFB6  F020         	goto	u8020
  4889   004168                     u8021:
  4890   004168  EFA1  F020         	goto	l6072
  4891   00416C                     u8020:
  4892   00416C                     l819:
  4893   00416C  B014               	btfsc	___xxtofl@exp^0,0,c
  4894   00416E  EFBB  F020         	goto	u8031
  4895   004172  EFBD  F020         	goto	u8030
  4896   004176                     u8031:
  4897   004176  EFBE  F020         	goto	l6080
  4898   00417A                     u8030:
  4899   00417A  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  4900   00417C                     l6080:
  4901   00417C  90D8               	bcf	status,0,c
  4902   00417E  3214               	rrcf	___xxtofl@exp^0,f,c
  4903   004180  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  4904   004184  6A10               	clrf	(??___xxtofl+1)^0,c
  4905   004186  6A11               	clrf	(??___xxtofl+2)^0,c
  4906   004188  6A12               	clrf	(??___xxtofl+3)^0,c
  4907   00418A  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  4908   00418E  6A11               	clrf	(??___xxtofl+2)^0,c
  4909   004190  6A10               	clrf	(??___xxtofl+1)^0,c
  4910   004192  6A0F               	clrf	??___xxtofl^0,c
  4911   004194  500F               	movf	??___xxtofl^0,w,c
  4912   004196  1215               	iorwf	___xxtofl@arg^0,f,c
  4913   004198  5010               	movf	(??___xxtofl+1)^0,w,c
  4914   00419A  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  4915   00419C  5011               	movf	(??___xxtofl+2)^0,w,c
  4916   00419E  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  4917   0041A0  5012               	movf	(??___xxtofl+3)^0,w,c
  4918   0041A2  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  4919   0041A4  5013               	movf	___xxtofl@sign^0,w,c
  4920   0041A6  B4D8               	btfsc	status,2,c
  4921   0041A8  EFD8  F020         	goto	u8041
  4922   0041AC  EFDA  F020         	goto	u8040
  4923   0041B0                     u8041:
  4924   0041B0  EFE2  F020         	goto	l6090
  4925   0041B4                     u8040:
  4926   0041B4  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  4927   0041B6  EFE1  F020         	goto	u8050
  4928   0041BA  EFDF  F020         	goto	u8051
  4929   0041BE                     u8051:
  4930   0041BE  EFE2  F020         	goto	l6090
  4931   0041C2                     u8050:
  4932   0041C2  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  4933   0041C4                     l6090:
  4934   0041C4  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  4935   0041C8  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  4936   0041CC  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  4937   0041D0  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  4938   0041D4                     l808:
  4939   0041D4  0012               	return		;funcret
  4940   0041D6                     __end_of___xxtofl:
  4941                           	callstack 0
  4942                           
  4943 ;; *************** function ___lmul *****************
  4944 ;; Defined at:
  4945 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  multiplier      4   10[COMRAM] unsigned long 
  4948 ;;  multiplicand    4   14[COMRAM] unsigned long 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  product         4   18[COMRAM] unsigned long 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  4   10[COMRAM] unsigned long 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2, status,0
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4960 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;Total ram usage:       12 bytes
  4965 ;; Hardware stack levels used: 1
  4966 ;; Hardware stack levels required when called: 3
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_strtof
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text13
  4975   00486E                     __ptext13:
  4976                           	callstack 0
  4977   00486E                     ___lmul:
  4978                           	callstack 26
  4979   00486E  0E00               	movlw	0
  4980   004870  6E13               	movwf	___lmul@product^0,c
  4981   004872  0E00               	movlw	0
  4982   004874  6E14               	movwf	(___lmul@product+1)^0,c
  4983   004876  0E00               	movlw	0
  4984   004878  6E15               	movwf	(___lmul@product+2)^0,c
  4985   00487A  0E00               	movlw	0
  4986   00487C  6E16               	movwf	(___lmul@product+3)^0,c
  4987   00487E                     l6040:
  4988   00487E  A00B               	btfss	___lmul@multiplier^0,0,c
  4989   004880  EF44  F024         	goto	u7941
  4990   004884  EF46  F024         	goto	u7940
  4991   004888                     u7941:
  4992   004888  EF4E  F024         	goto	l6044
  4993   00488C                     u7940:
  4994   00488C  500F               	movf	___lmul@multiplicand^0,w,c
  4995   00488E  2613               	addwf	___lmul@product^0,f,c
  4996   004890  5010               	movf	(___lmul@multiplicand+1)^0,w,c
  4997   004892  2214               	addwfc	(___lmul@product+1)^0,f,c
  4998   004894  5011               	movf	(___lmul@multiplicand+2)^0,w,c
  4999   004896  2215               	addwfc	(___lmul@product+2)^0,f,c
  5000   004898  5012               	movf	(___lmul@multiplicand+3)^0,w,c
  5001   00489A  2216               	addwfc	(___lmul@product+3)^0,f,c
  5002   00489C                     l6044:
  5003   00489C  90D8               	bcf	status,0,c
  5004   00489E  360F               	rlcf	___lmul@multiplicand^0,f,c
  5005   0048A0  3610               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5006   0048A2  3611               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5007   0048A4  3612               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5008   0048A6  90D8               	bcf	status,0,c
  5009   0048A8  320E               	rrcf	(___lmul@multiplier+3)^0,f,c
  5010   0048AA  320D               	rrcf	(___lmul@multiplier+2)^0,f,c
  5011   0048AC  320C               	rrcf	(___lmul@multiplier+1)^0,f,c
  5012   0048AE  320B               	rrcf	___lmul@multiplier^0,f,c
  5013   0048B0  500B               	movf	___lmul@multiplier^0,w,c
  5014   0048B2  100C               	iorwf	(___lmul@multiplier+1)^0,w,c
  5015   0048B4  100D               	iorwf	(___lmul@multiplier+2)^0,w,c
  5016   0048B6  100E               	iorwf	(___lmul@multiplier+3)^0,w,c
  5017   0048B8  A4D8               	btfss	status,2,c
  5018   0048BA  EF61  F024         	goto	u7951
  5019   0048BE  EF63  F024         	goto	u7950
  5020   0048C2                     u7951:
  5021   0048C2  EF3F  F024         	goto	l6040
  5022   0048C6                     u7950:
  5023   0048C6  C013  F00B         	movff	___lmul@product,?___lmul
  5024   0048CA  C014  F00C         	movff	___lmul@product+1,?___lmul+1
  5025   0048CE  C015  F00D         	movff	___lmul@product+2,?___lmul+2
  5026   0048D2  C016  F00E         	movff	___lmul@product+3,?___lmul+3
  5027   0048D6  0012               	return		;funcret
  5028   0048D8                     __end_of___lmul:
  5029                           	callstack 0
  5030                           
  5031 ;; *************** function _sprintf *****************
  5032 ;; Defined at:
  5033 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  s               2   63[BANK0 ] PTR unsigned char 
  5036 ;;		 -> main@lcdBuffer(20), main@buffer(20), 
  5037 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
  5038 ;;		 -> STR_10(26), STR_7(10), STR_5(28), STR_2(10), 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  f              12   77[BANK0 ] struct _IO_FILE
  5041 ;;  ap              2   75[BANK0 ] PTR void [1]
  5042 ;;		 -> ?_sprintf(2), 
  5043 ;;  ret             2    0        int 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  2   63[BANK0 ] int 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5053 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5056 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;Total ram usage:       26 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; Hardware stack levels required when called: 10
  5060 ;; This function calls:
  5061 ;;		_vfprintf
  5062 ;; This function is called by:
  5063 ;;		_main
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text14
  5068   004C30                     __ptext14:
  5069                           	callstack 0
  5070   004C30                     _sprintf:
  5071                           	callstack 20
  5072   004C30  0EA3               	movlw	low (?_sprintf+4)
  5073   004C32  0100               	movlb	0	; () banked
  5074   004C34  6FAB               	movwf	sprintf@ap& (0+255),b
  5075   004C36  0E00               	movlw	high (?_sprintf+4)
  5076   004C38  6FAC               	movwf	(sprintf@ap+1)& (0+255),b
  5077   004C3A  C09F  F0AD         	movff	sprintf@s,sprintf@f
  5078   004C3E  C0A0  F0AE         	movff	sprintf@s+1,sprintf@f+1
  5079   004C42                     
  5080                           ; BSR set to: 0
  5081   004C42  0E00               	movlw	0
  5082   004C44  6FB1               	movwf	(sprintf@f+4)& (0+255),b
  5083   004C46  0E00               	movlw	0
  5084   004C48  6FB0               	movwf	(sprintf@f+3)& (0+255),b
  5085   004C4A                     
  5086                           ; BSR set to: 0
  5087   004C4A  0E00               	movlw	0
  5088   004C4C  6FB8               	movwf	(sprintf@f+11)& (0+255),b
  5089   004C4E  0E00               	movlw	0
  5090   004C50  6FB7               	movwf	(sprintf@f+10)& (0+255),b
  5091   004C52                     
  5092                           ; BSR set to: 0
  5093   004C52  0EAD               	movlw	low sprintf@f
  5094   004C54  6F99               	movwf	vfprintf@fp& (0+255),b
  5095   004C56  0E00               	movlw	high sprintf@f
  5096   004C58  6F9A               	movwf	(vfprintf@fp+1)& (0+255),b
  5097   004C5A  C0A1  F09B         	movff	sprintf@fmt,vfprintf@fmt
  5098   004C5E  C0A2  F09C         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5099   004C62  0EAB               	movlw	low sprintf@ap
  5100   004C64  6F9D               	movwf	vfprintf@ap& (0+255),b
  5101   004C66  0E00               	movlw	high sprintf@ap
  5102   004C68  6F9E               	movwf	(vfprintf@ap+1)& (0+255),b
  5103   004C6A  ECEF  F025         	call	_vfprintf	;wreg free
  5104   004C6E  0100               	movlb	0	; () banked
  5105   004C70  51B0               	movf	(sprintf@f+3)& (0+255),w,b
  5106   004C72  259F               	addwf	sprintf@s& (0+255),w,b
  5107   004C74  6ED9               	movwf	fsr2l,c
  5108   004C76  51B1               	movf	(sprintf@f+4)& (0+255),w,b
  5109   004C78  21A0               	addwfc	(sprintf@s+1)& (0+255),w,b
  5110   004C7A  6EDA               	movwf	fsr2h,c
  5111   004C7C  6ADF               	clrf	indf2,c
  5112   004C7E                     
  5113                           ; BSR set to: 0
  5114   004C7E  0012               	return		;funcret
  5115   004C80                     __end_of_sprintf:
  5116                           	callstack 0
  5117                           
  5118 ;; *************** function _vfprintf *****************
  5119 ;; Defined at:
  5120 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  fp              2   57[BANK0 ] PTR struct _IO_FILE
  5123 ;;		 -> sprintf@f(12), 
  5124 ;;  fmt             2   59[BANK0 ] PTR const unsigned char 
  5125 ;;		 -> STR_10(26), STR_7(10), STR_5(28), STR_2(10), 
  5126 ;;  ap              2   61[BANK0 ] PTR PTR void 
  5127 ;;		 -> sprintf@ap(2), 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  cfmt            2   66[COMRAM] PTR unsigned char 
  5130 ;;		 -> STR_10(26), STR_7(10), STR_5(28), STR_2(10), 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  2   57[BANK0 ] int 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5140 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;Total ram usage:        8 bytes
  5145 ;; Hardware stack levels used: 1
  5146 ;; Hardware stack levels required when called: 9
  5147 ;; This function calls:
  5148 ;;		_vfpfcnvrt
  5149 ;; This function is called by:
  5150 ;;		_sprintf
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text15
  5155   004BDE                     __ptext15:
  5156                           	callstack 0
  5157   004BDE                     _vfprintf:
  5158                           	callstack 20
  5159   004BDE                     
  5160                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  5161   004BDE  C09B  F043         	movff	vfprintf@fmt,vfprintf@cfmt
  5162   004BE2  C09C  F044         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5163                           
  5164                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  5165   004BE6  EF04  F026         	goto	l6098
  5166   004BEA                     l6096:
  5167                           
  5168                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5169   004BEA  C099  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  5170   004BEE  C09A  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5171   004BF2  0E43               	movlw	low vfprintf@cfmt
  5172   004BF4  0100               	movlb	0	; () banked
  5173   004BF6  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  5174   004BF8  0E00               	movlw	high vfprintf@cfmt
  5175   004BFA  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  5176   004BFC  C09D  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  5177   004C00  C09E  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5178   004C04  ECD5  F01D         	call	_vfpfcnvrt	;wreg free
  5179   004C08                     l6098:
  5180                           
  5181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  5182   004C08  C043  FFF6         	movff	vfprintf@cfmt,tblptrl
  5183   004C0C  C044  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5184   004C10                     	if	0	;tblptru may be non-zero
  5185   004C10                     	endif
  5186   004C10                     	if	0	;tblptru may be non-zero
  5187   004C10                     	endif
  5188   004C10  0008               	tblrd		*
  5189   004C12  50F5               	movf	tablat,w,c
  5190   004C14  0900               	iorlw	0
  5191   004C16  A4D8               	btfss	status,2,c
  5192   004C18  EF10  F026         	goto	u8061
  5193   004C1C  EF12  F026         	goto	u8060
  5194   004C20                     u8061:
  5195   004C20  EFF5  F025         	goto	l6096
  5196   004C24                     u8060:
  5197   004C24                     
  5198                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  5199   004C24  0E00               	movlw	0
  5200   004C26  0100               	movlb	0	; () banked
  5201   004C28  6F9A               	movwf	(?_vfprintf+1)& (0+255),b
  5202   004C2A  0E00               	movlw	0
  5203   004C2C  6F99               	movwf	?_vfprintf& (0+255),b
  5204   004C2E                     
  5205                           ; BSR set to: 0
  5206   004C2E  0012               	return		;funcret
  5207   004C30                     __end_of_vfprintf:
  5208                           	callstack 0
  5209                           
  5210 ;; *************** function _vfpfcnvrt *****************
  5211 ;; Defined at:
  5212 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  5215 ;;		 -> sprintf@f(12), 
  5216 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  5217 ;;		 -> vfprintf@cfmt(2), 
  5218 ;;  ap              2   48[BANK0 ] PTR PTR void 
  5219 ;;		 -> sprintf@ap(2), 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  convarg         4   50[BANK0 ] struct .
  5222 ;;  cp              2   55[BANK0 ] PTR unsigned char 
  5223 ;;		 -> STR_10(26), STR_7(10), STR_5(28), STR_2(10), 
  5224 ;;  i               2    0        int 
  5225 ;;  done            2    0        int 
  5226 ;;  c               1   54[BANK0 ] unsigned char 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      void 
  5229 ;; Registers used:
  5230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5236 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5239 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;Total ram usage:       15 bytes
  5241 ;; Hardware stack levels used: 1
  5242 ;; Hardware stack levels required when called: 8
  5243 ;; This function calls:
  5244 ;;		_efgtoa
  5245 ;;		_fputc
  5246 ;;		_read_prec_or_width
  5247 ;; This function is called by:
  5248 ;;		_vfprintf
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           	psect	text16
  5253   003BAA                     __ptext16:
  5254                           	callstack 0
  5255   003BAA                     _vfpfcnvrt:
  5256                           	callstack 20
  5257   003BAA                     
  5258                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  5259   003BAA  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5260   003BAE  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5261   003BB2  CFDE FFF6          	movff	postinc2,tblptrl
  5262   003BB6  CFDD FFF7          	movff	postdec2,tblptrh
  5263   003BBA                     	if	0	;tblptru may be non-zero
  5264   003BBA                     	endif
  5265   003BBA                     	if	0	;tblptru may be non-zero
  5266   003BBA                     	endif
  5267   003BBA  0008               	tblrd		*
  5268   003BBC  50F5               	movf	tablat,w,c
  5269   003BBE  0A25               	xorlw	37
  5270   003BC0  A4D8               	btfss	status,2,c
  5271   003BC2  EFE5  F01D         	goto	u7871
  5272   003BC6  EFE7  F01D         	goto	u7870
  5273   003BCA                     u7871:
  5274   003BCA  EFF3  F01E         	goto	l6006
  5275   003BCE                     u7870:
  5276   003BCE                     
  5277                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  5278   003BCE  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5279   003BD2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5280   003BD6  2ADE               	incf	postinc2,f,c
  5281   003BD8  0E00               	movlw	0
  5282   003BDA  22DD               	addwfc	postdec2,f,c
  5283   003BDC                     
  5284                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  5285   003BDC  0E00               	movlw	0
  5286   003BDE  6E52               	movwf	(_width+1)^0,c
  5287   003BE0  0E00               	movlw	0
  5288   003BE2  6E51               	movwf	_width^0,c
  5289   003BE4  C051  F0B9         	movff	_width,_flags
  5290   003BE8                     
  5291                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  5292   003BE8  6853               	setf	_prec^0,c
  5293   003BEA  6854               	setf	(_prec+1)^0,c
  5294   003BEC                     
  5295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  5296   003BEC  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5297   003BF0  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5298   003BF4  CFDE FFF6          	movff	postinc2,tblptrl
  5299   003BF8  CFDD FFF7          	movff	postdec2,tblptrh
  5300   003BFC                     	if	0	;tblptru may be non-zero
  5301   003BFC                     	endif
  5302   003BFC                     	if	0	;tblptru may be non-zero
  5303   003BFC                     	endif
  5304   003BFC  0008               	tblrd		*
  5305   003BFE  50F5               	movf	tablat,w,c
  5306   003C00  0A2E               	xorlw	46
  5307   003C02  A4D8               	btfss	status,2,c
  5308   003C04  EF06  F01E         	goto	u7881
  5309   003C08  EF08  F01E         	goto	u7880
  5310   003C0C                     u7881:
  5311   003C0C  EF1D  F01E         	goto	l5968
  5312   003C10                     u7880:
  5313   003C10                     
  5314                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  5315   003C10  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5316   003C14  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5317   003C18  2ADE               	incf	postinc2,f,c
  5318   003C1A  0E00               	movlw	0
  5319   003C1C  22DD               	addwfc	postdec2,f,c
  5320   003C1E                     
  5321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  5322   003C1E  C08E  F011         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  5323   003C22  C08F  F012         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  5324   003C26  C090  F013         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  5325   003C2A  C091  F014         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  5326   003C2E  EC42  F023         	call	_read_prec_or_width	;wreg free
  5327   003C32  C011  F053         	movff	?_read_prec_or_width,_prec
  5328   003C36  C012  F054         	movff	?_read_prec_or_width+1,_prec+1
  5329   003C3A                     l5968:
  5330                           
  5331                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  5332   003C3A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5333   003C3E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5334   003C42  CFDE F097          	movff	postinc2,vfpfcnvrt@cp
  5335   003C46  CFDD F098          	movff	postdec2,vfpfcnvrt@cp+1
  5336   003C4A                     
  5337                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  5338   003C4A  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5339   003C4E  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5340   003C52                     	if	0	;tblptru may be non-zero
  5341   003C52                     	endif
  5342   003C52                     	if	0	;tblptru may be non-zero
  5343   003C52                     	endif
  5344   003C52  0008               	tblrd		*
  5345   003C54  CFF5 F096          	movff	tablat,vfpfcnvrt@c
  5346                           
  5347                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  5348   003C58  EF3A  F01E         	goto	l5980
  5349   003C5C                     l5972:
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  5353   003C5C  4B97               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  5354   003C5E  2B98               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  5355                           
  5356                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  5357   003C60  EF54  F01E         	goto	l5982
  5358   003C64                     l5974:
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  5362   003C64  0E6C               	movlw	108
  5363   003C66  6F96               	movwf	vfpfcnvrt@c& (0+255),b
  5364                           
  5365                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  5366   003C68  EF54  F01E         	goto	l5982
  5367   003C6C                     l5976:
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  5371   003C6C  0E00               	movlw	0
  5372   003C6E  6F96               	movwf	vfpfcnvrt@c& (0+255),b
  5373                           
  5374                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  5375   003C70  EF54  F01E         	goto	l5982
  5376   003C74                     l5980:
  5377   003C74  0100               	movlb	0	; () banked
  5378   003C76  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  5379   003C78  6E41               	movwf	??_vfpfcnvrt^0,c
  5380   003C7A  6A42               	clrf	(??_vfpfcnvrt+1)^0,c
  5381                           
  5382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5383                           ; Switch size 1, requested type "simple"
  5384                           ; Number of cases is 1, Range of values is 0 to 0
  5385                           ; switch strategies available:
  5386                           ; Name         Instructions Cycles
  5387                           ; simple_byte            4     3 (average)
  5388                           ;	Chosen strategy is simple_byte
  5389   003C7C  5042               	movf	(??_vfpfcnvrt+1)^0,w,c
  5390   003C7E  0A00               	xorlw	0	; case 0
  5391   003C80  B4D8               	btfsc	status,2,c
  5392   003C82  EF45  F01E         	goto	l6754
  5393   003C86  EF36  F01E         	goto	l5976
  5394   003C8A                     l6754:
  5395                           
  5396                           ; BSR set to: 0
  5397                           ; Switch size 1, requested type "simple"
  5398                           ; Number of cases is 3, Range of values is 76 to 108
  5399                           ; switch strategies available:
  5400                           ; Name         Instructions Cycles
  5401                           ; simple_byte           10     6 (average)
  5402                           ;	Chosen strategy is simple_byte
  5403   003C8A  5041               	movf	??_vfpfcnvrt^0,w,c
  5404   003C8C  0A4C               	xorlw	76	; case 76
  5405   003C8E  B4D8               	btfsc	status,2,c
  5406   003C90  EF2E  F01E         	goto	l5972
  5407   003C94  0A2A               	xorlw	42	; case 102
  5408   003C96  B4D8               	btfsc	status,2,c
  5409   003C98  EF32  F01E         	goto	l5974
  5410   003C9C  0A0A               	xorlw	10	; case 108
  5411   003C9E  B4D8               	btfsc	status,2,c
  5412   003CA0  EF2E  F01E         	goto	l5972
  5413   003CA4  EF36  F01E         	goto	l5976
  5414   003CA8                     l5982:
  5415                           
  5416                           ; BSR set to: 0
  5417   003CA8  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5418   003CAC  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5419   003CB0                     	if	0	;tblptru may be non-zero
  5420   003CB0                     	endif
  5421   003CB0                     	if	0	;tblptru may be non-zero
  5422   003CB0                     	endif
  5423   003CB0  0008               	tblrd		*
  5424   003CB2  50F5               	movf	tablat,w,c
  5425   003CB4  0A66               	xorlw	102
  5426   003CB6  A4D8               	btfss	status,2,c
  5427   003CB8  EF60  F01E         	goto	u7891
  5428   003CBC  EF62  F01E         	goto	u7890
  5429   003CC0                     u7891:
  5430   003CC0  EFEA  F01E         	goto	l6002
  5431   003CC4                     u7890:
  5432   003CC4  EF98  F01E         	goto	l5990
  5433   003CC8                     l5984:
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5437   003CC8  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5438   003CCC  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5439   003CD0  CFDF F041          	movff	indf2,??_vfpfcnvrt
  5440   003CD4  0E04               	movlw	4
  5441   003CD6  26DE               	addwf	postinc2,f,c
  5442   003CD8  CFDF F042          	movff	indf2,??_vfpfcnvrt+1
  5443   003CDC  0E00               	movlw	0
  5444   003CDE  22DD               	addwfc	postdec2,f,c
  5445   003CE0  C041  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5446   003CE4  C042  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5447   003CE8  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  5448   003CEC  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  5449   003CF0  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg+2
  5450   003CF4  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+3
  5451                           
  5452                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  5453   003CF8  EFAD  F01E         	goto	l5992
  5454   003CFC                     l5986:
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5458   003CFC  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5459   003D00  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5460   003D04  CFDF F041          	movff	indf2,??_vfpfcnvrt
  5461   003D08  0E04               	movlw	4
  5462   003D0A  26DE               	addwf	postinc2,f,c
  5463   003D0C  CFDF F042          	movff	indf2,??_vfpfcnvrt+1
  5464   003D10  0E00               	movlw	0
  5465   003D12  22DD               	addwfc	postdec2,f,c
  5466   003D14  C041  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5467   003D18  C042  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5468   003D1C  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  5469   003D20  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  5470   003D24  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg+2
  5471   003D28  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+3
  5472                           
  5473                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  5474   003D2C  EFAD  F01E         	goto	l5992
  5475   003D30                     l5990:
  5476                           
  5477                           ; BSR set to: 0
  5478   003D30  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  5479   003D32  6E41               	movwf	??_vfpfcnvrt^0,c
  5480   003D34  6A42               	clrf	(??_vfpfcnvrt+1)^0,c
  5481                           
  5482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5483                           ; Switch size 1, requested type "simple"
  5484                           ; Number of cases is 1, Range of values is 0 to 0
  5485                           ; switch strategies available:
  5486                           ; Name         Instructions Cycles
  5487                           ; simple_byte            4     3 (average)
  5488                           ;	Chosen strategy is simple_byte
  5489   003D36  5042               	movf	(??_vfpfcnvrt+1)^0,w,c
  5490   003D38  0A00               	xorlw	0	; case 0
  5491   003D3A  B4D8               	btfsc	status,2,c
  5492   003D3C  EFA2  F01E         	goto	l6756
  5493   003D40  EFAD  F01E         	goto	l5992
  5494   003D44                     l6756:
  5495                           
  5496                           ; BSR set to: 0
  5497                           ; Switch size 1, requested type "simple"
  5498                           ; Number of cases is 2, Range of values is 76 to 108
  5499                           ; switch strategies available:
  5500                           ; Name         Instructions Cycles
  5501                           ; simple_byte            7     4 (average)
  5502                           ;	Chosen strategy is simple_byte
  5503   003D44  5041               	movf	??_vfpfcnvrt^0,w,c
  5504   003D46  0A4C               	xorlw	76	; case 76
  5505   003D48  B4D8               	btfsc	status,2,c
  5506   003D4A  EF7E  F01E         	goto	l5986
  5507   003D4E  0A20               	xorlw	32	; case 108
  5508   003D50  B4D8               	btfsc	status,2,c
  5509   003D52  EF64  F01E         	goto	l5984
  5510   003D56  EFAD  F01E         	goto	l5992
  5511   003D5A                     l5992:
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  5515   003D5A  0E01               	movlw	1
  5516   003D5C  2597               	addwf	vfpfcnvrt@cp& (0+255),w,b
  5517   003D5E  6E41               	movwf	??_vfpfcnvrt^0,c
  5518   003D60  0E00               	movlw	0
  5519   003D62  2198               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  5520   003D64  6E42               	movwf	(??_vfpfcnvrt+1)^0,c
  5521   003D66  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5522   003D6A  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5523   003D6E  C041  FFDE         	movff	??_vfpfcnvrt,postinc2
  5524   003D72  C042  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5525                           
  5526                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  5527   003D76  EFD4  F01E         	goto	l6000
  5528   003D7A                     l5994:
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  5532   003D7A  C08C  F038         	movff	vfpfcnvrt@fp,efgtoa@fp
  5533   003D7E  C08D  F039         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5534   003D82  C092  F03A         	movff	vfpfcnvrt@convarg,efgtoa@f
  5535   003D86  C093  F03B         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  5536   003D8A  C094  F03C         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  5537   003D8E  C095  F03D         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  5538   003D92  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5539   003D96  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5540   003D9A                     	if	0	;tblptru may be non-zero
  5541   003D9A                     	endif
  5542   003D9A                     	if	0	;tblptru may be non-zero
  5543   003D9A                     	endif
  5544   003D9A  0008               	tblrd		*
  5545   003D9C  CFF5 F03E          	movff	tablat,efgtoa@c
  5546   003DA0  ECA8  F010         	call	_efgtoa	;wreg free
  5547   003DA4  EF07  F01F         	goto	l942
  5548   003DA8                     l6000:
  5549                           
  5550                           ; BSR set to: 0
  5551   003DA8  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5552   003DAC  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5553   003DB0                     	if	0	;tblptru may be non-zero
  5554   003DB0                     	endif
  5555   003DB0                     	if	0	;tblptru may be non-zero
  5556   003DB0                     	endif
  5557   003DB0  0008               	tblrd		*
  5558   003DB2  50F5               	movf	tablat,w,c
  5559   003DB4  6E41               	movwf	??_vfpfcnvrt^0,c
  5560   003DB6  6A42               	clrf	(??_vfpfcnvrt+1)^0,c
  5561                           
  5562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5563                           ; Switch size 1, requested type "simple"
  5564                           ; Number of cases is 1, Range of values is 0 to 0
  5565                           ; switch strategies available:
  5566                           ; Name         Instructions Cycles
  5567                           ; simple_byte            4     3 (average)
  5568                           ;	Chosen strategy is simple_byte
  5569   003DB8  5042               	movf	(??_vfpfcnvrt+1)^0,w,c
  5570   003DBA  0A00               	xorlw	0	; case 0
  5571   003DBC  B4D8               	btfsc	status,2,c
  5572   003DBE  EFE3  F01E         	goto	l6758
  5573   003DC2  EFEA  F01E         	goto	l6002
  5574   003DC6                     l6758:
  5575                           
  5576                           ; BSR set to: 0
  5577                           ; Switch size 1, requested type "simple"
  5578                           ; Number of cases is 1, Range of values is 102 to 102
  5579                           ; switch strategies available:
  5580                           ; Name         Instructions Cycles
  5581                           ; simple_byte            4     3 (average)
  5582                           ;	Chosen strategy is simple_byte
  5583   003DC6  5041               	movf	??_vfpfcnvrt^0,w,c
  5584   003DC8  0A66               	xorlw	102	; case 102
  5585   003DCA  B4D8               	btfsc	status,2,c
  5586   003DCC  EFBD  F01E         	goto	l5994
  5587   003DD0  EFEA  F01E         	goto	l6002
  5588   003DD4                     l6002:
  5589                           
  5590                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  5591   003DD4  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5592   003DD8  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5593   003DDC  2ADE               	incf	postinc2,f,c
  5594   003DDE  0E00               	movlw	0
  5595   003DE0  22DD               	addwfc	postdec2,f,c
  5596   003DE2  EF07  F01F         	goto	l942
  5597   003DE6                     l6006:
  5598                           
  5599                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  5600   003DE6  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5601   003DEA  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5602   003DEE  CFDE FFF6          	movff	postinc2,tblptrl
  5603   003DF2  CFDD FFF7          	movff	postdec2,tblptrh
  5604   003DF6                     	if	0	;tblptru may be non-zero
  5605   003DF6                     	endif
  5606   003DF6                     	if	0	;tblptru may be non-zero
  5607   003DF6                     	endif
  5608   003DF6  0008               	tblrd		*
  5609   003DF8  50F5               	movf	tablat,w,c
  5610   003DFA  6E0B               	movwf	fputc@c^0,c
  5611   003DFC  6A0C               	clrf	(fputc@c+1)^0,c
  5612   003DFE  C08C  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  5613   003E02  C08D  F00E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5614   003E06  ECDD  F022         	call	_fputc	;wreg free
  5615   003E0A  EFEA  F01E         	goto	l6002
  5616   003E0E                     l942:
  5617   003E0E  0012               	return		;funcret
  5618   003E10                     __end_of_vfpfcnvrt:
  5619                           	callstack 0
  5620                           
  5621 ;; *************** function _read_prec_or_width *****************
  5622 ;; Defined at:
  5623 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  fmt             2   16[COMRAM] PTR PTR const unsigned c
  5626 ;;		 -> vfprintf@cfmt(2), 
  5627 ;;  ap              2   18[COMRAM] PTR PTR void [1]
  5628 ;;		 -> sprintf@ap(2), 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  c               1   22[COMRAM] unsigned char 
  5631 ;;  n               2   23[COMRAM] int 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  2   16[COMRAM] int 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;Total ram usage:        9 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; Hardware stack levels required when called: 4
  5648 ;; This function calls:
  5649 ;;		___wmul
  5650 ;; This function is called by:
  5651 ;;		_vfpfcnvrt
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text17
  5656   004684                     __ptext17:
  5657                           	callstack 0
  5658   004684                     _read_prec_or_width:
  5659                           	callstack 23
  5660   004684                     
  5661                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  5662   004684  0E00               	movlw	0
  5663   004686  6E19               	movwf	(read_prec_or_width@n+1)^0,c
  5664   004688  0E00               	movlw	0
  5665   00468A  6E18               	movwf	read_prec_or_width@n^0,c
  5666   00468C                     
  5667                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  5668   00468C  C011  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  5669   004690  C012  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  5670   004694  CFDE FFF6          	movff	postinc2,tblptrl
  5671   004698  CFDD FFF7          	movff	postdec2,tblptrh
  5672   00469C                     	if	0	;tblptru may be non-zero
  5673   00469C                     	endif
  5674   00469C                     	if	0	;tblptru may be non-zero
  5675   00469C                     	endif
  5676   00469C  0008               	tblrd		*
  5677   00469E  50F5               	movf	tablat,w,c
  5678   0046A0  0A2A               	xorlw	42
  5679   0046A2  A4D8               	btfss	status,2,c
  5680   0046A4  EF56  F023         	goto	u7851
  5681   0046A8  EF58  F023         	goto	u7850
  5682   0046AC                     u7851:
  5683   0046AC  EF8C  F023         	goto	l5952
  5684   0046B0                     u7850:
  5685   0046B0                     
  5686                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  5687   0046B0  C011  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  5688   0046B4  C012  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  5689   0046B8  2ADE               	incf	postinc2,f,c
  5690   0046BA  0E00               	movlw	0
  5691   0046BC  22DD               	addwfc	postdec2,f,c
  5692                           
  5693                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  5694   0046BE  C013  FFD9         	movff	read_prec_or_width@ap,fsr2l
  5695   0046C2  C014  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  5696   0046C6  CFDF F015          	movff	indf2,??_read_prec_or_width
  5697   0046CA  0E02               	movlw	2
  5698   0046CC  26DE               	addwf	postinc2,f,c
  5699   0046CE  CFDF F016          	movff	indf2,??_read_prec_or_width+1
  5700   0046D2  0E00               	movlw	0
  5701   0046D4  22DD               	addwfc	postdec2,f,c
  5702   0046D6  C015  FFD9         	movff	??_read_prec_or_width,fsr2l
  5703   0046DA  C016  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  5704   0046DE  CFDE F018          	movff	postinc2,read_prec_or_width@n
  5705   0046E2  CFDD F019          	movff	postdec2,read_prec_or_width@n+1
  5706                           
  5707                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  5708   0046E6  EFA0  F023         	goto	l918
  5709   0046EA                     l5948:
  5710                           
  5711                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  5712   0046EA  C018  F00B         	movff	read_prec_or_width@n,___wmul@multiplier
  5713   0046EE  C019  F00C         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  5714   0046F2  0E00               	movlw	0
  5715   0046F4  6E0E               	movwf	(___wmul@multiplicand+1)^0,c
  5716   0046F6  0E0A               	movlw	10
  5717   0046F8  6E0D               	movwf	___wmul@multiplicand^0,c
  5718   0046FA  EC69  F027         	call	___wmul	;wreg free
  5719   0046FE  5017               	movf	read_prec_or_width@c^0,w,c
  5720   004700  240B               	addwf	?___wmul^0,w,c
  5721   004702  6E18               	movwf	read_prec_or_width@n^0,c
  5722   004704  0E00               	movlw	0
  5723   004706  200C               	addwfc	(?___wmul+1)^0,w,c
  5724   004708  6E19               	movwf	(read_prec_or_width@n+1)^0,c
  5725   00470A                     
  5726                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  5727   00470A  C011  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  5728   00470E  C012  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  5729   004712  2ADE               	incf	postinc2,f,c
  5730   004714  0E00               	movlw	0
  5731   004716  22DD               	addwfc	postdec2,f,c
  5732   004718                     l5952:
  5733                           
  5734                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  5735   004718  C011  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  5736   00471C  C012  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  5737   004720  CFDE FFF6          	movff	postinc2,tblptrl
  5738   004724  CFDD FFF7          	movff	postdec2,tblptrh
  5739   004728                     	if	0	;tblptru may be non-zero
  5740   004728                     	endif
  5741   004728                     	if	0	;tblptru may be non-zero
  5742   004728                     	endif
  5743   004728  0008               	tblrd		*
  5744   00472A  50F5               	movf	tablat,w,c
  5745   00472C  0FD0               	addlw	208
  5746   00472E  6E17               	movwf	read_prec_or_width@c^0,c
  5747   004730  0E09               	movlw	9
  5748   004732  6417               	cpfsgt	read_prec_or_width@c^0,c
  5749   004734  EF9E  F023         	goto	u7861
  5750   004738  EFA0  F023         	goto	u7860
  5751   00473C                     u7861:
  5752   00473C  EF75  F023         	goto	l5948
  5753   004740                     u7860:
  5754   004740                     l918:
  5755                           
  5756                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  5757   004740  C018  F011         	movff	read_prec_or_width@n,?_read_prec_or_width
  5758   004744  C019  F012         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  5759   004748  0012               	return		;funcret
  5760   00474A                     __end_of_read_prec_or_width:
  5761                           	callstack 0
  5762                           
  5763 ;; *************** function ___wmul *****************
  5764 ;; Defined at:
  5765 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  multiplier      2   10[COMRAM] unsigned int 
  5768 ;;  multiplicand    2   12[COMRAM] unsigned int 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  product         2   14[COMRAM] unsigned int 
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  2   10[COMRAM] unsigned int 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0, prodl, prodh
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;Total ram usage:        6 bytes
  5785 ;; Hardware stack levels used: 1
  5786 ;; Hardware stack levels required when called: 3
  5787 ;; This function calls:
  5788 ;;		Nothing
  5789 ;; This function is called by:
  5790 ;;		_read_prec_or_width
  5791 ;;		_strtof
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text18
  5796   004ED2                     __ptext18:
  5797                           	callstack 0
  5798   004ED2                     ___wmul:
  5799                           	callstack 26
  5800   004ED2  500B               	movf	___wmul@multiplier^0,w,c
  5801   004ED4  020D               	mulwf	___wmul@multiplicand^0,c
  5802   004ED6  CFF3 F00F          	movff	prodl,___wmul@product
  5803   004EDA  CFF4 F010          	movff	prodh,___wmul@product+1
  5804   004EDE  500B               	movf	___wmul@multiplier^0,w,c
  5805   004EE0  020E               	mulwf	(___wmul@multiplicand+1)^0,c
  5806   004EE2  50F3               	movf	243,w,c
  5807   004EE4  2610               	addwf	(___wmul@product+1)^0,f,c
  5808   004EE6  500C               	movf	(___wmul@multiplier+1)^0,w,c
  5809   004EE8  020D               	mulwf	___wmul@multiplicand^0,c
  5810   004EEA  50F3               	movf	243,w,c
  5811   004EEC  2610               	addwf	(___wmul@product+1)^0,f,c
  5812   004EEE  C00F  F00B         	movff	___wmul@product,?___wmul
  5813   004EF2  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  5814   004EF6  0012               	return		;funcret
  5815   004EF8                     __end_of___wmul:
  5816                           	callstack 0
  5817                           
  5818 ;; *************** function _efgtoa *****************
  5819 ;; Defined at:
  5820 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  fp              2   55[COMRAM] PTR struct _IO_FILE
  5823 ;;		 -> sprintf@f(12), 
  5824 ;;  f               4   57[COMRAM] PTR struct _IO_FILE
  5825 ;;  c               1   61[COMRAM] unsigned char 
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  u               4   40[BANK0 ] struct flui
  5828 ;;  g               4   34[BANK0 ] struct flui
  5829 ;;  l               4   29[BANK0 ] struct flui
  5830 ;;  h               4   25[BANK0 ] struct flui
  5831 ;;  ou              4   19[BANK0 ] struct flui
  5832 ;;  n               2   38[BANK0 ] int 
  5833 ;;  i               2   23[BANK0 ] int 
  5834 ;;  w               2   17[BANK0 ] int 
  5835 ;;  e               2   15[BANK0 ] int 
  5836 ;;  m               2   13[BANK0 ] int 
  5837 ;;  d               2   11[BANK0 ] int 
  5838 ;;  t               2    4[BANK0 ] int 
  5839 ;;  p               2    2[BANK0 ] int 
  5840 ;;  ne              2    0[BANK0 ] int 
  5841 ;;  sign            1   33[BANK0 ] unsigned char 
  5842 ;;  nmode           1   10[BANK0 ] unsigned char 
  5843 ;;  mode            1    9[BANK0 ] unsigned char 
  5844 ;;  pp              1    8[BANK0 ] unsigned char 
  5845 ;;  esign           1    0        unsigned char 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      void 
  5848 ;; Registers used:
  5849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5855 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5857 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Totals:         9      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;Total ram usage:       53 bytes
  5860 ;; Hardware stack levels used: 1
  5861 ;; Hardware stack levels required when called: 7
  5862 ;; This function calls:
  5863 ;;		___fladd
  5864 ;;		___fldiv
  5865 ;;		___fleq
  5866 ;;		___flge
  5867 ;;		___flmul
  5868 ;;		___flneg
  5869 ;;		___flsub
  5870 ;;		___fltol
  5871 ;;		___fpclassifyf
  5872 ;;		_floorf
  5873 ;;		_labs
  5874 ;;		_memcpy
  5875 ;;		_pad
  5876 ;;		_strcpy
  5877 ;; This function is called by:
  5878 ;;		_vfpfcnvrt
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text19
  5883   002150                     __ptext19:
  5884                           	callstack 0
  5885   002150                     _efgtoa:
  5886                           	callstack 20
  5887   002150                     
  5888                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  5889   002150  0E00               	movlw	0
  5890   002152  0100               	movlb	0	; () banked
  5891   002154  6F81               	movwf	efgtoa@sign& (0+255),b
  5892   002156                     
  5893                           ; BSR set to: 0
  5894                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  5895   002156  C03A  F082         	movff	efgtoa@f,efgtoa@g
  5896   00215A  C03B  F083         	movff	efgtoa@f+1,efgtoa@g+1
  5897   00215E  C03C  F084         	movff	efgtoa@f+2,efgtoa@g+2
  5898   002162  C03D  F085         	movff	efgtoa@f+3,efgtoa@g+3
  5899   002166                     
  5900                           ; BSR set to: 0
  5901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  5902   002166  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  5903   002168  EFBA  F010         	goto	u7530
  5904   00216C  EFB8  F010         	goto	u7531
  5905   002170                     u7531:
  5906   002170  EFCE  F010         	goto	l5730
  5907   002174                     u7530:
  5908   002174                     
  5909                           ; BSR set to: 0
  5910                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  5911   002174  0E01               	movlw	1
  5912   002176  6F81               	movwf	efgtoa@sign& (0+255),b
  5913   002178                     
  5914                           ; BSR set to: 0
  5915                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  5916   002178  C082  F00B         	movff	efgtoa@g,___flneg@f1
  5917   00217C  C083  F00C         	movff	efgtoa@g+1,___flneg@f1+1
  5918   002180  C084  F00D         	movff	efgtoa@g+2,___flneg@f1+2
  5919   002184  C085  F00E         	movff	efgtoa@g+3,___flneg@f1+3
  5920   002188  EC0C  F027         	call	___flneg	;wreg free
  5921   00218C  C00B  F082         	movff	?___flneg,efgtoa@g
  5922   002190  C00C  F083         	movff	?___flneg+1,efgtoa@g+1
  5923   002194  C00D  F084         	movff	?___flneg+2,efgtoa@g+2
  5924   002198  C00E  F085         	movff	?___flneg+3,efgtoa@g+3
  5925   00219C                     l5730:
  5926                           
  5927                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  5928   00219C  0E00               	movlw	0
  5929   00219E  0100               	movlb	0	; () banked
  5930   0021A0  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  5931   0021A2  0E00               	movlw	0
  5932   0021A4  6F86               	movwf	efgtoa@n& (0+255),b
  5933   0021A6                     
  5934                           ; BSR set to: 0
  5935                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  5936   0021A6  C051  F071         	movff	_width,efgtoa@w
  5937   0021AA  C052  F072         	movff	_width+1,efgtoa@w+1
  5938   0021AE                     
  5939                           ; BSR set to: 0
  5940                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  5941   0021AE  5181               	movf	efgtoa@sign& (0+255),w,b
  5942   0021B0  B4D8               	btfsc	status,2,c
  5943   0021B2  EFDD  F010         	goto	u7541
  5944   0021B6  EFDF  F010         	goto	u7540
  5945   0021BA                     u7541:
  5946   0021BA  EFF3  F010         	goto	l5744
  5947   0021BE                     u7540:
  5948   0021BE                     
  5949                           ; BSR set to: 0
  5950                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  5951   0021BE  5181               	movf	efgtoa@sign& (0+255),w,b
  5952   0021C0  A4D8               	btfss	status,2,c
  5953   0021C2  EFE5  F010         	goto	u7551
  5954   0021C6  EFE7  F010         	goto	u7550
  5955   0021CA                     u7551:
  5956   0021CA  EFED  F010         	goto	l5740
  5957   0021CE                     u7550:
  5958   0021CE                     
  5959                           ; BSR set to: 0
  5960   0021CE  0E00               	movlw	0
  5961   0021D0  6F67               	movwf	(_efgtoa$804+1)& (0+255),b
  5962   0021D2  0E2B               	movlw	43
  5963   0021D4  6F66               	movwf	_efgtoa$804& (0+255),b
  5964   0021D6  EFF1  F010         	goto	l5742
  5965   0021DA                     l5740:
  5966                           
  5967                           ; BSR set to: 0
  5968   0021DA  0E00               	movlw	0
  5969   0021DC  6F67               	movwf	(_efgtoa$804+1)& (0+255),b
  5970   0021DE  0E2D               	movlw	45
  5971   0021E0  6F66               	movwf	_efgtoa$804& (0+255),b
  5972   0021E2                     l5742:
  5973                           
  5974                           ; BSR set to: 0
  5975   0021E2  C066  F081         	movff	_efgtoa$804,efgtoa@sign
  5976   0021E6                     l5744:
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  5980   0021E6  C082  F00B         	movff	efgtoa@g,___fpclassifyf@x
  5981   0021EA  C083  F00C         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5982   0021EE  C084  F00D         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5983   0021F2  C085  F00E         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5984   0021F6  ECF0  F021         	call	___fpclassifyf	;wreg free
  5985   0021FA  040B               	decf	?___fpclassifyf^0,w,c
  5986   0021FC  100C               	iorwf	(?___fpclassifyf+1)^0,w,c
  5987   0021FE  A4D8               	btfss	status,2,c
  5988   002200  EF04  F011         	goto	u7561
  5989   002204  EF06  F011         	goto	u7560
  5990   002208                     u7561:
  5991   002208  EF39  F011         	goto	l5762
  5992   00220C                     u7560:
  5993   00220C                     
  5994                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  5995   00220C  0100               	movlb	0	; () banked
  5996   00220E  5181               	movf	efgtoa@sign& (0+255),w,b
  5997   002210  B4D8               	btfsc	status,2,c
  5998   002212  EF0D  F011         	goto	u7571
  5999   002216  EF0F  F011         	goto	u7570
  6000   00221A                     u7571:
  6001   00221A  EF18  F011         	goto	l5754
  6002   00221E                     u7570:
  6003   00221E                     
  6004                           ; BSR set to: 0
  6005                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  6006   00221E  C081  F111         	movff	efgtoa@sign,_dbuf
  6007   002222                     
  6008                           ; BSR set to: 0
  6009                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  6010   002222  0771               	decf	efgtoa@w& (0+255),f,b
  6011   002224  A0D8               	btfss	status,0,c
  6012   002226  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  6013   002228                     
  6014                           ; BSR set to: 0
  6015                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  6016   002228  0E00               	movlw	0
  6017   00222A  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  6018   00222C  0E01               	movlw	1
  6019   00222E  6F86               	movwf	efgtoa@n& (0+255),b
  6020   002230                     l5754:
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  6024   002230  0E11               	movlw	low _dbuf
  6025   002232  2586               	addwf	efgtoa@n& (0+255),w,b
  6026   002234  6E0B               	movwf	strcpy@dest^0,c
  6027   002236  0E01               	movlw	high _dbuf
  6028   002238  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6029   00223A  6E0C               	movwf	(strcpy@dest+1)^0,c
  6030   00223C  0E9D               	movlw	low STR_12
  6031   00223E  6E0D               	movwf	strcpy@src^0,c
  6032   002240  0E10               	movlw	high STR_12
  6033   002242  6E0E               	movwf	(strcpy@src+1)^0,c
  6034   002244  ECD0  F026         	call	_strcpy	;wreg free
  6035   002248                     l5756:
  6036                           
  6037                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  6038   002248  0100               	movlb	0	; () banked
  6039   00224A  0EFD               	movlw	253
  6040   00224C  2771               	addwf	efgtoa@w& (0+255),f,b
  6041   00224E  0EFF               	movlw	255
  6042   002250  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6043   002252                     
  6044                           ; BSR set to: 0
  6045                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  6046   002252  C038  F01B         	movff	efgtoa@fp,pad@fp
  6047   002256  C039  F01C         	movff	efgtoa@fp+1,pad@fp+1
  6048   00225A  0E11               	movlw	low _dbuf
  6049   00225C  6E1D               	movwf	pad@buf^0,c
  6050   00225E  0E01               	movlw	high _dbuf
  6051   002260  6E1E               	movwf	(pad@buf+1)^0,c
  6052   002262  C071  F01F         	movff	efgtoa@w,pad@p
  6053   002266  C072  F020         	movff	efgtoa@w+1,pad@p+1
  6054   00226A  ECFA  F023         	call	_pad	;wreg free
  6055   00226E  EFA4  F015         	goto	l873
  6056   002272                     l5762:
  6057                           
  6058                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  6059   002272  C082  F00B         	movff	efgtoa@g,___fpclassifyf@x
  6060   002276  C083  F00C         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6061   00227A  C084  F00D         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6062   00227E  C085  F00E         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6063   002282  ECF0  F021         	call	___fpclassifyf	;wreg free
  6064   002286  500B               	movf	?___fpclassifyf^0,w,c
  6065   002288  100C               	iorwf	(?___fpclassifyf+1)^0,w,c
  6066   00228A  A4D8               	btfss	status,2,c
  6067   00228C  EF4A  F011         	goto	u7581
  6068   002290  EF4C  F011         	goto	u7580
  6069   002294                     u7581:
  6070   002294  EF6C  F011         	goto	l5780
  6071   002298                     u7580:
  6072   002298                     
  6073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  6074   002298  0100               	movlb	0	; () banked
  6075   00229A  5181               	movf	efgtoa@sign& (0+255),w,b
  6076   00229C  B4D8               	btfsc	status,2,c
  6077   00229E  EF53  F011         	goto	u7591
  6078   0022A2  EF55  F011         	goto	u7590
  6079   0022A6                     u7591:
  6080   0022A6  EF5E  F011         	goto	l5772
  6081   0022AA                     u7590:
  6082   0022AA                     
  6083                           ; BSR set to: 0
  6084                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  6085   0022AA  C081  F111         	movff	efgtoa@sign,_dbuf
  6086   0022AE                     
  6087                           ; BSR set to: 0
  6088                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  6089   0022AE  0771               	decf	efgtoa@w& (0+255),f,b
  6090   0022B0  A0D8               	btfss	status,0,c
  6091   0022B2  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  6092   0022B4                     
  6093                           ; BSR set to: 0
  6094                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  6095   0022B4  0E00               	movlw	0
  6096   0022B6  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  6097   0022B8  0E01               	movlw	1
  6098   0022BA  6F86               	movwf	efgtoa@n& (0+255),b
  6099   0022BC                     l5772:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  6103   0022BC  0E11               	movlw	low _dbuf
  6104   0022BE  2586               	addwf	efgtoa@n& (0+255),w,b
  6105   0022C0  6E0B               	movwf	strcpy@dest^0,c
  6106   0022C2  0E01               	movlw	high _dbuf
  6107   0022C4  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6108   0022C6  6E0C               	movwf	(strcpy@dest+1)^0,c
  6109   0022C8  0EA1               	movlw	low STR_15
  6110   0022CA  6E0D               	movwf	strcpy@src^0,c
  6111   0022CC  0E10               	movlw	high STR_15
  6112   0022CE  6E0E               	movwf	(strcpy@src+1)^0,c
  6113   0022D0  ECD0  F026         	call	_strcpy	;wreg free
  6114   0022D4  EF24  F011         	goto	l5756
  6115   0022D8                     l5780:
  6116                           
  6117                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  6118   0022D8  0E00               	movlw	0
  6119   0022DA  0100               	movlb	0	; () banked
  6120   0022DC  6F88               	movwf	efgtoa@u& (0+255),b
  6121   0022DE  0E00               	movlw	0
  6122   0022E0  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  6123   0022E2  0E80               	movlw	128
  6124   0022E4  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  6125   0022E6  0E3F               	movlw	63
  6126   0022E8  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  6127                           
  6128                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  6129   0022EA  0E00               	movlw	0
  6130   0022EC  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  6131   0022EE  0E00               	movlw	0
  6132   0022F0  6F6F               	movwf	efgtoa@e& (0+255),b
  6133   0022F2                     
  6134                           ; BSR set to: 0
  6135                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  6136   0022F2  C082  F00B         	movff	efgtoa@g,___fleq@ff1
  6137   0022F6  C083  F00C         	movff	efgtoa@g+1,___fleq@ff1+1
  6138   0022FA  C084  F00D         	movff	efgtoa@g+2,___fleq@ff1+2
  6139   0022FE  C085  F00E         	movff	efgtoa@g+3,___fleq@ff1+3
  6140   002302  0E00               	movlw	0
  6141   002304  6E0F               	movwf	___fleq@ff2^0,c
  6142   002306  0E00               	movlw	0
  6143   002308  6E10               	movwf	(___fleq@ff2+1)^0,c
  6144   00230A  0E00               	movlw	0
  6145   00230C  6E11               	movwf	(___fleq@ff2+2)^0,c
  6146   00230E  0E00               	movlw	0
  6147   002310  6E12               	movwf	(___fleq@ff2+3)^0,c
  6148   002312  ECA5  F023         	call	___fleq	;wreg free
  6149   002316  B0D8               	btfsc	status,0,c
  6150   002318  EF90  F011         	goto	u7601
  6151   00231C  EF92  F011         	goto	u7600
  6152   002320                     u7601:
  6153   002320  EF71  F012         	goto	l876
  6154   002324                     u7600:
  6155   002324  EF9F  F011         	goto	l5788
  6156   002328                     l878:
  6157                           
  6158                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  6159   002328  C073  F088         	movff	efgtoa@ou,efgtoa@u
  6160   00232C  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  6161   002330  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  6162   002334  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  6163   002338                     
  6164                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  6165   002338  0100               	movlb	0	; () banked
  6166   00233A  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  6167   00233C  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  6168   00233E                     l5788:
  6169                           
  6170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  6171   00233E  C088  F00B         	movff	efgtoa@u,___flmul@b
  6172   002342  C089  F00C         	movff	efgtoa@u+1,___flmul@b+1
  6173   002346  C08A  F00D         	movff	efgtoa@u+2,___flmul@b+2
  6174   00234A  C08B  F00E         	movff	efgtoa@u+3,___flmul@b+3
  6175   00234E  0E00               	movlw	0
  6176   002350  6E0F               	movwf	___flmul@a^0,c
  6177   002352  0E00               	movlw	0
  6178   002354  6E10               	movwf	(___flmul@a+1)^0,c
  6179   002356  0E20               	movlw	32
  6180   002358  6E11               	movwf	(___flmul@a+2)^0,c
  6181   00235A  0E41               	movlw	65
  6182   00235C  6E12               	movwf	(___flmul@a+3)^0,c
  6183   00235E  EC05  F018         	call	___flmul	;wreg free
  6184   002362  C00B  F073         	movff	?___flmul,efgtoa@ou
  6185   002366  C00C  F074         	movff	?___flmul+1,efgtoa@ou+1
  6186   00236A  C00D  F075         	movff	?___flmul+2,efgtoa@ou+2
  6187   00236E  C00E  F076         	movff	?___flmul+3,efgtoa@ou+3
  6188   002372  0100               	movlb	0	; () banked
  6189   002374  5173               	movf	efgtoa@ou& (0+255),w,b
  6190   002376  5D82               	subwf	efgtoa@g& (0+255),w,b
  6191   002378  6E0B               	movwf	labs@a^0,c
  6192   00237A  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  6193   00237C  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6194   00237E  6E0C               	movwf	(labs@a+1)^0,c
  6195   002380  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  6196   002382  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6197   002384  6E0D               	movwf	(labs@a+2)^0,c
  6198   002386  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  6199   002388  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6200   00238A  6E0E               	movwf	(labs@a+3)^0,c
  6201   00238C  ECD2  F024         	call	_labs	;wreg free
  6202   002390  BE0E               	btfsc	(?_labs+3)^0,7,c
  6203   002392  EFD6  F011         	goto	u7611
  6204   002396  500E               	movf	(?_labs+3)^0,w,c
  6205   002398  100D               	iorwf	(?_labs+2)^0,w,c
  6206   00239A  100C               	iorwf	(?_labs+1)^0,w,c
  6207   00239C  E109               	bnz	u7610
  6208   00239E  0E02               	movlw	2
  6209   0023A0  5C0B               	subwf	?_labs^0,w,c
  6210   0023A2  A0D8               	btfss	status,0,c
  6211   0023A4  EFD6  F011         	goto	u7611
  6212   0023A8  EFD8  F011         	goto	u7610
  6213   0023AC                     u7611:
  6214   0023AC  EF94  F011         	goto	l878
  6215   0023B0                     u7610:
  6216   0023B0  C073  F024         	movff	efgtoa@ou,___flge@ff1
  6217   0023B4  C074  F025         	movff	efgtoa@ou+1,___flge@ff1+1
  6218   0023B8  C075  F026         	movff	efgtoa@ou+2,___flge@ff1+2
  6219   0023BC  C076  F027         	movff	efgtoa@ou+3,___flge@ff1+3
  6220   0023C0  C082  F028         	movff	efgtoa@g,___flge@ff2
  6221   0023C4  C083  F029         	movff	efgtoa@g+1,___flge@ff2+1
  6222   0023C8  C084  F02A         	movff	efgtoa@g+2,___flge@ff2+2
  6223   0023CC  C085  F02B         	movff	efgtoa@g+3,___flge@ff2+3
  6224   0023D0  EC6E  F021         	call	___flge	;wreg free
  6225   0023D4  A0D8               	btfss	status,0,c
  6226   0023D6  EFEF  F011         	goto	u7621
  6227   0023DA  EFF1  F011         	goto	u7620
  6228   0023DE                     u7621:
  6229   0023DE  EF94  F011         	goto	l878
  6230   0023E2                     u7620:
  6231   0023E2                     
  6232                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  6233   0023E2  0100               	movlb	0	; () banked
  6234   0023E4  5188               	movf	efgtoa@u& (0+255),w,b
  6235   0023E6  5D82               	subwf	efgtoa@g& (0+255),w,b
  6236   0023E8  6E0B               	movwf	labs@a^0,c
  6237   0023EA  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  6238   0023EC  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6239   0023EE  6E0C               	movwf	(labs@a+1)^0,c
  6240   0023F0  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  6241   0023F2  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6242   0023F4  6E0D               	movwf	(labs@a+2)^0,c
  6243   0023F6  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  6244   0023F8  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6245   0023FA  6E0E               	movwf	(labs@a+3)^0,c
  6246   0023FC  ECD2  F024         	call	_labs	;wreg free
  6247   002400  BE0E               	btfsc	(?_labs+3)^0,7,c
  6248   002402  EF10  F012         	goto	u7630
  6249   002406  500E               	movf	(?_labs+3)^0,w,c
  6250   002408  100D               	iorwf	(?_labs+2)^0,w,c
  6251   00240A  100C               	iorwf	(?_labs+1)^0,w,c
  6252   00240C  E107               	bnz	u7631
  6253   00240E  0E02               	movlw	2
  6254   002410  5C0B               	subwf	?_labs^0,w,c
  6255   002412  B0D8               	btfsc	status,0,c
  6256   002414  EF0E  F012         	goto	u7631
  6257   002418  EF10  F012         	goto	u7630
  6258   00241C                     u7631:
  6259   00241C  EF58  F012         	goto	l5806
  6260   002420                     u7630:
  6261   002420                     l5796:
  6262                           
  6263                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  6264   002420  C088  F082         	movff	efgtoa@u,efgtoa@g
  6265   002424  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  6266   002428  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  6267   00242C  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  6268                           
  6269                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  6270   002430  EF71  F012         	goto	l876
  6271   002434                     l5798:
  6272                           
  6273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  6274   002434  C088  F00B         	movff	efgtoa@u,___fldiv@b
  6275   002438  C089  F00C         	movff	efgtoa@u+1,___fldiv@b+1
  6276   00243C  C08A  F00D         	movff	efgtoa@u+2,___fldiv@b+2
  6277   002440  C08B  F00E         	movff	efgtoa@u+3,___fldiv@b+3
  6278   002444  0E00               	movlw	0
  6279   002446  6E0F               	movwf	___fldiv@a^0,c
  6280   002448  0E00               	movlw	0
  6281   00244A  6E10               	movwf	(___fldiv@a+1)^0,c
  6282   00244C  0E20               	movlw	32
  6283   00244E  6E11               	movwf	(___fldiv@a+2)^0,c
  6284   002450  0E41               	movlw	65
  6285   002452  6E12               	movwf	(___fldiv@a+3)^0,c
  6286   002454  EC08  F01C         	call	___fldiv	;wreg free
  6287   002458  C00B  F088         	movff	?___fldiv,efgtoa@u
  6288   00245C  C00C  F089         	movff	?___fldiv+1,efgtoa@u+1
  6289   002460  C00D  F08A         	movff	?___fldiv+2,efgtoa@u+2
  6290   002464  C00E  F08B         	movff	?___fldiv+3,efgtoa@u+3
  6291   002468                     
  6292                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  6293   002468  0100               	movlb	0	; () banked
  6294   00246A  076F               	decf	efgtoa@e& (0+255),f,b
  6295   00246C  A0D8               	btfss	status,0,c
  6296   00246E  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  6297   002470                     
  6298                           ; BSR set to: 0
  6299                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  6300   002470  5188               	movf	efgtoa@u& (0+255),w,b
  6301   002472  5D82               	subwf	efgtoa@g& (0+255),w,b
  6302   002474  6E0B               	movwf	labs@a^0,c
  6303   002476  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  6304   002478  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6305   00247A  6E0C               	movwf	(labs@a+1)^0,c
  6306   00247C  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  6307   00247E  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6308   002480  6E0D               	movwf	(labs@a+2)^0,c
  6309   002482  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  6310   002484  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6311   002486  6E0E               	movwf	(labs@a+3)^0,c
  6312   002488  ECD2  F024         	call	_labs	;wreg free
  6313   00248C  BE0E               	btfsc	(?_labs+3)^0,7,c
  6314   00248E  EF56  F012         	goto	u7640
  6315   002492  500E               	movf	(?_labs+3)^0,w,c
  6316   002494  100D               	iorwf	(?_labs+2)^0,w,c
  6317   002496  100C               	iorwf	(?_labs+1)^0,w,c
  6318   002498  E107               	bnz	u7641
  6319   00249A  0E02               	movlw	2
  6320   00249C  5C0B               	subwf	?_labs^0,w,c
  6321   00249E  B0D8               	btfsc	status,0,c
  6322   0024A0  EF54  F012         	goto	u7641
  6323   0024A4  EF56  F012         	goto	u7640
  6324   0024A8                     u7641:
  6325   0024A8  EF58  F012         	goto	l5806
  6326   0024AC                     u7640:
  6327   0024AC  EF10  F012         	goto	l5796
  6328   0024B0                     l5806:
  6329                           
  6330                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  6331   0024B0  C082  F024         	movff	efgtoa@g,___flge@ff1
  6332   0024B4  C083  F025         	movff	efgtoa@g+1,___flge@ff1+1
  6333   0024B8  C084  F026         	movff	efgtoa@g+2,___flge@ff1+2
  6334   0024BC  C085  F027         	movff	efgtoa@g+3,___flge@ff1+3
  6335   0024C0  C088  F028         	movff	efgtoa@u,___flge@ff2
  6336   0024C4  C089  F029         	movff	efgtoa@u+1,___flge@ff2+1
  6337   0024C8  C08A  F02A         	movff	efgtoa@u+2,___flge@ff2+2
  6338   0024CC  C08B  F02B         	movff	efgtoa@u+3,___flge@ff2+3
  6339   0024D0  EC6E  F021         	call	___flge	;wreg free
  6340   0024D4  A0D8               	btfss	status,0,c
  6341   0024D6  EF6F  F012         	goto	u7651
  6342   0024DA  EF71  F012         	goto	u7650
  6343   0024DE                     u7651:
  6344   0024DE  EF1A  F012         	goto	l5798
  6345   0024E2                     u7650:
  6346   0024E2                     l876:
  6347                           
  6348                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  6349   0024E2  C03E  F069         	movff	efgtoa@c,efgtoa@mode
  6350                           
  6351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  6352   0024E6  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  6353   0024EA                     
  6354                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  6355   0024EA  BE54               	btfsc	(_prec+1)^0,7,c
  6356   0024EC  EF7A  F012         	goto	u7661
  6357   0024F0  EF7C  F012         	goto	u7660
  6358   0024F4                     u7661:
  6359   0024F4  EF82  F012         	goto	l5812
  6360   0024F8                     u7660:
  6361   0024F8  C053  F062         	movff	_prec,efgtoa@p
  6362   0024FC  C054  F063         	movff	_prec+1,efgtoa@p+1
  6363   002500  EF87  F012         	goto	l5814
  6364   002504                     l5812:
  6365   002504  0E00               	movlw	0
  6366   002506  0100               	movlb	0	; () banked
  6367   002508  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  6368   00250A  0E06               	movlw	6
  6369   00250C  6F62               	movwf	efgtoa@p& (0+255),b
  6370   00250E                     l5814:
  6371                           
  6372                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  6373   00250E  C062  F06D         	movff	efgtoa@p,efgtoa@m
  6374   002512  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  6375   002516                     
  6376                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  6377   002516  0100               	movlb	0	; () banked
  6378   002518  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  6379   00251A  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  6380   00251C                     
  6381                           ; BSR set to: 0
  6382                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  6383   00251C  0E66               	movlw	102
  6384   00251E  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  6385   002520  A4D8               	btfss	status,2,c
  6386   002522  EF95  F012         	goto	u7671
  6387   002526  EF97  F012         	goto	u7670
  6388   00252A                     u7671:
  6389   00252A  EFB7  F012         	goto	l5828
  6390   00252E                     u7670:
  6391   00252E                     
  6392                           ; BSR set to: 0
  6393                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  6394   00252E  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6395   002530  EF9E  F012         	goto	u7680
  6396   002534  EF9C  F012         	goto	u7681
  6397   002538                     u7681:
  6398   002538  EFAA  F012         	goto	l5824
  6399   00253C                     u7680:
  6400   00253C                     
  6401                           ; BSR set to: 0
  6402                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  6403   00253C  0E00               	movlw	0
  6404   00253E  6F88               	movwf	efgtoa@u& (0+255),b
  6405   002540  0E00               	movlw	0
  6406   002542  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  6407   002544  0E80               	movlw	128
  6408   002546  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  6409   002548  0E3F               	movlw	63
  6410   00254A  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  6411                           
  6412                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  6413   00254C  0E00               	movlw	0
  6414   00254E  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  6415   002550  0E00               	movlw	0
  6416   002552  6F6F               	movwf	efgtoa@e& (0+255),b
  6417   002554                     l5824:
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  6421   002554  0E67               	movlw	103
  6422   002556  1969               	xorwf	efgtoa@mode& (0+255),w,b
  6423   002558  B4D8               	btfsc	status,2,c
  6424   00255A  EFB1  F012         	goto	u7691
  6425   00255E  EFB3  F012         	goto	u7690
  6426   002562                     u7691:
  6427   002562  EFB7  F012         	goto	l5828
  6428   002566                     u7690:
  6429   002566                     
  6430                           ; BSR set to: 0
  6431                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  6432   002566  516F               	movf	efgtoa@e& (0+255),w,b
  6433   002568  276D               	addwf	efgtoa@m& (0+255),f,b
  6434   00256A  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  6435   00256C  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6436   00256E                     l5828:
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  6440   00256E  0E00               	movlw	0
  6441   002570  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  6442   002572  0E00               	movlw	0
  6443   002574  6F77               	movwf	efgtoa@i& (0+255),b
  6444   002576                     
  6445                           ; BSR set to: 0
  6446                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  6447   002576  C082  F079         	movff	efgtoa@g,efgtoa@h
  6448   00257A  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  6449   00257E  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  6450   002582  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  6451   002586                     
  6452                           ; BSR set to: 0
  6453                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  6454   002586  C088  F073         	movff	efgtoa@u,efgtoa@ou
  6455   00258A  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  6456   00258E  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  6457   002592  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  6458                           
  6459                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  6460   002596  EF48  F013         	goto	l5842
  6461   00259A                     l5834:
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  6465   00259A  C079  F00B         	movff	efgtoa@h,___fldiv@b
  6466   00259E  C07A  F00C         	movff	efgtoa@h+1,___fldiv@b+1
  6467   0025A2  C07B  F00D         	movff	efgtoa@h+2,___fldiv@b+2
  6468   0025A6  C07C  F00E         	movff	efgtoa@h+3,___fldiv@b+3
  6469   0025AA  C088  F00F         	movff	efgtoa@u,___fldiv@a
  6470   0025AE  C089  F010         	movff	efgtoa@u+1,___fldiv@a+1
  6471   0025B2  C08A  F011         	movff	efgtoa@u+2,___fldiv@a+2
  6472   0025B6  C08B  F012         	movff	efgtoa@u+3,___fldiv@a+3
  6473   0025BA  EC08  F01C         	call	___fldiv	;wreg free
  6474   0025BE  C00B  F024         	movff	?___fldiv,floorf@x
  6475   0025C2  C00C  F025         	movff	?___fldiv+1,floorf@x+1
  6476   0025C6  C00D  F026         	movff	?___fldiv+2,floorf@x+2
  6477   0025CA  C00E  F027         	movff	?___fldiv+3,floorf@x+3
  6478   0025CE  EC08  F01F         	call	_floorf	;wreg free
  6479   0025D2  C024  F07D         	movff	?_floorf,efgtoa@l
  6480   0025D6  C025  F07E         	movff	?_floorf+1,efgtoa@l+1
  6481   0025DA  C026  F07F         	movff	?_floorf+2,efgtoa@l+2
  6482   0025DE  C027  F080         	movff	?_floorf+3,efgtoa@l+3
  6483                           
  6484                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  6485   0025E2  C07D  F00B         	movff	efgtoa@l,___fltol@f1
  6486   0025E6  C07E  F00C         	movff	efgtoa@l+1,___fltol@f1+1
  6487   0025EA  C07F  F00D         	movff	efgtoa@l+2,___fltol@f1+2
  6488   0025EE  C080  F00E         	movff	efgtoa@l+3,___fltol@f1+3
  6489   0025F2  ECEB  F020         	call	___fltol	;wreg free
  6490   0025F6  C00B  F06B         	movff	?___fltol,efgtoa@d
  6491   0025FA  C00C  F06C         	movff	?___fltol+1,efgtoa@d+1
  6492   0025FE                     
  6493                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  6494   0025FE  C079  F024         	movff	efgtoa@h,___flsub@b
  6495   002602  C07A  F025         	movff	efgtoa@h+1,___flsub@b+1
  6496   002606  C07B  F026         	movff	efgtoa@h+2,___flsub@b+2
  6497   00260A  C07C  F027         	movff	efgtoa@h+3,___flsub@b+3
  6498   00260E  C07D  F00F         	movff	efgtoa@l,___flmul@a
  6499   002612  C07E  F010         	movff	efgtoa@l+1,___flmul@a+1
  6500   002616  C07F  F011         	movff	efgtoa@l+2,___flmul@a+2
  6501   00261A  C080  F012         	movff	efgtoa@l+3,___flmul@a+3
  6502   00261E  C088  F00B         	movff	efgtoa@u,___flmul@b
  6503   002622  C089  F00C         	movff	efgtoa@u+1,___flmul@b+1
  6504   002626  C08A  F00D         	movff	efgtoa@u+2,___flmul@b+2
  6505   00262A  C08B  F00E         	movff	efgtoa@u+3,___flmul@b+3
  6506   00262E  EC05  F018         	call	___flmul	;wreg free
  6507   002632  C00B  F028         	movff	?___flmul,___flsub@a
  6508   002636  C00C  F029         	movff	?___flmul+1,___flsub@a+1
  6509   00263A  C00D  F02A         	movff	?___flmul+2,___flsub@a+2
  6510   00263E  C00E  F02B         	movff	?___flmul+3,___flsub@a+3
  6511   002642  EC8B  F026         	call	___flsub	;wreg free
  6512   002646  C024  F079         	movff	?___flsub,efgtoa@h
  6513   00264A  C025  F07A         	movff	?___flsub+1,efgtoa@h+1
  6514   00264E  C026  F07B         	movff	?___flsub+2,efgtoa@h+2
  6515   002652  C027  F07C         	movff	?___flsub+3,efgtoa@h+3
  6516   002656                     
  6517                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  6518   002656  C088  F00B         	movff	efgtoa@u,___fldiv@b
  6519   00265A  C089  F00C         	movff	efgtoa@u+1,___fldiv@b+1
  6520   00265E  C08A  F00D         	movff	efgtoa@u+2,___fldiv@b+2
  6521   002662  C08B  F00E         	movff	efgtoa@u+3,___fldiv@b+3
  6522   002666  0E00               	movlw	0
  6523   002668  6E0F               	movwf	___fldiv@a^0,c
  6524   00266A  0E00               	movlw	0
  6525   00266C  6E10               	movwf	(___fldiv@a+1)^0,c
  6526   00266E  0E20               	movlw	32
  6527   002670  6E11               	movwf	(___fldiv@a+2)^0,c
  6528   002672  0E41               	movlw	65
  6529   002674  6E12               	movwf	(___fldiv@a+3)^0,c
  6530   002676  EC08  F01C         	call	___fldiv	;wreg free
  6531   00267A  C00B  F088         	movff	?___fldiv,efgtoa@u
  6532   00267E  C00C  F089         	movff	?___fldiv+1,efgtoa@u+1
  6533   002682  C00D  F08A         	movff	?___fldiv+2,efgtoa@u+2
  6534   002686  C00E  F08B         	movff	?___fldiv+3,efgtoa@u+3
  6535   00268A                     
  6536                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  6537   00268A  0100               	movlb	0	; () banked
  6538   00268C  4B77               	infsnz	efgtoa@i& (0+255),f,b
  6539   00268E  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  6540   002690                     l5842:
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  6544   002690  516D               	movf	efgtoa@m& (0+255),w,b
  6545   002692  5D77               	subwf	efgtoa@i& (0+255),w,b
  6546   002694  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  6547   002696  0A80               	xorlw	128
  6548   002698  6E3F               	movwf	??_efgtoa^0,c
  6549   00269A  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  6550   00269C  0A80               	xorlw	128
  6551   00269E  583F               	subwfb	??_efgtoa^0,w,c
  6552   0026A0  A0D8               	btfss	status,0,c
  6553   0026A2  EF55  F013         	goto	u7701
  6554   0026A6  EF57  F013         	goto	u7700
  6555   0026AA                     u7701:
  6556   0026AA  EFCD  F012         	goto	l5834
  6557   0026AE                     u7700:
  6558   0026AE                     
  6559                           ; BSR set to: 0
  6560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  6561   0026AE  C088  F00B         	movff	efgtoa@u,___flmul@b
  6562   0026B2  C089  F00C         	movff	efgtoa@u+1,___flmul@b+1
  6563   0026B6  C08A  F00D         	movff	efgtoa@u+2,___flmul@b+2
  6564   0026BA  C08B  F00E         	movff	efgtoa@u+3,___flmul@b+3
  6565   0026BE  0E00               	movlw	0
  6566   0026C0  6E0F               	movwf	___flmul@a^0,c
  6567   0026C2  0E00               	movlw	0
  6568   0026C4  6E10               	movwf	(___flmul@a+1)^0,c
  6569   0026C6  0EA0               	movlw	160
  6570   0026C8  6E11               	movwf	(___flmul@a+2)^0,c
  6571   0026CA  0E40               	movlw	64
  6572   0026CC  6E12               	movwf	(___flmul@a+3)^0,c
  6573   0026CE  EC05  F018         	call	___flmul	;wreg free
  6574   0026D2  C00B  F07D         	movff	?___flmul,efgtoa@l
  6575   0026D6  C00C  F07E         	movff	?___flmul+1,efgtoa@l+1
  6576   0026DA  C00D  F07F         	movff	?___flmul+2,efgtoa@l+2
  6577   0026DE  C00E  F080         	movff	?___flmul+3,efgtoa@l+3
  6578   0026E2                     
  6579                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  6580   0026E2  C079  F024         	movff	efgtoa@h,___flge@ff1
  6581   0026E6  C07A  F025         	movff	efgtoa@h+1,___flge@ff1+1
  6582   0026EA  C07B  F026         	movff	efgtoa@h+2,___flge@ff1+2
  6583   0026EE  C07C  F027         	movff	efgtoa@h+3,___flge@ff1+3
  6584   0026F2  C07D  F028         	movff	efgtoa@l,___flge@ff2
  6585   0026F6  C07E  F029         	movff	efgtoa@l+1,___flge@ff2+1
  6586   0026FA  C07F  F02A         	movff	efgtoa@l+2,___flge@ff2+2
  6587   0026FE  C080  F02B         	movff	efgtoa@l+3,___flge@ff2+3
  6588   002702  EC6E  F021         	call	___flge	;wreg free
  6589   002706  B0D8               	btfsc	status,0,c
  6590   002708  EF88  F013         	goto	u7711
  6591   00270C  EF8A  F013         	goto	u7710
  6592   002710                     u7711:
  6593   002710  EF95  F013         	goto	l5850
  6594   002714                     u7710:
  6595   002714                     
  6596                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  6597   002714  0E00               	movlw	0
  6598   002716  0100               	movlb	0	; () banked
  6599   002718  6F7D               	movwf	efgtoa@l& (0+255),b
  6600   00271A  0E00               	movlw	0
  6601   00271C  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  6602   00271E  0E00               	movlw	0
  6603   002720  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  6604   002722  0E00               	movlw	0
  6605   002724  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  6606                           
  6607                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  6608   002726  EFBE  F013         	goto	l5856
  6609   00272A                     l5850:
  6610                           
  6611                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  6612   00272A  C079  F00B         	movff	efgtoa@h,___fleq@ff1
  6613   00272E  C07A  F00C         	movff	efgtoa@h+1,___fleq@ff1+1
  6614   002732  C07B  F00D         	movff	efgtoa@h+2,___fleq@ff1+2
  6615   002736  C07C  F00E         	movff	efgtoa@h+3,___fleq@ff1+3
  6616   00273A  C07D  F00F         	movff	efgtoa@l,___fleq@ff2
  6617   00273E  C07E  F010         	movff	efgtoa@l+1,___fleq@ff2+1
  6618   002742  C07F  F011         	movff	efgtoa@l+2,___fleq@ff2+2
  6619   002746  C080  F012         	movff	efgtoa@l+3,___fleq@ff2+3
  6620   00274A  ECA5  F023         	call	___fleq	;wreg free
  6621   00274E  A0D8               	btfss	status,0,c
  6622   002750  EFAC  F013         	goto	u7721
  6623   002754  EFAE  F013         	goto	u7720
  6624   002758                     u7721:
  6625   002758  EFBE  F013         	goto	l5856
  6626   00275C                     u7720:
  6627   00275C  0100               	movlb	0	; () banked
  6628   00275E  B16B               	btfsc	efgtoa@d& (0+255),0,b
  6629   002760  EFB4  F013         	goto	u7731
  6630   002764  EFB6  F013         	goto	u7730
  6631   002768                     u7731:
  6632   002768  EFBE  F013         	goto	l5856
  6633   00276C                     u7730:
  6634   00276C                     
  6635                           ; BSR set to: 0
  6636                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  6637   00276C  0E00               	movlw	0
  6638   00276E  6F7D               	movwf	efgtoa@l& (0+255),b
  6639   002770  0E00               	movlw	0
  6640   002772  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  6641   002774  0E00               	movlw	0
  6642   002776  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  6643   002778  0E00               	movlw	0
  6644   00277A  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  6645   00277C                     l5856:
  6646                           
  6647                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  6648   00277C  C082  F00B         	movff	efgtoa@g,___fladd@b
  6649   002780  C083  F00C         	movff	efgtoa@g+1,___fladd@b+1
  6650   002784  C084  F00D         	movff	efgtoa@g+2,___fladd@b+2
  6651   002788  C085  F00E         	movff	efgtoa@g+3,___fladd@b+3
  6652   00278C  C07D  F00F         	movff	efgtoa@l,___fladd@a
  6653   002790  C07E  F010         	movff	efgtoa@l+1,___fladd@a+1
  6654   002794  C07F  F011         	movff	efgtoa@l+2,___fladd@a+2
  6655   002798  C080  F012         	movff	efgtoa@l+3,___fladd@a+3
  6656   00279C  ECA5  F015         	call	___fladd	;wreg free
  6657   0027A0  C00B  F079         	movff	?___fladd,efgtoa@h
  6658   0027A4  C00C  F07A         	movff	?___fladd+1,efgtoa@h+1
  6659   0027A8  C00D  F07B         	movff	?___fladd+2,efgtoa@h+2
  6660   0027AC  C00E  F07C         	movff	?___fladd+3,efgtoa@h+3
  6661   0027B0                     
  6662                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  6663   0027B0  C079  F024         	movff	efgtoa@h,___flge@ff1
  6664   0027B4  C07A  F025         	movff	efgtoa@h+1,___flge@ff1+1
  6665   0027B8  C07B  F026         	movff	efgtoa@h+2,___flge@ff1+2
  6666   0027BC  C07C  F027         	movff	efgtoa@h+3,___flge@ff1+3
  6667   0027C0  0E00               	movlw	0
  6668   0027C2  6E0F               	movwf	___flmul@a^0,c
  6669   0027C4  0E00               	movlw	0
  6670   0027C6  6E10               	movwf	(___flmul@a+1)^0,c
  6671   0027C8  0E20               	movlw	32
  6672   0027CA  6E11               	movwf	(___flmul@a+2)^0,c
  6673   0027CC  0E41               	movlw	65
  6674   0027CE  6E12               	movwf	(___flmul@a+3)^0,c
  6675   0027D0  C073  F00B         	movff	efgtoa@ou,___flmul@b
  6676   0027D4  C074  F00C         	movff	efgtoa@ou+1,___flmul@b+1
  6677   0027D8  C075  F00D         	movff	efgtoa@ou+2,___flmul@b+2
  6678   0027DC  C076  F00E         	movff	efgtoa@ou+3,___flmul@b+3
  6679   0027E0  EC05  F018         	call	___flmul	;wreg free
  6680   0027E4  C00B  F028         	movff	?___flmul,___flge@ff2
  6681   0027E8  C00C  F029         	movff	?___flmul+1,___flge@ff2+1
  6682   0027EC  C00D  F02A         	movff	?___flmul+2,___flge@ff2+2
  6683   0027F0  C00E  F02B         	movff	?___flmul+3,___flge@ff2+3
  6684   0027F4  EC6E  F021         	call	___flge	;wreg free
  6685   0027F8  A0D8               	btfss	status,0,c
  6686   0027FA  EF01  F014         	goto	u7741
  6687   0027FE  EF03  F014         	goto	u7740
  6688   002802                     u7741:
  6689   002802  EF2C  F014         	goto	l5868
  6690   002806                     u7740:
  6691   002806                     
  6692                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  6693   002806  0100               	movlb	0	; () banked
  6694   002808  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  6695   00280A  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  6696   00280C                     
  6697                           ; BSR set to: 0
  6698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  6699   00280C  C073  F00B         	movff	efgtoa@ou,___flmul@b
  6700   002810  C074  F00C         	movff	efgtoa@ou+1,___flmul@b+1
  6701   002814  C075  F00D         	movff	efgtoa@ou+2,___flmul@b+2
  6702   002818  C076  F00E         	movff	efgtoa@ou+3,___flmul@b+3
  6703   00281C  0E00               	movlw	0
  6704   00281E  6E0F               	movwf	___flmul@a^0,c
  6705   002820  0E00               	movlw	0
  6706   002822  6E10               	movwf	(___flmul@a+1)^0,c
  6707   002824  0E20               	movlw	32
  6708   002826  6E11               	movwf	(___flmul@a+2)^0,c
  6709   002828  0E41               	movlw	65
  6710   00282A  6E12               	movwf	(___flmul@a+3)^0,c
  6711   00282C  EC05  F018         	call	___flmul	;wreg free
  6712   002830  C00B  F073         	movff	?___flmul,efgtoa@ou
  6713   002834  C00C  F074         	movff	?___flmul+1,efgtoa@ou+1
  6714   002838  C00D  F075         	movff	?___flmul+2,efgtoa@ou+2
  6715   00283C  C00E  F076         	movff	?___flmul+3,efgtoa@ou+3
  6716   002840                     
  6717                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  6718   002840  0E66               	movlw	102
  6719   002842  0100               	movlb	0	; () banked
  6720   002844  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  6721   002846  A4D8               	btfss	status,2,c
  6722   002848  EF28  F014         	goto	u7751
  6723   00284C  EF2A  F014         	goto	u7750
  6724   002850                     u7751:
  6725   002850  EF2C  F014         	goto	l5868
  6726   002854                     u7750:
  6727   002854                     
  6728                           ; BSR set to: 0
  6729                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  6730   002854  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  6731   002856  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  6732   002858                     l5868:
  6733                           
  6734                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  6735   002858  C073  F088         	movff	efgtoa@ou,efgtoa@u
  6736   00285C  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  6737   002860  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  6738   002864  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  6739   002868                     
  6740                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  6741   002868  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  6742   00286C  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  6743   002870                     
  6744                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  6745   002870  0E00               	movlw	0
  6746   002872  0100               	movlb	0	; () banked
  6747   002874  6F68               	movwf	efgtoa@pp& (0+255),b
  6748   002876                     
  6749                           ; BSR set to: 0
  6750                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  6751   002876  0E00               	movlw	0
  6752   002878  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  6753   00287A  0E00               	movlw	0
  6754   00287C  6F64               	movwf	efgtoa@t& (0+255),b
  6755   00287E                     
  6756                           ; BSR set to: 0
  6757                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  6758   00287E  0E00               	movlw	0
  6759   002880  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  6760   002882  0E00               	movlw	0
  6761   002884  6F77               	movwf	efgtoa@i& (0+255),b
  6762                           
  6763                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6764   002886  EF2A  F015         	goto	l5918
  6765   00288A                     l5878:
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  6769   00288A  C079  F00B         	movff	efgtoa@h,___fldiv@b
  6770   00288E  C07A  F00C         	movff	efgtoa@h+1,___fldiv@b+1
  6771   002892  C07B  F00D         	movff	efgtoa@h+2,___fldiv@b+2
  6772   002896  C07C  F00E         	movff	efgtoa@h+3,___fldiv@b+3
  6773   00289A  C088  F00F         	movff	efgtoa@u,___fldiv@a
  6774   00289E  C089  F010         	movff	efgtoa@u+1,___fldiv@a+1
  6775   0028A2  C08A  F011         	movff	efgtoa@u+2,___fldiv@a+2
  6776   0028A6  C08B  F012         	movff	efgtoa@u+3,___fldiv@a+3
  6777   0028AA  EC08  F01C         	call	___fldiv	;wreg free
  6778   0028AE  C00B  F024         	movff	?___fldiv,floorf@x
  6779   0028B2  C00C  F025         	movff	?___fldiv+1,floorf@x+1
  6780   0028B6  C00D  F026         	movff	?___fldiv+2,floorf@x+2
  6781   0028BA  C00E  F027         	movff	?___fldiv+3,floorf@x+3
  6782   0028BE  EC08  F01F         	call	_floorf	;wreg free
  6783   0028C2  C024  F07D         	movff	?_floorf,efgtoa@l
  6784   0028C6  C025  F07E         	movff	?_floorf+1,efgtoa@l+1
  6785   0028CA  C026  F07F         	movff	?_floorf+2,efgtoa@l+2
  6786   0028CE  C027  F080         	movff	?_floorf+3,efgtoa@l+3
  6787                           
  6788                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  6789   0028D2  C07D  F00B         	movff	efgtoa@l,___fltol@f1
  6790   0028D6  C07E  F00C         	movff	efgtoa@l+1,___fltol@f1+1
  6791   0028DA  C07F  F00D         	movff	efgtoa@l+2,___fltol@f1+2
  6792   0028DE  C080  F00E         	movff	efgtoa@l+3,___fltol@f1+3
  6793   0028E2  ECEB  F020         	call	___fltol	;wreg free
  6794   0028E6  BE0C               	btfsc	(?___fltol+1)^0,7,c
  6795   0028E8  EF81  F014         	goto	u7760
  6796   0028EC  500C               	movf	(?___fltol+1)^0,w,c
  6797   0028EE  E107               	bnz	u7761
  6798   0028F0  0E0A               	movlw	10
  6799   0028F2  5C0B               	subwf	?___fltol^0,w,c
  6800   0028F4  B0D8               	btfsc	status,0,c
  6801   0028F6  EF7F  F014         	goto	u7761
  6802   0028FA  EF81  F014         	goto	u7760
  6803   0028FE                     u7761:
  6804   0028FE  EF91  F014         	goto	l5882
  6805   002902                     u7760:
  6806   002902  C07D  F00B         	movff	efgtoa@l,___fltol@f1
  6807   002906  C07E  F00C         	movff	efgtoa@l+1,___fltol@f1+1
  6808   00290A  C07F  F00D         	movff	efgtoa@l+2,___fltol@f1+2
  6809   00290E  C080  F00E         	movff	efgtoa@l+3,___fltol@f1+3
  6810   002912  ECEB  F020         	call	___fltol	;wreg free
  6811   002916  C00B  F06B         	movff	?___fltol,efgtoa@d
  6812   00291A  C00C  F06C         	movff	?___fltol+1,efgtoa@d+1
  6813   00291E  EF96  F014         	goto	l906
  6814   002922                     l5882:
  6815   002922  0E00               	movlw	0
  6816   002924  0100               	movlb	0	; () banked
  6817   002926  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  6818   002928  0E09               	movlw	9
  6819   00292A  6F6B               	movwf	efgtoa@d& (0+255),b
  6820   00292C                     l906:
  6821                           
  6822                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  6823   00292C  0100               	movlb	0	; () banked
  6824   00292E  5168               	movf	efgtoa@pp& (0+255),w,b
  6825   002930  A4D8               	btfss	status,2,c
  6826   002932  EF9D  F014         	goto	u7771
  6827   002936  EF9F  F014         	goto	u7770
  6828   00293A                     u7771:
  6829   00293A  EFC7  F014         	goto	l5902
  6830   00293E                     u7770:
  6831   00293E                     
  6832                           ; BSR set to: 0
  6833   00293E  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6834   002940  EFA6  F014         	goto	u7780
  6835   002944  EFA4  F014         	goto	u7781
  6836   002948                     u7781:
  6837   002948  EFC7  F014         	goto	l5902
  6838   00294C                     u7780:
  6839   00294C                     
  6840                           ; BSR set to: 0
  6841                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  6842   00294C  0E11               	movlw	low _dbuf
  6843   00294E  2586               	addwf	efgtoa@n& (0+255),w,b
  6844   002950  6ED9               	movwf	fsr2l,c
  6845   002952  0E01               	movlw	high _dbuf
  6846   002954  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6847   002956  6EDA               	movwf	fsr2h,c
  6848   002958  0E2E               	movlw	46
  6849   00295A  6EDF               	movwf	indf2,c
  6850   00295C                     
  6851                           ; BSR set to: 0
  6852   00295C  4B86               	infsnz	efgtoa@n& (0+255),f,b
  6853   00295E  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  6854   002960                     
  6855                           ; BSR set to: 0
  6856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  6857   002960  0771               	decf	efgtoa@w& (0+255),f,b
  6858   002962  A0D8               	btfss	status,0,c
  6859   002964  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  6860   002966                     
  6861                           ; BSR set to: 0
  6862                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  6863   002966  0E01               	movlw	1
  6864   002968  6F68               	movwf	efgtoa@pp& (0+255),b
  6865   00296A  EFC7  F014         	goto	l5902
  6866   00296E                     l5894:
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  6870   00296E  0E11               	movlw	low _dbuf
  6871   002970  2586               	addwf	efgtoa@n& (0+255),w,b
  6872   002972  6ED9               	movwf	fsr2l,c
  6873   002974  0E01               	movlw	high _dbuf
  6874   002976  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6875   002978  6EDA               	movwf	fsr2h,c
  6876   00297A  0E30               	movlw	48
  6877   00297C  6EDF               	movwf	indf2,c
  6878   00297E                     
  6879                           ; BSR set to: 0
  6880   00297E  4B86               	infsnz	efgtoa@n& (0+255),f,b
  6881   002980  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  6882   002982                     
  6883                           ; BSR set to: 0
  6884                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  6885   002982  0771               	decf	efgtoa@w& (0+255),f,b
  6886   002984  A0D8               	btfss	status,0,c
  6887   002986  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  6888   002988                     
  6889                           ; BSR set to: 0
  6890                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  6891   002988  0764               	decf	efgtoa@t& (0+255),f,b
  6892   00298A  A0D8               	btfss	status,0,c
  6893   00298C  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  6894   00298E                     l5902:
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  6898   00298E  5164               	movf	efgtoa@t& (0+255),w,b
  6899   002990  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6900   002992  A4D8               	btfss	status,2,c
  6901   002994  EFCE  F014         	goto	u7791
  6902   002998  EFD0  F014         	goto	u7790
  6903   00299C                     u7791:
  6904   00299C  EFB7  F014         	goto	l5894
  6905   0029A0                     u7790:
  6906   0029A0                     
  6907                           ; BSR set to: 0
  6908                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6909   0029A0  0E11               	movlw	low _dbuf
  6910   0029A2  2586               	addwf	efgtoa@n& (0+255),w,b
  6911   0029A4  6ED9               	movwf	fsr2l,c
  6912   0029A6  0E01               	movlw	high _dbuf
  6913   0029A8  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6914   0029AA  6EDA               	movwf	fsr2h,c
  6915   0029AC  516B               	movf	efgtoa@d& (0+255),w,b
  6916   0029AE  0F30               	addlw	48
  6917   0029B0  6EDF               	movwf	indf2,c
  6918   0029B2                     
  6919                           ; BSR set to: 0
  6920   0029B2  4B86               	infsnz	efgtoa@n& (0+255),f,b
  6921   0029B4  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  6922   0029B6                     
  6923                           ; BSR set to: 0
  6924                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  6925   0029B6  0771               	decf	efgtoa@w& (0+255),f,b
  6926   0029B8  A0D8               	btfss	status,0,c
  6927   0029BA  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  6928   0029BC                     
  6929                           ; BSR set to: 0
  6930                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  6931   0029BC  C079  F024         	movff	efgtoa@h,___flsub@b
  6932   0029C0  C07A  F025         	movff	efgtoa@h+1,___flsub@b+1
  6933   0029C4  C07B  F026         	movff	efgtoa@h+2,___flsub@b+2
  6934   0029C8  C07C  F027         	movff	efgtoa@h+3,___flsub@b+3
  6935   0029CC  C07D  F00F         	movff	efgtoa@l,___flmul@a
  6936   0029D0  C07E  F010         	movff	efgtoa@l+1,___flmul@a+1
  6937   0029D4  C07F  F011         	movff	efgtoa@l+2,___flmul@a+2
  6938   0029D8  C080  F012         	movff	efgtoa@l+3,___flmul@a+3
  6939   0029DC  C088  F00B         	movff	efgtoa@u,___flmul@b
  6940   0029E0  C089  F00C         	movff	efgtoa@u+1,___flmul@b+1
  6941   0029E4  C08A  F00D         	movff	efgtoa@u+2,___flmul@b+2
  6942   0029E8  C08B  F00E         	movff	efgtoa@u+3,___flmul@b+3
  6943   0029EC  EC05  F018         	call	___flmul	;wreg free
  6944   0029F0  C00B  F028         	movff	?___flmul,___flsub@a
  6945   0029F4  C00C  F029         	movff	?___flmul+1,___flsub@a+1
  6946   0029F8  C00D  F02A         	movff	?___flmul+2,___flsub@a+2
  6947   0029FC  C00E  F02B         	movff	?___flmul+3,___flsub@a+3
  6948   002A00  EC8B  F026         	call	___flsub	;wreg free
  6949   002A04  C024  F079         	movff	?___flsub,efgtoa@h
  6950   002A08  C025  F07A         	movff	?___flsub+1,efgtoa@h+1
  6951   002A0C  C026  F07B         	movff	?___flsub+2,efgtoa@h+2
  6952   002A10  C027  F07C         	movff	?___flsub+3,efgtoa@h+3
  6953   002A14                     
  6954                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  6955   002A14  C088  F00B         	movff	efgtoa@u,___fldiv@b
  6956   002A18  C089  F00C         	movff	efgtoa@u+1,___fldiv@b+1
  6957   002A1C  C08A  F00D         	movff	efgtoa@u+2,___fldiv@b+2
  6958   002A20  C08B  F00E         	movff	efgtoa@u+3,___fldiv@b+3
  6959   002A24  0E00               	movlw	0
  6960   002A26  6E0F               	movwf	___fldiv@a^0,c
  6961   002A28  0E00               	movlw	0
  6962   002A2A  6E10               	movwf	(___fldiv@a+1)^0,c
  6963   002A2C  0E20               	movlw	32
  6964   002A2E  6E11               	movwf	(___fldiv@a+2)^0,c
  6965   002A30  0E41               	movlw	65
  6966   002A32  6E12               	movwf	(___fldiv@a+3)^0,c
  6967   002A34  EC08  F01C         	call	___fldiv	;wreg free
  6968   002A38  C00B  F088         	movff	?___fldiv,efgtoa@u
  6969   002A3C  C00C  F089         	movff	?___fldiv+1,efgtoa@u+1
  6970   002A40  C00D  F08A         	movff	?___fldiv+2,efgtoa@u+2
  6971   002A44  C00E  F08B         	movff	?___fldiv+3,efgtoa@u+3
  6972   002A48                     
  6973                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  6974   002A48  0100               	movlb	0	; () banked
  6975   002A4A  0760               	decf	efgtoa@ne& (0+255),f,b
  6976   002A4C  A0D8               	btfss	status,0,c
  6977   002A4E  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  6978   002A50                     
  6979                           ; BSR set to: 0
  6980                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  6981   002A50  4B77               	infsnz	efgtoa@i& (0+255),f,b
  6982   002A52  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  6983   002A54                     l5918:
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6987   002A54  516D               	movf	efgtoa@m& (0+255),w,b
  6988   002A56  5D77               	subwf	efgtoa@i& (0+255),w,b
  6989   002A58  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  6990   002A5A  0A80               	xorlw	128
  6991   002A5C  6E3F               	movwf	??_efgtoa^0,c
  6992   002A5E  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  6993   002A60  0A80               	xorlw	128
  6994   002A62  583F               	subwfb	??_efgtoa^0,w,c
  6995   002A64  B0D8               	btfsc	status,0,c
  6996   002A66  EF37  F015         	goto	u7801
  6997   002A6A  EF39  F015         	goto	u7800
  6998   002A6E                     u7801:
  6999   002A6E  EF47  F015         	goto	l5922
  7000   002A72                     u7800:
  7001   002A72                     
  7002                           ; BSR set to: 0
  7003   002A72  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7004   002A74  EF45  F015         	goto	u7811
  7005   002A78  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  7006   002A7A  E109               	bnz	u7810
  7007   002A7C  0E4B               	movlw	75
  7008   002A7E  5D86               	subwf	efgtoa@n& (0+255),w,b
  7009   002A80  A0D8               	btfss	status,0,c
  7010   002A82  EF45  F015         	goto	u7811
  7011   002A86  EF47  F015         	goto	u7810
  7012   002A8A                     u7811:
  7013   002A8A  EF45  F014         	goto	l5878
  7014   002A8E                     u7810:
  7015   002A8E                     l5922:
  7016                           
  7017                           ; BSR set to: 0
  7018                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  7019   002A8E  0E00               	movlw	0
  7020   002A90  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  7021   002A92  0E4F               	movlw	79
  7022   002A94  6F77               	movwf	efgtoa@i& (0+255),b
  7023   002A96                     
  7024                           ; BSR set to: 0
  7025                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  7026   002A96  0E11               	movlw	low _dbuf
  7027   002A98  2577               	addwf	efgtoa@i& (0+255),w,b
  7028   002A9A  6ED9               	movwf	fsr2l,c
  7029   002A9C  0E01               	movlw	high _dbuf
  7030   002A9E  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7031   002AA0  6EDA               	movwf	fsr2h,c
  7032   002AA2  6ADF               	clrf	indf2,c
  7033   002AA4                     
  7034                           ; BSR set to: 0
  7035                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  7036   002AA4  0E11               	movlw	low _dbuf
  7037   002AA6  6E3F               	movwf	??_efgtoa^0,c
  7038   002AA8  0E01               	movlw	high _dbuf
  7039   002AAA  6E40               	movwf	(??_efgtoa+1)^0,c
  7040   002AAC  5186               	movf	efgtoa@n& (0+255),w,b
  7041   002AAE  5E3F               	subwf	??_efgtoa^0,f,c
  7042   002AB0  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  7043   002AB2  5A40               	subwfb	(??_efgtoa+1)^0,f,c
  7044   002AB4  5177               	movf	efgtoa@i& (0+255),w,b
  7045   002AB6  243F               	addwf	??_efgtoa^0,w,c
  7046   002AB8  6E0B               	movwf	memcpy@d1^0,c
  7047   002ABA  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  7048   002ABC  2040               	addwfc	(??_efgtoa+1)^0,w,c
  7049   002ABE  6E0C               	movwf	(memcpy@d1+1)^0,c
  7050   002AC0  0E11               	movlw	low _dbuf
  7051   002AC2  6E0D               	movwf	memcpy@s1^0,c
  7052   002AC4  0E01               	movlw	high _dbuf
  7053   002AC6  6E0E               	movwf	(memcpy@s1+1)^0,c
  7054   002AC8  C086  F00F         	movff	efgtoa@n,memcpy@n
  7055   002ACC  C087  F010         	movff	efgtoa@n+1,memcpy@n+1
  7056   002AD0  EC40  F026         	call	_memcpy	;wreg free
  7057   002AD4                     
  7058                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  7059   002AD4  0100               	movlb	0	; () banked
  7060   002AD6  5186               	movf	efgtoa@n& (0+255),w,b
  7061   002AD8  5D77               	subwf	efgtoa@i& (0+255),w,b
  7062   002ADA  6F86               	movwf	efgtoa@n& (0+255),b
  7063   002ADC  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  7064   002ADE  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  7065   002AE0  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  7066   002AE2                     
  7067                           ; BSR set to: 0
  7068                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  7069   002AE2  5181               	movf	efgtoa@sign& (0+255),w,b
  7070   002AE4  A4D8               	btfss	status,2,c
  7071   002AE6  EF77  F015         	goto	u7821
  7072   002AEA  EF7A  F015         	goto	u7820
  7073   002AEE                     u7821:
  7074   002AEE  0E01               	movlw	1
  7075   002AF0  EF7B  F015         	goto	u7830
  7076   002AF4                     u7820:
  7077   002AF4  0E00               	movlw	0
  7078   002AF6                     u7830:
  7079   002AF6  6F77               	movwf	efgtoa@i& (0+255),b
  7080   002AF8  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  7081   002AFA                     
  7082                           ; BSR set to: 0
  7083                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  7084   002AFA  5181               	movf	efgtoa@sign& (0+255),w,b
  7085   002AFC  B4D8               	btfsc	status,2,c
  7086   002AFE  EF83  F015         	goto	u7841
  7087   002B02  EF85  F015         	goto	u7840
  7088   002B06                     u7841:
  7089   002B06  EF90  F015         	goto	l5936
  7090   002B0A                     u7840:
  7091   002B0A                     
  7092                           ; BSR set to: 0
  7093                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  7094   002B0A  0786               	decf	efgtoa@n& (0+255),f,b
  7095   002B0C  A0D8               	btfss	status,0,c
  7096   002B0E  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  7097   002B10  0E11               	movlw	low _dbuf
  7098   002B12  2586               	addwf	efgtoa@n& (0+255),w,b
  7099   002B14  6ED9               	movwf	fsr2l,c
  7100   002B16  0E01               	movlw	high _dbuf
  7101   002B18  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7102   002B1A  6EDA               	movwf	fsr2h,c
  7103   002B1C  C081  FFDF         	movff	efgtoa@sign,indf2
  7104   002B20                     l5936:
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  7108   002B20  5177               	movf	efgtoa@i& (0+255),w,b
  7109   002B22  5F71               	subwf	efgtoa@w& (0+255),f,b
  7110   002B24  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  7111   002B26  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  7112   002B28                     
  7113                           ; BSR set to: 0
  7114                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  7115   002B28  C038  F01B         	movff	efgtoa@fp,pad@fp
  7116   002B2C  C039  F01C         	movff	efgtoa@fp+1,pad@fp+1
  7117   002B30  0E11               	movlw	low _dbuf
  7118   002B32  2586               	addwf	efgtoa@n& (0+255),w,b
  7119   002B34  6E1D               	movwf	pad@buf^0,c
  7120   002B36  0E01               	movlw	high _dbuf
  7121   002B38  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7122   002B3A  6E1E               	movwf	(pad@buf+1)^0,c
  7123   002B3C  C071  F01F         	movff	efgtoa@w,pad@p
  7124   002B40  C072  F020         	movff	efgtoa@w+1,pad@p+1
  7125   002B44  ECFA  F023         	call	_pad	;wreg free
  7126   002B48                     l873:
  7127   002B48  0012               	return		;funcret
  7128   002B4A                     __end_of_efgtoa:
  7129                           	callstack 0
  7130                           
  7131 ;; *************** function _strcpy *****************
  7132 ;; Defined at:
  7133 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  dest            2   10[COMRAM] PTR unsigned char 
  7136 ;;		 -> dbuf(80), 
  7137 ;;  src             2   12[COMRAM] PTR const unsigned char 
  7138 ;;		 -> STR_15(4), STR_12(4), 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;  d               2   16[COMRAM] PTR unsigned char 
  7141 ;;		 -> dbuf(80), 
  7142 ;;  s               2   14[COMRAM] PTR const unsigned char 
  7143 ;;		 -> STR_15(4), STR_12(4), 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  2   10[COMRAM] PTR unsigned char 
  7146 ;; Registers used:
  7147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7154 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7156 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7157 ;;Total ram usage:        8 bytes
  7158 ;; Hardware stack levels used: 1
  7159 ;; Hardware stack levels required when called: 3
  7160 ;; This function calls:
  7161 ;;		Nothing
  7162 ;; This function is called by:
  7163 ;;		_efgtoa
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           
  7167                           	psect	text20
  7168   004DA0                     __ptext20:
  7169                           	callstack 0
  7170   004DA0                     _strcpy:
  7171                           	callstack 23
  7172   004DA0  C00D  F00F         	movff	strcpy@src,strcpy@s
  7173   004DA4  C00E  F010         	movff	strcpy@src+1,strcpy@s+1
  7174   004DA8  C00B  F011         	movff	strcpy@dest,strcpy@d
  7175   004DAC  C00C  F012         	movff	strcpy@dest+1,strcpy@d+1
  7176   004DB0                     l5674:
  7177   004DB0  C00F  FFF6         	movff	strcpy@s,tblptrl
  7178   004DB4  C010  FFF7         	movff	strcpy@s+1,tblptrh
  7179   004DB8  4A0F               	infsnz	strcpy@s^0,f,c
  7180   004DBA  2A10               	incf	(strcpy@s+1)^0,f,c
  7181   004DBC                     	if	0	;tblptru may be non-zero
  7182   004DBC                     	endif
  7183   004DBC                     	if	0	;tblptru may be non-zero
  7184   004DBC                     	endif
  7185   004DBC  C011  FFD9         	movff	strcpy@d,fsr2l
  7186   004DC0  C012  FFDA         	movff	strcpy@d+1,fsr2h
  7187   004DC4  4A11               	infsnz	strcpy@d^0,f,c
  7188   004DC6  2A12               	incf	(strcpy@d+1)^0,f,c
  7189   004DC8  0008               	tblrd		*
  7190   004DCA  CFF5 FFDF          	movff	tablat,indf2
  7191   004DCE  50DF               	movf	indf2,w,c
  7192   004DD0  A4D8               	btfss	status,2,c
  7193   004DD2  EFED  F026         	goto	u7401
  7194   004DD6  EFEF  F026         	goto	u7400
  7195   004DDA                     u7401:
  7196   004DDA  EFD8  F026         	goto	l5674
  7197   004DDE                     u7400:
  7198   004DDE  0012               	return		;funcret
  7199   004DE0                     __end_of_strcpy:
  7200                           	callstack 0
  7201                           
  7202 ;; *************** function _pad *****************
  7203 ;; Defined at:
  7204 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  7207 ;;		 -> sprintf@f(12), 
  7208 ;;  buf             2   28[COMRAM] PTR unsigned char 
  7209 ;;		 -> dbuf(80), 
  7210 ;;  p               2   30[COMRAM] int 
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;  w               2   35[COMRAM] int 
  7213 ;;  i               2   33[COMRAM] int 
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  1    wreg      void 
  7216 ;; Registers used:
  7217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7223 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7224 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7226 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7227 ;;Total ram usage:       11 bytes
  7228 ;; Hardware stack levels used: 1
  7229 ;; Hardware stack levels required when called: 6
  7230 ;; This function calls:
  7231 ;;		_fputc
  7232 ;;		_fputs
  7233 ;; This function is called by:
  7234 ;;		_efgtoa
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text21
  7239   0047F4                     __ptext21:
  7240                           	callstack 0
  7241   0047F4                     _pad:
  7242                           	callstack 20
  7243   0047F4                     
  7244                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  7245   0047F4  BE20               	btfsc	(pad@p+1)^0,7,c
  7246   0047F6  EFFF  F023         	goto	u7311
  7247   0047FA  EF01  F024         	goto	u7310
  7248   0047FE                     u7311:
  7249   0047FE  EF07  F024         	goto	l5640
  7250   004802                     u7310:
  7251   004802  C01F  F024         	movff	pad@p,pad@w
  7252   004806  C020  F025         	movff	pad@p+1,pad@w+1
  7253   00480A  EF0B  F024         	goto	l858
  7254   00480E                     l5640:
  7255   00480E  0E00               	movlw	0
  7256   004810  6E25               	movwf	(pad@w+1)^0,c
  7257   004812  0E00               	movlw	0
  7258   004814  6E24               	movwf	pad@w^0,c
  7259   004816                     l858:
  7260                           
  7261                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  7262   004816  0E00               	movlw	0
  7263   004818  6E23               	movwf	(pad@i+1)^0,c
  7264   00481A  0E00               	movlw	0
  7265   00481C  6E22               	movwf	pad@i^0,c
  7266                           
  7267                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  7268   00481E  EF1D  F024         	goto	l5646
  7269   004822                     l5642:
  7270                           
  7271                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  7272   004822  0E00               	movlw	0
  7273   004824  6E0C               	movwf	(fputc@c+1)^0,c
  7274   004826  0E20               	movlw	32
  7275   004828  6E0B               	movwf	fputc@c^0,c
  7276   00482A  C01B  F00D         	movff	pad@fp,fputc@fp
  7277   00482E  C01C  F00E         	movff	pad@fp+1,fputc@fp+1
  7278   004832  ECDD  F022         	call	_fputc	;wreg free
  7279   004836                     
  7280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  7281   004836  4A22               	infsnz	pad@i^0,f,c
  7282   004838  2A23               	incf	(pad@i+1)^0,f,c
  7283   00483A                     l5646:
  7284                           
  7285                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  7286   00483A  5024               	movf	pad@w^0,w,c
  7287   00483C  5C22               	subwf	pad@i^0,w,c
  7288   00483E  5023               	movf	(pad@i+1)^0,w,c
  7289   004840  0A80               	xorlw	128
  7290   004842  6E21               	movwf	??_pad^0,c
  7291   004844  5025               	movf	(pad@w+1)^0,w,c
  7292   004846  0A80               	xorlw	128
  7293   004848  5821               	subwfb	??_pad^0,w,c
  7294   00484A  A0D8               	btfss	status,0,c
  7295   00484C  EF2A  F024         	goto	u7321
  7296   004850  EF2C  F024         	goto	u7320
  7297   004854                     u7321:
  7298   004854  EF11  F024         	goto	l5642
  7299   004858                     u7320:
  7300   004858                     
  7301                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  7302   004858  C01D  F014         	movff	pad@buf,fputs@s
  7303   00485C  C01E  F015         	movff	pad@buf+1,fputs@s+1
  7304   004860  C01B  F016         	movff	pad@fp,fputs@fp
  7305   004864  C01C  F017         	movff	pad@fp+1,fputs@fp+1
  7306   004868  ECAE  F026         	call	_fputs	;wreg free
  7307   00486C  0012               	return		;funcret
  7308   00486E                     __end_of_pad:
  7309                           	callstack 0
  7310                           
  7311 ;; *************** function _fputs *****************
  7312 ;; Defined at:
  7313 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;  s               2   19[COMRAM] PTR const unsigned char 
  7316 ;;		 -> dbuf(80), 
  7317 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  7318 ;;		 -> sprintf@f(12), 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;  i               2   24[COMRAM] int 
  7321 ;;  c               1   23[COMRAM] unsigned char 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  2   19[COMRAM] int 
  7324 ;; Registers used:
  7325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;Total ram usage:        7 bytes
  7336 ;; Hardware stack levels used: 1
  7337 ;; Hardware stack levels required when called: 5
  7338 ;; This function calls:
  7339 ;;		_fputc
  7340 ;; This function is called by:
  7341 ;;		_pad
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text22
  7346   004D5C                     __ptext22:
  7347                           	callstack 0
  7348   004D5C                     _fputs:
  7349                           	callstack 20
  7350   004D5C  0E00               	movlw	0
  7351   004D5E  6E1A               	movwf	(fputs@i+1)^0,c
  7352   004D60  0E00               	movlw	0
  7353   004D62  6E19               	movwf	fputs@i^0,c
  7354   004D64  EFBF  F026         	goto	l5264
  7355   004D68                     l5260:
  7356   004D68  C018  F00B         	movff	fputs@c,fputc@c
  7357   004D6C  6A0C               	clrf	(fputc@c+1)^0,c
  7358   004D6E  C016  F00D         	movff	fputs@fp,fputc@fp
  7359   004D72  C017  F00E         	movff	fputs@fp+1,fputc@fp+1
  7360   004D76  ECDD  F022         	call	_fputc	;wreg free
  7361   004D7A  4A19               	infsnz	fputs@i^0,f,c
  7362   004D7C  2A1A               	incf	(fputs@i+1)^0,f,c
  7363   004D7E                     l5264:
  7364   004D7E  5019               	movf	fputs@i^0,w,c
  7365   004D80  2414               	addwf	fputs@s^0,w,c
  7366   004D82  6ED9               	movwf	fsr2l,c
  7367   004D84  501A               	movf	(fputs@i+1)^0,w,c
  7368   004D86  2015               	addwfc	(fputs@s+1)^0,w,c
  7369   004D88  6EDA               	movwf	fsr2h,c
  7370   004D8A  50DF               	movf	indf2,w,c
  7371   004D8C  6E18               	movwf	fputs@c^0,c
  7372   004D8E  5018               	movf	fputs@c^0,w,c
  7373   004D90  A4D8               	btfss	status,2,c
  7374   004D92  EFCD  F026         	goto	u6721
  7375   004D96  EFCF  F026         	goto	u6720
  7376   004D9A                     u6721:
  7377   004D9A  EFB4  F026         	goto	l5260
  7378   004D9E                     u6720:
  7379   004D9E  0012               	return		;funcret
  7380   004DA0                     __end_of_fputs:
  7381                           	callstack 0
  7382                           
  7383 ;; *************** function _fputc *****************
  7384 ;; Defined at:
  7385 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;  c               2   10[COMRAM] int 
  7388 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  7389 ;;		 -> sprintf@f(12), 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  2   10[COMRAM] int 
  7394 ;; Registers used:
  7395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7403 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7404 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7405 ;;Total ram usage:        9 bytes
  7406 ;; Hardware stack levels used: 1
  7407 ;; Hardware stack levels required when called: 4
  7408 ;; This function calls:
  7409 ;;		_putch
  7410 ;; This function is called by:
  7411 ;;		_pad
  7412 ;;		_vfpfcnvrt
  7413 ;;		_fputs
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           	psect	text23
  7418   0045BA                     __ptext23:
  7419                           	callstack 0
  7420   0045BA                     _fputc:
  7421                           	callstack 23
  7422   0045BA  500D               	movf	fputc@fp^0,w,c
  7423   0045BC  100E               	iorwf	(fputc@fp+1)^0,w,c
  7424   0045BE  B4D8               	btfsc	status,2,c
  7425   0045C0  EFE4  F022         	goto	u6291
  7426   0045C4  EFE6  F022         	goto	u6290
  7427   0045C8                     u6291:
  7428   0045C8  EFEF  F022         	goto	l5046
  7429   0045CC                     u6290:
  7430   0045CC  500D               	movf	fputc@fp^0,w,c
  7431   0045CE  100E               	iorwf	(fputc@fp+1)^0,w,c
  7432   0045D0  A4D8               	btfss	status,2,c
  7433   0045D2  EFED  F022         	goto	u6301
  7434   0045D6  EFEF  F022         	goto	u6300
  7435   0045DA                     u6301:
  7436   0045DA  EFF4  F022         	goto	l5048
  7437   0045DE                     u6300:
  7438   0045DE                     l5046:
  7439   0045DE  500B               	movf	fputc@c^0,w,c
  7440   0045E0  ECF4  F027         	call	_putch
  7441   0045E4  EF41  F023         	goto	l998
  7442   0045E8                     l5048:
  7443   0045E8  EE20 F00A          	lfsr	2,10
  7444   0045EC  500D               	movf	fputc@fp^0,w,c
  7445   0045EE  26D9               	addwf	fsr2l,f,c
  7446   0045F0  500E               	movf	(fputc@fp+1)^0,w,c
  7447   0045F2  22DA               	addwfc	fsr2h,f,c
  7448   0045F4  50DE               	movf	postinc2,w,c
  7449   0045F6  10DE               	iorwf	postinc2,w,c
  7450   0045F8  B4D8               	btfsc	status,2,c
  7451   0045FA  EF01  F023         	goto	u6311
  7452   0045FE  EF03  F023         	goto	u6310
  7453   004602                     u6311:
  7454   004602  EF1E  F023         	goto	l5052
  7455   004606                     u6310:
  7456   004606  EE20 F00A          	lfsr	2,10
  7457   00460A  500D               	movf	fputc@fp^0,w,c
  7458   00460C  26D9               	addwf	fsr2l,f,c
  7459   00460E  500E               	movf	(fputc@fp+1)^0,w,c
  7460   004610  22DA               	addwfc	fsr2h,f,c
  7461   004612  EE10 F003          	lfsr	1,3
  7462   004616  500D               	movf	fputc@fp^0,w,c
  7463   004618  26E1               	addwf	fsr1l,f,c
  7464   00461A  500E               	movf	(fputc@fp+1)^0,w,c
  7465   00461C  22E2               	addwfc	fsr1h,f,c
  7466   00461E  50DE               	movf	postinc2,w,c
  7467   004620  5CE6               	subwf	postinc1,w,c
  7468   004622  50E6               	movf	postinc1,w,c
  7469   004624  0A80               	xorlw	128
  7470   004626  6E13               	movwf	(??_fputc+4)^0,c
  7471   004628  50DE               	movf	postinc2,w,c
  7472   00462A  0A80               	xorlw	128
  7473   00462C  5813               	subwfb	(??_fputc+4)^0,w,c
  7474   00462E  B0D8               	btfsc	status,0,c
  7475   004630  EF1C  F023         	goto	u6321
  7476   004634  EF1E  F023         	goto	u6320
  7477   004638                     u6321:
  7478   004638  EF41  F023         	goto	l998
  7479   00463C                     u6320:
  7480   00463C                     l5052:
  7481   00463C  EE20 F003          	lfsr	2,3
  7482   004640  500D               	movf	fputc@fp^0,w,c
  7483   004642  26D9               	addwf	fsr2l,f,c
  7484   004644  500E               	movf	(fputc@fp+1)^0,w,c
  7485   004646  22DA               	addwfc	fsr2h,f,c
  7486   004648  CFDE F00F          	movff	postinc2,??_fputc
  7487   00464C  CFDD F010          	movff	postdec2,??_fputc+1
  7488   004650  C00D  FFD9         	movff	fputc@fp,fsr2l
  7489   004654  C00E  FFDA         	movff	fputc@fp+1,fsr2h
  7490   004658  CFDE F011          	movff	postinc2,??_fputc+2
  7491   00465C  CFDD F012          	movff	postdec2,??_fputc+3
  7492   004660  500F               	movf	??_fputc^0,w,c
  7493   004662  2411               	addwf	(??_fputc+2)^0,w,c
  7494   004664  6ED9               	movwf	fsr2l,c
  7495   004666  5010               	movf	(??_fputc+1)^0,w,c
  7496   004668  2012               	addwfc	(??_fputc+3)^0,w,c
  7497   00466A  6EDA               	movwf	fsr2h,c
  7498   00466C  C00B  FFDF         	movff	fputc@c,indf2
  7499   004670  EE20 F003          	lfsr	2,3
  7500   004674  500D               	movf	fputc@fp^0,w,c
  7501   004676  26D9               	addwf	fsr2l,f,c
  7502   004678  500E               	movf	(fputc@fp+1)^0,w,c
  7503   00467A  22DA               	addwfc	fsr2h,f,c
  7504   00467C  2ADE               	incf	postinc2,f,c
  7505   00467E  0E00               	movlw	0
  7506   004680  22DD               	addwfc	postdec2,f,c
  7507   004682                     l998:
  7508   004682  0012               	return		;funcret
  7509   004684                     __end_of_fputc:
  7510                           	callstack 0
  7511                           
  7512 ;; *************** function _putch *****************
  7513 ;; Defined at:
  7514 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  c               1    wreg     unsigned char 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;  c               1    0[COMRAM] unsigned char 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		wreg
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;Total ram usage:        0 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; Hardware stack levels required when called: 3
  7535 ;; This function calls:
  7536 ;;		Nothing
  7537 ;; This function is called by:
  7538 ;;		_fputc
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text24
  7543   004FE8                     __ptext24:
  7544                           	callstack 0
  7545   004FE8                     _putch:
  7546                           	callstack 23
  7547   004FE8  0012               	return		;funcret
  7548   004FEA                     __end_of_putch:
  7549                           	callstack 0
  7550                           
  7551 ;; *************** function _memcpy *****************
  7552 ;; Defined at:
  7553 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;  d1              2   10[COMRAM] PTR void 
  7556 ;;		 -> dbuf(80), 
  7557 ;;  s1              2   12[COMRAM] PTR const void 
  7558 ;;		 -> dbuf(80), 
  7559 ;;  n               2   14[COMRAM] unsigned int 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  s               2   19[COMRAM] PTR const unsigned char 
  7562 ;;		 -> dbuf(80), 
  7563 ;;  d               2   17[COMRAM] PTR unsigned char 
  7564 ;;		 -> dbuf(80), 
  7565 ;;  tmp             1   16[COMRAM] unsigned char 
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  2   10[COMRAM] PTR void 
  7568 ;; Registers used:
  7569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7575 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7576 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;Total ram usage:       11 bytes
  7580 ;; Hardware stack levels used: 1
  7581 ;; Hardware stack levels required when called: 3
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_efgtoa
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text25
  7590   004C80                     __ptext25:
  7591                           	callstack 0
  7592   004C80                     _memcpy:
  7593                           	callstack 23
  7594   004C80  C00D  F014         	movff	memcpy@s1,memcpy@s
  7595   004C84  C00E  F015         	movff	memcpy@s1+1,memcpy@s+1
  7596   004C88  C00B  F012         	movff	memcpy@d1,memcpy@d
  7597   004C8C  C00C  F013         	movff	memcpy@d1+1,memcpy@d+1
  7598   004C90  EF5A  F026         	goto	l5718
  7599   004C94                     l5710:
  7600   004C94  C014  FFD9         	movff	memcpy@s,fsr2l
  7601   004C98  C015  FFDA         	movff	memcpy@s+1,fsr2h
  7602   004C9C  50DF               	movf	indf2,w,c
  7603   004C9E  6E11               	movwf	memcpy@tmp^0,c
  7604   004CA0  4A14               	infsnz	memcpy@s^0,f,c
  7605   004CA2  2A15               	incf	(memcpy@s+1)^0,f,c
  7606   004CA4  C012  FFD9         	movff	memcpy@d,fsr2l
  7607   004CA8  C013  FFDA         	movff	memcpy@d+1,fsr2h
  7608   004CAC  C011  FFDF         	movff	memcpy@tmp,indf2
  7609   004CB0  4A12               	infsnz	memcpy@d^0,f,c
  7610   004CB2  2A13               	incf	(memcpy@d+1)^0,f,c
  7611   004CB4                     l5718:
  7612   004CB4  060F               	decf	memcpy@n^0,f,c
  7613   004CB6  A0D8               	btfss	status,0,c
  7614   004CB8  0610               	decf	(memcpy@n+1)^0,f,c
  7615   004CBA  280F               	incf	memcpy@n^0,w,c
  7616   004CBC  E106               	bnz	u7521
  7617   004CBE  2810               	incf	(memcpy@n+1)^0,w,c
  7618   004CC0  A4D8               	btfss	status,2,c
  7619   004CC2  EF65  F026         	goto	u7521
  7620   004CC6  EF67  F026         	goto	u7520
  7621   004CCA                     u7521:
  7622   004CCA  EF4A  F026         	goto	l5710
  7623   004CCE                     u7520:
  7624   004CCE  0012               	return		;funcret
  7625   004CD0                     __end_of_memcpy:
  7626                           	callstack 0
  7627                           
  7628 ;; *************** function _labs *****************
  7629 ;; Defined at:
  7630 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  a               4   10[COMRAM] long 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  4   10[COMRAM] long 
  7637 ;; Registers used:
  7638 ;;		wreg, status,2, status,0
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7644 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;Total ram usage:        8 bytes
  7649 ;; Hardware stack levels used: 1
  7650 ;; Hardware stack levels required when called: 3
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_efgtoa
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text26
  7659   0049A4                     __ptext26:
  7660                           	callstack 0
  7661   0049A4                     _labs:
  7662                           	callstack 23
  7663   0049A4  BE0E               	btfsc	(labs@a+3)^0,7,c
  7664   0049A6  EFE1  F024         	goto	u7410
  7665   0049AA  500E               	movf	(labs@a+3)^0,w,c
  7666   0049AC  100D               	iorwf	(labs@a+2)^0,w,c
  7667   0049AE  100C               	iorwf	(labs@a+1)^0,w,c
  7668   0049B0  E106               	bnz	u7411
  7669   0049B2  040B               	decf	labs@a^0,w,c
  7670   0049B4  B0D8               	btfsc	status,0,c
  7671   0049B6  EFDF  F024         	goto	u7411
  7672   0049BA  EFE1  F024         	goto	u7410
  7673   0049BE                     u7411:
  7674   0049BE  EFFC  F024         	goto	l977
  7675   0049C2                     u7410:
  7676   0049C2  C00B  F00F         	movff	labs@a,??_labs
  7677   0049C6  C00C  F010         	movff	labs@a+1,??_labs+1
  7678   0049CA  C00D  F011         	movff	labs@a+2,??_labs+2
  7679   0049CE  C00E  F012         	movff	labs@a+3,??_labs+3
  7680   0049D2  1E0F               	comf	??_labs^0,f,c
  7681   0049D4  1E10               	comf	(??_labs+1)^0,f,c
  7682   0049D6  1E11               	comf	(??_labs+2)^0,f,c
  7683   0049D8  1E12               	comf	(??_labs+3)^0,f,c
  7684   0049DA  2A0F               	incf	??_labs^0,f,c
  7685   0049DC  0E00               	movlw	0
  7686   0049DE  2210               	addwfc	(??_labs+1)^0,f,c
  7687   0049E0  2211               	addwfc	(??_labs+2)^0,f,c
  7688   0049E2  2212               	addwfc	(??_labs+3)^0,f,c
  7689   0049E4  C00F  F00B         	movff	??_labs,?_labs
  7690   0049E8  C010  F00C         	movff	??_labs+1,?_labs+1
  7691   0049EC  C011  F00D         	movff	??_labs+2,?_labs+2
  7692   0049F0  C012  F00E         	movff	??_labs+3,?_labs+3
  7693   0049F4  EF04  F025         	goto	l980
  7694   0049F8                     l977:
  7695   0049F8  C00B  F00B         	movff	labs@a,?_labs
  7696   0049FC  C00C  F00C         	movff	labs@a+1,?_labs+1
  7697   004A00  C00D  F00D         	movff	labs@a+2,?_labs+2
  7698   004A04  C00E  F00E         	movff	labs@a+3,?_labs+3
  7699   004A08                     l980:
  7700   004A08  0012               	return		;funcret
  7701   004A0A                     __end_of_labs:
  7702                           	callstack 0
  7703                           
  7704 ;; *************** function _floorf *****************
  7705 ;; Defined at:
  7706 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  x               4   35[COMRAM] float 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  u               4   51[COMRAM] struct .
  7711 ;;  m               4   45[COMRAM] unsigned long 
  7712 ;;  e               2   49[COMRAM] int 
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  4   35[COMRAM] float 
  7715 ;; Registers used:
  7716 ;;		wreg, status,2, status,0
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7722 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7723 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7724 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7725 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7726 ;;Total ram usage:       20 bytes
  7727 ;; Hardware stack levels used: 1
  7728 ;; Hardware stack levels required when called: 3
  7729 ;; This function calls:
  7730 ;;		Nothing
  7731 ;; This function is called by:
  7732 ;;		_efgtoa
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           	psect	text27
  7737   003E10                     __ptext27:
  7738                           	callstack 0
  7739   003E10                     _floorf:
  7740                           	callstack 23
  7741   003E10  C045  F034         	movff	floorf@F526,floorf@u
  7742   003E14  C046  F035         	movff	floorf@F526+1,floorf@u+1
  7743   003E18  C047  F036         	movff	floorf@F526+2,floorf@u+2
  7744   003E1C  C048  F037         	movff	floorf@F526+3,floorf@u+3
  7745   003E20  C024  F034         	movff	floorf@x,floorf@u
  7746   003E24  C025  F035         	movff	floorf@x+1,floorf@u+1
  7747   003E28  C026  F036         	movff	floorf@x+2,floorf@u+2
  7748   003E2C  C027  F037         	movff	floorf@x+3,floorf@u+3
  7749   003E30  0E81               	movlw	129
  7750   003E32  6E28               	movwf	??_floorf^0,c
  7751   003E34  0EFF               	movlw	255
  7752   003E36  6E29               	movwf	(??_floorf+1)^0,c
  7753   003E38  C034  F02A         	movff	floorf@u,??_floorf+2
  7754   003E3C  C035  F02B         	movff	floorf@u+1,??_floorf+3
  7755   003E40  C036  F02C         	movff	floorf@u+2,??_floorf+4
  7756   003E44  C037  F02D         	movff	floorf@u+3,??_floorf+5
  7757   003E48  0E18               	movlw	24
  7758   003E4A  EF2C  F01F         	goto	u7420
  7759   003E4E                     u7425:
  7760   003E4E  90D8               	bcf	status,0,c
  7761   003E50  322D               	rrcf	(??_floorf+5)^0,f,c
  7762   003E52  322C               	rrcf	(??_floorf+4)^0,f,c
  7763   003E54  322B               	rrcf	(??_floorf+3)^0,f,c
  7764   003E56  322A               	rrcf	(??_floorf+2)^0,f,c
  7765   003E58                     u7420:
  7766   003E58  2EE8               	decfsz	wreg,f,c
  7767   003E5A  EF27  F01F         	goto	u7425
  7768   003E5E  502A               	movf	(??_floorf+2)^0,w,c
  7769   003E60  2428               	addwf	??_floorf^0,w,c
  7770   003E62  6E32               	movwf	floorf@e^0,c
  7771   003E64  0E00               	movlw	0
  7772   003E66  2029               	addwfc	(??_floorf+1)^0,w,c
  7773   003E68  6E33               	movwf	(floorf@e+1)^0,c
  7774   003E6A  BE33               	btfsc	(floorf@e+1)^0,7,c
  7775   003E6C  EF41  F01F         	goto	u7431
  7776   003E70  5033               	movf	(floorf@e+1)^0,w,c
  7777   003E72  E109               	bnz	u7430
  7778   003E74  0E17               	movlw	23
  7779   003E76  5C32               	subwf	floorf@e^0,w,c
  7780   003E78  A0D8               	btfss	status,0,c
  7781   003E7A  EF41  F01F         	goto	u7431
  7782   003E7E  EF43  F01F         	goto	u7430
  7783   003E82                     u7431:
  7784   003E82  EF4D  F01F         	goto	l5686
  7785   003E86                     u7430:
  7786   003E86                     l5684:
  7787   003E86  C024  F024         	movff	floorf@x,?_floorf
  7788   003E8A  C025  F025         	movff	floorf@x+1,?_floorf+1
  7789   003E8E  C026  F026         	movff	floorf@x+2,?_floorf+2
  7790   003E92  C027  F027         	movff	floorf@x+3,?_floorf+3
  7791   003E96  EF10  F020         	goto	l966
  7792   003E9A                     l5686:
  7793   003E9A  BE33               	btfsc	(floorf@e+1)^0,7,c
  7794   003E9C  EF52  F01F         	goto	u7441
  7795   003EA0  EF54  F01F         	goto	u7440
  7796   003EA4                     u7441:
  7797   003EA4  EFC4  F01F         	goto	l5696
  7798   003EA8                     u7440:
  7799   003EA8  C032  F028         	movff	floorf@e,??_floorf
  7800   003EAC  0EFF               	movlw	255
  7801   003EAE  6E29               	movwf	(??_floorf+1)^0,c
  7802   003EB0  0EFF               	movlw	255
  7803   003EB2  6E2A               	movwf	(??_floorf+2)^0,c
  7804   003EB4  0E7F               	movlw	127
  7805   003EB6  6E2B               	movwf	(??_floorf+3)^0,c
  7806   003EB8  0E00               	movlw	0
  7807   003EBA  6E2C               	movwf	(??_floorf+4)^0,c
  7808   003EBC                     u7455:
  7809   003EBC  6628               	tstfsz	??_floorf^0,c
  7810   003EBE  EF63  F01F         	goto	u7456
  7811   003EC2  EF6B  F01F         	goto	u7457
  7812   003EC6                     u7456:
  7813   003EC6  342C               	rlcf	(??_floorf+4)^0,w,c
  7814   003EC8  322C               	rrcf	(??_floorf+4)^0,f,c
  7815   003ECA  322B               	rrcf	(??_floorf+3)^0,f,c
  7816   003ECC  322A               	rrcf	(??_floorf+2)^0,f,c
  7817   003ECE  3229               	rrcf	(??_floorf+1)^0,f,c
  7818   003ED0  2E28               	decfsz	??_floorf^0,f,c
  7819   003ED2  EF5E  F01F         	goto	u7455
  7820   003ED6                     u7457:
  7821   003ED6  C029  F02E         	movff	??_floorf+1,floorf@m
  7822   003EDA  C02A  F02F         	movff	??_floorf+2,floorf@m+1
  7823   003EDE  C02B  F030         	movff	??_floorf+3,floorf@m+2
  7824   003EE2  C02C  F031         	movff	??_floorf+4,floorf@m+3
  7825   003EE6  502E               	movf	floorf@m^0,w,c
  7826   003EE8  1434               	andwf	floorf@u^0,w,c
  7827   003EEA  6E28               	movwf	??_floorf^0,c
  7828   003EEC  502F               	movf	(floorf@m+1)^0,w,c
  7829   003EEE  1435               	andwf	(floorf@u+1)^0,w,c
  7830   003EF0  6E29               	movwf	(??_floorf+1)^0,c
  7831   003EF2  5030               	movf	(floorf@m+2)^0,w,c
  7832   003EF4  1436               	andwf	(floorf@u+2)^0,w,c
  7833   003EF6  6E2A               	movwf	(??_floorf+2)^0,c
  7834   003EF8  5031               	movf	(floorf@m+3)^0,w,c
  7835   003EFA  1437               	andwf	(floorf@u+3)^0,w,c
  7836   003EFC  6E2B               	movwf	(??_floorf+3)^0,c
  7837   003EFE  5028               	movf	??_floorf^0,w,c
  7838   003F00  1029               	iorwf	(??_floorf+1)^0,w,c
  7839   003F02  102A               	iorwf	(??_floorf+2)^0,w,c
  7840   003F04  102B               	iorwf	(??_floorf+3)^0,w,c
  7841   003F06  A4D8               	btfss	status,2,c
  7842   003F08  EF88  F01F         	goto	u7461
  7843   003F0C  EF8A  F01F         	goto	u7460
  7844   003F10                     u7461:
  7845   003F10  EF8C  F01F         	goto	l5692
  7846   003F14                     u7460:
  7847   003F14  EF43  F01F         	goto	l5684
  7848   003F18                     l5692:
  7849   003F18  C034  F028         	movff	floorf@u,??_floorf
  7850   003F1C  C035  F029         	movff	floorf@u+1,??_floorf+1
  7851   003F20  C036  F02A         	movff	floorf@u+2,??_floorf+2
  7852   003F24  C037  F02B         	movff	floorf@u+3,??_floorf+3
  7853   003F28  0E20               	movlw	32
  7854   003F2A  EF9C  F01F         	goto	u7470
  7855   003F2E                     u7475:
  7856   003F2E  90D8               	bcf	status,0,c
  7857   003F30  322B               	rrcf	(??_floorf+3)^0,f,c
  7858   003F32  322A               	rrcf	(??_floorf+2)^0,f,c
  7859   003F34  3229               	rrcf	(??_floorf+1)^0,f,c
  7860   003F36  3228               	rrcf	??_floorf^0,f,c
  7861   003F38                     u7470:
  7862   003F38  2EE8               	decfsz	wreg,f,c
  7863   003F3A  EF97  F01F         	goto	u7475
  7864   003F3E  5028               	movf	??_floorf^0,w,c
  7865   003F40  1029               	iorwf	(??_floorf+1)^0,w,c
  7866   003F42  102A               	iorwf	(??_floorf+2)^0,w,c
  7867   003F44  102B               	iorwf	(??_floorf+3)^0,w,c
  7868   003F46  B4D8               	btfsc	status,2,c
  7869   003F48  EFA8  F01F         	goto	u7481
  7870   003F4C  EFAA  F01F         	goto	u7480
  7871   003F50                     u7481:
  7872   003F50  EFB2  F01F         	goto	l969
  7873   003F54                     u7480:
  7874   003F54  502E               	movf	floorf@m^0,w,c
  7875   003F56  2634               	addwf	floorf@u^0,f,c
  7876   003F58  502F               	movf	(floorf@m+1)^0,w,c
  7877   003F5A  2235               	addwfc	(floorf@u+1)^0,f,c
  7878   003F5C  5030               	movf	(floorf@m+2)^0,w,c
  7879   003F5E  2236               	addwfc	(floorf@u+2)^0,f,c
  7880   003F60  5031               	movf	(floorf@m+3)^0,w,c
  7881   003F62  2237               	addwfc	(floorf@u+3)^0,f,c
  7882   003F64                     l969:
  7883   003F64  1C2E               	comf	floorf@m^0,w,c
  7884   003F66  6E28               	movwf	??_floorf^0,c
  7885   003F68  1C2F               	comf	(floorf@m+1)^0,w,c
  7886   003F6A  6E29               	movwf	(??_floorf+1)^0,c
  7887   003F6C  1C30               	comf	(floorf@m+2)^0,w,c
  7888   003F6E  6E2A               	movwf	(??_floorf+2)^0,c
  7889   003F70  1C31               	comf	(floorf@m+3)^0,w,c
  7890   003F72  6E2B               	movwf	(??_floorf+3)^0,c
  7891   003F74  5028               	movf	??_floorf^0,w,c
  7892   003F76  1634               	andwf	floorf@u^0,f,c
  7893   003F78  5029               	movf	(??_floorf+1)^0,w,c
  7894   003F7A  1635               	andwf	(floorf@u+1)^0,f,c
  7895   003F7C  502A               	movf	(??_floorf+2)^0,w,c
  7896   003F7E  1636               	andwf	(floorf@u+2)^0,f,c
  7897   003F80  502B               	movf	(??_floorf+3)^0,w,c
  7898   003F82  1637               	andwf	(floorf@u+3)^0,f,c
  7899   003F84  EF08  F020         	goto	l5704
  7900   003F88                     l5696:
  7901   003F88  C034  F028         	movff	floorf@u,??_floorf
  7902   003F8C  C035  F029         	movff	floorf@u+1,??_floorf+1
  7903   003F90  C036  F02A         	movff	floorf@u+2,??_floorf+2
  7904   003F94  C037  F02B         	movff	floorf@u+3,??_floorf+3
  7905   003F98  0E20               	movlw	32
  7906   003F9A  EFD4  F01F         	goto	u7490
  7907   003F9E                     u7495:
  7908   003F9E  90D8               	bcf	status,0,c
  7909   003FA0  322B               	rrcf	(??_floorf+3)^0,f,c
  7910   003FA2  322A               	rrcf	(??_floorf+2)^0,f,c
  7911   003FA4  3229               	rrcf	(??_floorf+1)^0,f,c
  7912   003FA6  3228               	rrcf	??_floorf^0,f,c
  7913   003FA8                     u7490:
  7914   003FA8  2EE8               	decfsz	wreg,f,c
  7915   003FAA  EFCF  F01F         	goto	u7495
  7916   003FAE  5028               	movf	??_floorf^0,w,c
  7917   003FB0  1029               	iorwf	(??_floorf+1)^0,w,c
  7918   003FB2  102A               	iorwf	(??_floorf+2)^0,w,c
  7919   003FB4  102B               	iorwf	(??_floorf+3)^0,w,c
  7920   003FB6  A4D8               	btfss	status,2,c
  7921   003FB8  EFE0  F01F         	goto	u7501
  7922   003FBC  EFE2  F01F         	goto	u7500
  7923   003FC0                     u7501:
  7924   003FC0  EFEC  F01F         	goto	l5700
  7925   003FC4                     u7500:
  7926   003FC4  0E00               	movlw	0
  7927   003FC6  6E34               	movwf	floorf@u^0,c
  7928   003FC8  0E00               	movlw	0
  7929   003FCA  6E35               	movwf	(floorf@u+1)^0,c
  7930   003FCC  0E00               	movlw	0
  7931   003FCE  6E36               	movwf	(floorf@u+2)^0,c
  7932   003FD0  0E00               	movlw	0
  7933   003FD2  6E37               	movwf	(floorf@u+3)^0,c
  7934   003FD4  EF08  F020         	goto	l5704
  7935   003FD8                     l5700:
  7936   003FD8  90D8               	bcf	status,0,c
  7937   003FDA  3434               	rlcf	floorf@u^0,w,c
  7938   003FDC  6E28               	movwf	??_floorf^0,c
  7939   003FDE  3435               	rlcf	(floorf@u+1)^0,w,c
  7940   003FE0  6E29               	movwf	(??_floorf+1)^0,c
  7941   003FE2  3436               	rlcf	(floorf@u+2)^0,w,c
  7942   003FE4  6E2A               	movwf	(??_floorf+2)^0,c
  7943   003FE6  3437               	rlcf	(floorf@u+3)^0,w,c
  7944   003FE8  6E2B               	movwf	(??_floorf+3)^0,c
  7945   003FEA  5028               	movf	??_floorf^0,w,c
  7946   003FEC  1029               	iorwf	(??_floorf+1)^0,w,c
  7947   003FEE  102A               	iorwf	(??_floorf+2)^0,w,c
  7948   003FF0  102B               	iorwf	(??_floorf+3)^0,w,c
  7949   003FF2  B4D8               	btfsc	status,2,c
  7950   003FF4  EFFE  F01F         	goto	u7511
  7951   003FF8  EF00  F020         	goto	u7510
  7952   003FFC                     u7511:
  7953   003FFC  EF08  F020         	goto	l5704
  7954   004000                     u7510:
  7955   004000  0E00               	movlw	0
  7956   004002  6E34               	movwf	floorf@u^0,c
  7957   004004  0E00               	movlw	0
  7958   004006  6E35               	movwf	(floorf@u+1)^0,c
  7959   004008  0E80               	movlw	128
  7960   00400A  6E36               	movwf	(floorf@u+2)^0,c
  7961   00400C  0EBF               	movlw	191
  7962   00400E  6E37               	movwf	(floorf@u+3)^0,c
  7963   004010                     l5704:
  7964   004010  C034  F024         	movff	floorf@u,?_floorf
  7965   004014  C035  F025         	movff	floorf@u+1,?_floorf+1
  7966   004018  C036  F026         	movff	floorf@u+2,?_floorf+2
  7967   00401C  C037  F027         	movff	floorf@u+3,?_floorf+3
  7968   004020                     l966:
  7969   004020  0012               	return		;funcret
  7970   004022                     __end_of_floorf:
  7971                           	callstack 0
  7972                           
  7973 ;; *************** function ___fpclassifyf *****************
  7974 ;; Defined at:
  7975 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  x               4   10[COMRAM] float 
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;  u               4   20[COMRAM] struct .
  7980 ;;  e               2   18[COMRAM] int 
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  2   10[COMRAM] int 
  7983 ;; Registers used:
  7984 ;;		wreg, status,2, status,0
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7991 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7992 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7993 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;Total ram usage:       14 bytes
  7995 ;; Hardware stack levels used: 1
  7996 ;; Hardware stack levels required when called: 3
  7997 ;; This function calls:
  7998 ;;		Nothing
  7999 ;; This function is called by:
  8000 ;;		_efgtoa
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           	psect	text28
  8005   0043E0                     __ptext28:
  8006                           	callstack 0
  8007   0043E0                     ___fpclassifyf:
  8008                           	callstack 23
  8009   0043E0  C049  F015         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8010   0043E4  C04A  F016         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8011   0043E8  C04B  F017         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8012   0043EC  C04C  F018         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8013   0043F0  C00B  F015         	movff	___fpclassifyf@x,___fpclassifyf@u
  8014   0043F4  C00C  F016         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8015   0043F8  C00D  F017         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8016   0043FC  C00E  F018         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8017   004400  C015  F00F         	movff	___fpclassifyf@u,??___fpclassifyf
  8018   004404  C016  F010         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8019   004408  C017  F011         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8020   00440C  C018  F012         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8021   004410  0E18               	movlw	24
  8022   004412  EF10  F022         	goto	u7330
  8023   004416                     u7335:
  8024   004416  90D8               	bcf	status,0,c
  8025   004418  3212               	rrcf	(??___fpclassifyf+3)^0,f,c
  8026   00441A  3211               	rrcf	(??___fpclassifyf+2)^0,f,c
  8027   00441C  3210               	rrcf	(??___fpclassifyf+1)^0,f,c
  8028   00441E  320F               	rrcf	??___fpclassifyf^0,f,c
  8029   004420                     u7330:
  8030   004420  2EE8               	decfsz	wreg,f,c
  8031   004422  EF0B  F022         	goto	u7335
  8032   004426  500F               	movf	??___fpclassifyf^0,w,c
  8033   004428  6E13               	movwf	___fpclassifyf@e^0,c
  8034   00442A  6A14               	clrf	(___fpclassifyf@e+1)^0,c
  8035   00442C  5013               	movf	___fpclassifyf@e^0,w,c
  8036   00442E  1014               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8037   004430  A4D8               	btfss	status,2,c
  8038   004432  EF1D  F022         	goto	u7341
  8039   004436  EF1F  F022         	goto	u7340
  8040   00443A                     u7341:
  8041   00443A  EF3F  F022         	goto	l5662
  8042   00443E                     u7340:
  8043   00443E  90D8               	bcf	status,0,c
  8044   004440  3415               	rlcf	___fpclassifyf@u^0,w,c
  8045   004442  6E0F               	movwf	??___fpclassifyf^0,c
  8046   004444  3416               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8047   004446  6E10               	movwf	(??___fpclassifyf+1)^0,c
  8048   004448  3417               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8049   00444A  6E11               	movwf	(??___fpclassifyf+2)^0,c
  8050   00444C  3418               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8051   00444E  6E12               	movwf	(??___fpclassifyf+3)^0,c
  8052   004450  500F               	movf	??___fpclassifyf^0,w,c
  8053   004452  1010               	iorwf	(??___fpclassifyf+1)^0,w,c
  8054   004454  1011               	iorwf	(??___fpclassifyf+2)^0,w,c
  8055   004456  1012               	iorwf	(??___fpclassifyf+3)^0,w,c
  8056   004458  A4D8               	btfss	status,2,c
  8057   00445A  EF31  F022         	goto	u7351
  8058   00445E  EF33  F022         	goto	u7350
  8059   004462                     u7351:
  8060   004462  EF39  F022         	goto	l5658
  8061   004466                     u7350:
  8062   004466  0E00               	movlw	0
  8063   004468  6E0C               	movwf	(?___fpclassifyf+1)^0,c
  8064   00446A  0E02               	movlw	2
  8065   00446C  6E0B               	movwf	?___fpclassifyf^0,c
  8066   00446E  EF6E  F022         	goto	l959
  8067   004472                     l5658:
  8068   004472  0E00               	movlw	0
  8069   004474  6E0C               	movwf	(?___fpclassifyf+1)^0,c
  8070   004476  0E03               	movlw	3
  8071   004478  6E0B               	movwf	?___fpclassifyf^0,c
  8072   00447A  EF6E  F022         	goto	l959
  8073   00447E                     l5662:
  8074   00447E  2813               	incf	___fpclassifyf@e^0,w,c
  8075   004480  1014               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8076   004482  A4D8               	btfss	status,2,c
  8077   004484  EF46  F022         	goto	u7361
  8078   004488  EF48  F022         	goto	u7360
  8079   00448C                     u7361:
  8080   00448C  EF6A  F022         	goto	l5668
  8081   004490                     u7360:
  8082   004490  C015  F00F         	movff	___fpclassifyf@u,??___fpclassifyf
  8083   004494  C016  F010         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8084   004498  C017  F011         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8085   00449C  C018  F012         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8086   0044A0  0E09               	movlw	9
  8087   0044A2                     u7375:
  8088   0044A2  90D8               	bcf	status,0,c
  8089   0044A4  360F               	rlcf	??___fpclassifyf^0,f,c
  8090   0044A6  3610               	rlcf	(??___fpclassifyf+1)^0,f,c
  8091   0044A8  3611               	rlcf	(??___fpclassifyf+2)^0,f,c
  8092   0044AA  3612               	rlcf	(??___fpclassifyf+3)^0,f,c
  8093   0044AC  2EE8               	decfsz	wreg,f,c
  8094   0044AE  EF51  F022         	goto	u7375
  8095   0044B2  500F               	movf	??___fpclassifyf^0,w,c
  8096   0044B4  1010               	iorwf	(??___fpclassifyf+1)^0,w,c
  8097   0044B6  1011               	iorwf	(??___fpclassifyf+2)^0,w,c
  8098   0044B8  1012               	iorwf	(??___fpclassifyf+3)^0,w,c
  8099   0044BA  B4D8               	btfsc	status,2,c
  8100   0044BC  EF62  F022         	goto	u7381
  8101   0044C0  EF65  F022         	goto	u7380
  8102   0044C4                     u7381:
  8103   0044C4  0E01               	movlw	1
  8104   0044C6  EF66  F022         	goto	u7390
  8105   0044CA                     u7380:
  8106   0044CA  0E00               	movlw	0
  8107   0044CC                     u7390:
  8108   0044CC  6E0B               	movwf	?___fpclassifyf^0,c
  8109   0044CE  6A0C               	clrf	(?___fpclassifyf+1)^0,c
  8110   0044D0  EF6E  F022         	goto	l959
  8111   0044D4                     l5668:
  8112   0044D4  0E00               	movlw	0
  8113   0044D6  6E0C               	movwf	(?___fpclassifyf+1)^0,c
  8114   0044D8  0E04               	movlw	4
  8115   0044DA  6E0B               	movwf	?___fpclassifyf^0,c
  8116   0044DC                     l959:
  8117   0044DC  0012               	return		;funcret
  8118   0044DE                     __end_of___fpclassifyf:
  8119                           	callstack 0
  8120                           
  8121 ;; *************** function ___fltol *****************
  8122 ;; Defined at:
  8123 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  f1              4   10[COMRAM] int 
  8126 ;; Auto vars:     Size  Location     Type
  8127 ;;  exp1            1   19[COMRAM] unsigned char 
  8128 ;;  sign1           1   18[COMRAM] unsigned char 
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  4   10[COMRAM] long 
  8131 ;; Registers used:
  8132 ;;		wreg, status,2, status,0
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8139 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8140 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8141 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8142 ;;Total ram usage:       10 bytes
  8143 ;; Hardware stack levels used: 1
  8144 ;; Hardware stack levels required when called: 3
  8145 ;; This function calls:
  8146 ;;		Nothing
  8147 ;; This function is called by:
  8148 ;;		_efgtoa
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152                           	psect	text29
  8153   0041D6                     __ptext29:
  8154                           	callstack 0
  8155   0041D6                     ___fltol:
  8156                           	callstack 23
  8157   0041D6  340D               	rlcf	(___fltol@f1+2)^0,w,c
  8158   0041D8  340E               	rlcf	(___fltol@f1+3)^0,w,c
  8159   0041DA  6E14               	movwf	___fltol@exp1^0,c
  8160   0041DC  5014               	movf	___fltol@exp1^0,w,c
  8161   0041DE  A4D8               	btfss	status,2,c
  8162   0041E0  EFF4  F020         	goto	u7241
  8163   0041E4  EFF6  F020         	goto	u7240
  8164   0041E8                     u7241:
  8165   0041E8  EF00  F021         	goto	l5598
  8166   0041EC                     u7240:
  8167   0041EC                     l5594:
  8168   0041EC  0E00               	movlw	0
  8169   0041EE  6E0B               	movwf	?___fltol^0,c
  8170   0041F0  0E00               	movlw	0
  8171   0041F2  6E0C               	movwf	(?___fltol+1)^0,c
  8172   0041F4  0E00               	movlw	0
  8173   0041F6  6E0D               	movwf	(?___fltol+2)^0,c
  8174   0041F8  0E00               	movlw	0
  8175   0041FA  6E0E               	movwf	(?___fltol+3)^0,c
  8176   0041FC  EF6D  F021         	goto	l447
  8177   004200                     l5598:
  8178   004200  C00B  F00F         	movff	___fltol@f1,??___fltol
  8179   004204  C00C  F010         	movff	___fltol@f1+1,??___fltol+1
  8180   004208  C00D  F011         	movff	___fltol@f1+2,??___fltol+2
  8181   00420C  C00E  F012         	movff	___fltol@f1+3,??___fltol+3
  8182   004210  0E20               	movlw	32
  8183   004212  EF10  F021         	goto	u7250
  8184   004216                     u7255:
  8185   004216  90D8               	bcf	status,0,c
  8186   004218  3212               	rrcf	(??___fltol+3)^0,f,c
  8187   00421A  3211               	rrcf	(??___fltol+2)^0,f,c
  8188   00421C  3210               	rrcf	(??___fltol+1)^0,f,c
  8189   00421E  320F               	rrcf	??___fltol^0,f,c
  8190   004220                     u7250:
  8191   004220  2EE8               	decfsz	wreg,f,c
  8192   004222  EF0B  F021         	goto	u7255
  8193   004226  500F               	movf	??___fltol^0,w,c
  8194   004228  6E13               	movwf	___fltol@sign1^0,c
  8195   00422A  8E0D               	bsf	(___fltol@f1+2)^0,7,c
  8196   00422C  0EFF               	movlw	255
  8197   00422E  160B               	andwf	___fltol@f1^0,f,c
  8198   004230  0EFF               	movlw	255
  8199   004232  160C               	andwf	(___fltol@f1+1)^0,f,c
  8200   004234  0EFF               	movlw	255
  8201   004236  160D               	andwf	(___fltol@f1+2)^0,f,c
  8202   004238  0E00               	movlw	0
  8203   00423A  160E               	andwf	(___fltol@f1+3)^0,f,c
  8204   00423C  0E96               	movlw	150
  8205   00423E  5E14               	subwf	___fltol@exp1^0,f,c
  8206   004240  BE14               	btfsc	___fltol@exp1^0,7,c
  8207   004242  EF27  F021         	goto	u7260
  8208   004246  EF25  F021         	goto	u7261
  8209   00424A                     u7261:
  8210   00424A  EF3D  F021         	goto	l5618
  8211   00424E                     u7260:
  8212   00424E  5014               	movf	___fltol@exp1^0,w,c
  8213   004250  0A80               	xorlw	128
  8214   004252  0F97               	addlw	151
  8215   004254  B0D8               	btfsc	status,0,c
  8216   004256  EF2F  F021         	goto	u7271
  8217   00425A  EF31  F021         	goto	u7270
  8218   00425E                     u7271:
  8219   00425E  EF33  F021         	goto	l5614
  8220   004262                     u7270:
  8221   004262  EFF6  F020         	goto	l5594
  8222   004266                     l5614:
  8223   004266  90D8               	bcf	status,0,c
  8224   004268  320E               	rrcf	(___fltol@f1+3)^0,f,c
  8225   00426A  320D               	rrcf	(___fltol@f1+2)^0,f,c
  8226   00426C  320C               	rrcf	(___fltol@f1+1)^0,f,c
  8227   00426E  320B               	rrcf	___fltol@f1^0,f,c
  8228   004270  3E14               	incfsz	___fltol@exp1^0,f,c
  8229   004272  EF33  F021         	goto	l5614
  8230   004276  EF55  F021         	goto	l5628
  8231   00427A                     l5618:
  8232   00427A  0E1F               	movlw	31
  8233   00427C  6414               	cpfsgt	___fltol@exp1^0,c
  8234   00427E  EF43  F021         	goto	u7281
  8235   004282  EF45  F021         	goto	u7280
  8236   004286                     u7281:
  8237   004286  EF4D  F021         	goto	l5626
  8238   00428A                     u7280:
  8239   00428A  EFF6  F020         	goto	l5594
  8240   00428E                     l5624:
  8241   00428E  90D8               	bcf	status,0,c
  8242   004290  360B               	rlcf	___fltol@f1^0,f,c
  8243   004292  360C               	rlcf	(___fltol@f1+1)^0,f,c
  8244   004294  360D               	rlcf	(___fltol@f1+2)^0,f,c
  8245   004296  360E               	rlcf	(___fltol@f1+3)^0,f,c
  8246   004298  0614               	decf	___fltol@exp1^0,f,c
  8247   00429A                     l5626:
  8248   00429A  5014               	movf	___fltol@exp1^0,w,c
  8249   00429C  A4D8               	btfss	status,2,c
  8250   00429E  EF53  F021         	goto	u7291
  8251   0042A2  EF55  F021         	goto	u7290
  8252   0042A6                     u7291:
  8253   0042A6  EF47  F021         	goto	l5624
  8254   0042AA                     u7290:
  8255   0042AA                     l5628:
  8256   0042AA  5013               	movf	___fltol@sign1^0,w,c
  8257   0042AC  B4D8               	btfsc	status,2,c
  8258   0042AE  EF5B  F021         	goto	u7301
  8259   0042B2  EF5D  F021         	goto	u7300
  8260   0042B6                     u7301:
  8261   0042B6  EF65  F021         	goto	l5632
  8262   0042BA                     u7300:
  8263   0042BA  1E0E               	comf	(___fltol@f1+3)^0,f,c
  8264   0042BC  1E0D               	comf	(___fltol@f1+2)^0,f,c
  8265   0042BE  1E0C               	comf	(___fltol@f1+1)^0,f,c
  8266   0042C0  6C0B               	negf	___fltol@f1^0,c
  8267   0042C2  0E00               	movlw	0
  8268   0042C4  220C               	addwfc	(___fltol@f1+1)^0,f,c
  8269   0042C6  220D               	addwfc	(___fltol@f1+2)^0,f,c
  8270   0042C8  220E               	addwfc	(___fltol@f1+3)^0,f,c
  8271   0042CA                     l5632:
  8272   0042CA  C00B  F00B         	movff	___fltol@f1,?___fltol
  8273   0042CE  C00C  F00C         	movff	___fltol@f1+1,?___fltol+1
  8274   0042D2  C00D  F00D         	movff	___fltol@f1+2,?___fltol+2
  8275   0042D6  C00E  F00E         	movff	___fltol@f1+3,?___fltol+3
  8276   0042DA                     l447:
  8277   0042DA  0012               	return		;funcret
  8278   0042DC                     __end_of___fltol:
  8279                           	callstack 0
  8280                           
  8281 ;; *************** function ___flsub *****************
  8282 ;; Defined at:
  8283 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  b               4   35[COMRAM] long 
  8286 ;;  a               4   39[COMRAM] long 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  4   35[COMRAM] long 
  8291 ;; Registers used:
  8292 ;;		wreg, status,2, status,0, cstack
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8298 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8301 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8302 ;;Total ram usage:        8 bytes
  8303 ;; Hardware stack levels used: 1
  8304 ;; Hardware stack levels required when called: 4
  8305 ;; This function calls:
  8306 ;;		___fladd
  8307 ;; This function is called by:
  8308 ;;		_efgtoa
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           	psect	text30
  8313   004D16                     __ptext30:
  8314                           	callstack 0
  8315   004D16                     ___flsub:
  8316                           	callstack 22
  8317   004D16  0E00               	movlw	0
  8318   004D18  1A28               	xorwf	___flsub@a^0,f,c
  8319   004D1A  0E00               	movlw	0
  8320   004D1C  1A29               	xorwf	(___flsub@a+1)^0,f,c
  8321   004D1E  0E00               	movlw	0
  8322   004D20  1A2A               	xorwf	(___flsub@a+2)^0,f,c
  8323   004D22  0E80               	movlw	128
  8324   004D24  1A2B               	xorwf	(___flsub@a+3)^0,f,c
  8325   004D26  C024  F00B         	movff	___flsub@b,___fladd@b
  8326   004D2A  C025  F00C         	movff	___flsub@b+1,___fladd@b+1
  8327   004D2E  C026  F00D         	movff	___flsub@b+2,___fladd@b+2
  8328   004D32  C027  F00E         	movff	___flsub@b+3,___fladd@b+3
  8329   004D36  C028  F00F         	movff	___flsub@a,___fladd@a
  8330   004D3A  C029  F010         	movff	___flsub@a+1,___fladd@a+1
  8331   004D3E  C02A  F011         	movff	___flsub@a+2,___fladd@a+2
  8332   004D42  C02B  F012         	movff	___flsub@a+3,___fladd@a+3
  8333   004D46  ECA5  F015         	call	___fladd	;wreg free
  8334   004D4A  C00B  F024         	movff	?___fladd,?___flsub
  8335   004D4E  C00C  F025         	movff	?___fladd+1,?___flsub+1
  8336   004D52  C00D  F026         	movff	?___fladd+2,?___flsub+2
  8337   004D56  C00E  F027         	movff	?___fladd+3,?___flsub+3
  8338   004D5A  0012               	return		;funcret
  8339   004D5C                     __end_of___flsub:
  8340                           	callstack 0
  8341                           
  8342 ;; *************** function ___fladd *****************
  8343 ;; Defined at:
  8344 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  b               4   10[COMRAM] long 
  8347 ;;  a               4   14[COMRAM] long 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;  grs             1   25[COMRAM] unsigned char 
  8350 ;;  bexp            1   24[COMRAM] unsigned char 
  8351 ;;  aexp            1   23[COMRAM] unsigned char 
  8352 ;;  signs           1   22[COMRAM] unsigned char 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  4   10[COMRAM] unsigned char 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8362 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8363 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8365 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8366 ;;Total ram usage:       16 bytes
  8367 ;; Hardware stack levels used: 1
  8368 ;; Hardware stack levels required when called: 3
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		___flsub
  8373 ;;		_efgtoa
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text31
  8378   002B4A                     __ptext31:
  8379                           	callstack 0
  8380   002B4A                     ___fladd:
  8381                           	callstack 22
  8382   002B4A  500E               	movf	(___fladd@b+3)^0,w,c
  8383   002B4C  0B80               	andlw	128
  8384   002B4E  6E17               	movwf	___fladd@signs^0,c
  8385   002B50  500E               	movf	(___fladd@b+3)^0,w,c
  8386   002B52  240E               	addwf	(___fladd@b+3)^0,w,c
  8387   002B54  6E19               	movwf	___fladd@bexp^0,c
  8388   002B56  AE0D               	btfss	(___fladd@b+2)^0,7,c
  8389   002B58  EFB0  F015         	goto	u6331
  8390   002B5C  EFB2  F015         	goto	u6330
  8391   002B60                     u6331:
  8392   002B60  EFB3  F015         	goto	l5062
  8393   002B64                     u6330:
  8394   002B64  8019               	bsf	___fladd@bexp^0,0,c
  8395   002B66                     l5062:
  8396   002B66  5019               	movf	___fladd@bexp^0,w,c
  8397   002B68  B4D8               	btfsc	status,2,c
  8398   002B6A  EFB9  F015         	goto	u6341
  8399   002B6E  EFBB  F015         	goto	u6340
  8400   002B72                     u6341:
  8401   002B72  EFD0  F015         	goto	l5072
  8402   002B76                     u6340:
  8403   002B76  2819               	incf	___fladd@bexp^0,w,c
  8404   002B78  A4D8               	btfss	status,2,c
  8405   002B7A  EFC1  F015         	goto	u6351
  8406   002B7E  EFC3  F015         	goto	u6350
  8407   002B82                     u6351:
  8408   002B82  EFCB  F015         	goto	l5068
  8409   002B86                     u6350:
  8410   002B86  0E00               	movlw	0
  8411   002B88  6E0B               	movwf	___fladd@b^0,c
  8412   002B8A  0E00               	movlw	0
  8413   002B8C  6E0C               	movwf	(___fladd@b+1)^0,c
  8414   002B8E  0E00               	movlw	0
  8415   002B90  6E0D               	movwf	(___fladd@b+2)^0,c
  8416   002B92  0E00               	movlw	0
  8417   002B94  6E0E               	movwf	(___fladd@b+3)^0,c
  8418   002B96                     l5068:
  8419   002B96  8E0D               	bsf	(___fladd@b+2)^0,7,c
  8420   002B98  0E00               	movlw	0
  8421   002B9A  6E0E               	movwf	(___fladd@b+3)^0,c
  8422   002B9C  EFD8  F015         	goto	l5074
  8423   002BA0                     l5072:
  8424   002BA0  0E00               	movlw	0
  8425   002BA2  6E0B               	movwf	___fladd@b^0,c
  8426   002BA4  0E00               	movlw	0
  8427   002BA6  6E0C               	movwf	(___fladd@b+1)^0,c
  8428   002BA8  0E00               	movlw	0
  8429   002BAA  6E0D               	movwf	(___fladd@b+2)^0,c
  8430   002BAC  0E00               	movlw	0
  8431   002BAE  6E0E               	movwf	(___fladd@b+3)^0,c
  8432   002BB0                     l5074:
  8433   002BB0  5012               	movf	(___fladd@a+3)^0,w,c
  8434   002BB2  0B80               	andlw	128
  8435   002BB4  6E18               	movwf	___fladd@aexp^0,c
  8436   002BB6  5017               	movf	___fladd@signs^0,w,c
  8437   002BB8  1818               	xorwf	___fladd@aexp^0,w,c
  8438   002BBA  B4D8               	btfsc	status,2,c
  8439   002BBC  EFE2  F015         	goto	u6361
  8440   002BC0  EFE4  F015         	goto	u6360
  8441   002BC4                     u6361:
  8442   002BC4  EFE5  F015         	goto	l5080
  8443   002BC8                     u6360:
  8444   002BC8  8C17               	bsf	___fladd@signs^0,6,c
  8445   002BCA                     l5080:
  8446   002BCA  5012               	movf	(___fladd@a+3)^0,w,c
  8447   002BCC  2412               	addwf	(___fladd@a+3)^0,w,c
  8448   002BCE  6E18               	movwf	___fladd@aexp^0,c
  8449   002BD0  AE11               	btfss	(___fladd@a+2)^0,7,c
  8450   002BD2  EFED  F015         	goto	u6371
  8451   002BD6  EFEF  F015         	goto	u6370
  8452   002BDA                     u6371:
  8453   002BDA  EFF0  F015         	goto	l5086
  8454   002BDE                     u6370:
  8455   002BDE  8018               	bsf	___fladd@aexp^0,0,c
  8456   002BE0                     l5086:
  8457   002BE0  5018               	movf	___fladd@aexp^0,w,c
  8458   002BE2  B4D8               	btfsc	status,2,c
  8459   002BE4  EFF6  F015         	goto	u6381
  8460   002BE8  EFF8  F015         	goto	u6380
  8461   002BEC                     u6381:
  8462   002BEC  EF0D  F016         	goto	l5096
  8463   002BF0                     u6380:
  8464   002BF0  2818               	incf	___fladd@aexp^0,w,c
  8465   002BF2  A4D8               	btfss	status,2,c
  8466   002BF4  EFFE  F015         	goto	u6391
  8467   002BF8  EF00  F016         	goto	u6390
  8468   002BFC                     u6391:
  8469   002BFC  EF08  F016         	goto	l5092
  8470   002C00                     u6390:
  8471   002C00  0E00               	movlw	0
  8472   002C02  6E0F               	movwf	___fladd@a^0,c
  8473   002C04  0E00               	movlw	0
  8474   002C06  6E10               	movwf	(___fladd@a+1)^0,c
  8475   002C08  0E00               	movlw	0
  8476   002C0A  6E11               	movwf	(___fladd@a+2)^0,c
  8477   002C0C  0E00               	movlw	0
  8478   002C0E  6E12               	movwf	(___fladd@a+3)^0,c
  8479   002C10                     l5092:
  8480   002C10  8E11               	bsf	(___fladd@a+2)^0,7,c
  8481   002C12  0E00               	movlw	0
  8482   002C14  6E12               	movwf	(___fladd@a+3)^0,c
  8483   002C16  EF15  F016         	goto	l5098
  8484   002C1A                     l5096:
  8485   002C1A  0E00               	movlw	0
  8486   002C1C  6E0F               	movwf	___fladd@a^0,c
  8487   002C1E  0E00               	movlw	0
  8488   002C20  6E10               	movwf	(___fladd@a+1)^0,c
  8489   002C22  0E00               	movlw	0
  8490   002C24  6E11               	movwf	(___fladd@a+2)^0,c
  8491   002C26  0E00               	movlw	0
  8492   002C28  6E12               	movwf	(___fladd@a+3)^0,c
  8493   002C2A                     l5098:
  8494   002C2A  5019               	movf	___fladd@bexp^0,w,c
  8495   002C2C  5C18               	subwf	___fladd@aexp^0,w,c
  8496   002C2E  B0D8               	btfsc	status,0,c
  8497   002C30  EF1C  F016         	goto	u6401
  8498   002C34  EF1E  F016         	goto	u6400
  8499   002C38                     u6401:
  8500   002C38  EF45  F016         	goto	l5134
  8501   002C3C                     u6400:
  8502   002C3C  AC17               	btfss	___fladd@signs^0,6,c
  8503   002C3E  EF23  F016         	goto	u6411
  8504   002C42  EF25  F016         	goto	u6410
  8505   002C46                     u6411:
  8506   002C46  EF27  F016         	goto	l5104
  8507   002C4A                     u6410:
  8508   002C4A  0E80               	movlw	128
  8509   002C4C  1A17               	xorwf	___fladd@signs^0,f,c
  8510   002C4E                     l5104:
  8511   002C4E  C019  F01A         	movff	___fladd@bexp,___fladd@grs
  8512   002C52  C018  F019         	movff	___fladd@aexp,___fladd@bexp
  8513   002C56  C01A  F018         	movff	___fladd@grs,___fladd@aexp
  8514   002C5A  C00B  F01A         	movff	___fladd@b,___fladd@grs
  8515   002C5E  C00F  F00B         	movff	___fladd@a,___fladd@b
  8516   002C62  C01A  F00F         	movff	___fladd@grs,___fladd@a
  8517   002C66  C00C  F01A         	movff	___fladd@b+1,___fladd@grs
  8518   002C6A  C010  F00C         	movff	___fladd@a+1,___fladd@b+1
  8519   002C6E  C01A  F010         	movff	___fladd@grs,___fladd@a+1
  8520   002C72  C00D  F01A         	movff	___fladd@b+2,___fladd@grs
  8521   002C76  C011  F00D         	movff	___fladd@a+2,___fladd@b+2
  8522   002C7A  C01A  F011         	movff	___fladd@grs,___fladd@a+2
  8523   002C7E  C00E  F01A         	movff	___fladd@b+3,___fladd@grs
  8524   002C82  C012  F00E         	movff	___fladd@a+3,___fladd@b+3
  8525   002C86  C01A  F012         	movff	___fladd@grs,___fladd@a+3
  8526   002C8A                     l5134:
  8527   002C8A  0E00               	movlw	0
  8528   002C8C  6E1A               	movwf	___fladd@grs^0,c
  8529   002C8E  5019               	movf	___fladd@bexp^0,w,c
  8530   002C90  C018  F013         	movff	___fladd@aexp,??___fladd
  8531   002C94  6A14               	clrf	(??___fladd+1)^0,c
  8532   002C96  5E13               	subwf	??___fladd^0,f,c
  8533   002C98  0E00               	movlw	0
  8534   002C9A  5A14               	subwfb	(??___fladd+1)^0,f,c
  8535   002C9C  BE14               	btfsc	(??___fladd+1)^0,7,c
  8536   002C9E  EF5A  F016         	goto	u6421
  8537   002CA2  5014               	movf	(??___fladd+1)^0,w,c
  8538   002CA4  E109               	bnz	u6420
  8539   002CA6  0E1A               	movlw	26
  8540   002CA8  5C13               	subwf	??___fladd^0,w,c
  8541   002CAA  A0D8               	btfss	status,0,c
  8542   002CAC  EF5A  F016         	goto	u6421
  8543   002CB0  EF5C  F016         	goto	u6420
  8544   002CB4                     u6421:
  8545   002CB4  EF93  F016         	goto	l679
  8546   002CB8                     u6420:
  8547   002CB8  500B               	movf	___fladd@b^0,w,c
  8548   002CBA  100C               	iorwf	(___fladd@b+1)^0,w,c
  8549   002CBC  100D               	iorwf	(___fladd@b+2)^0,w,c
  8550   002CBE  100E               	iorwf	(___fladd@b+3)^0,w,c
  8551   002CC0  A4D8               	btfss	status,2,c
  8552   002CC2  EF65  F016         	goto	u6431
  8553   002CC6  EF68  F016         	goto	u6430
  8554   002CCA                     u6431:
  8555   002CCA  0E01               	movlw	1
  8556   002CCC  EF69  F016         	goto	u6440
  8557   002CD0                     u6430:
  8558   002CD0  0E00               	movlw	0
  8559   002CD2                     u6440:
  8560   002CD2  6E1A               	movwf	___fladd@grs^0,c
  8561   002CD4  0E00               	movlw	0
  8562   002CD6  6E0B               	movwf	___fladd@b^0,c
  8563   002CD8  0E00               	movlw	0
  8564   002CDA  6E0C               	movwf	(___fladd@b+1)^0,c
  8565   002CDC  0E00               	movlw	0
  8566   002CDE  6E0D               	movwf	(___fladd@b+2)^0,c
  8567   002CE0  0E00               	movlw	0
  8568   002CE2  6E0E               	movwf	(___fladd@b+3)^0,c
  8569   002CE4  C018  F019         	movff	___fladd@aexp,___fladd@bexp
  8570   002CE8  EF9C  F016         	goto	l678
  8571   002CEC                     l680:
  8572   002CEC  A01A               	btfss	___fladd@grs^0,0,c
  8573   002CEE  EF7B  F016         	goto	u6451
  8574   002CF2  EF7D  F016         	goto	u6450
  8575   002CF6                     u6451:
  8576   002CF6  EF83  F016         	goto	l5146
  8577   002CFA                     u6450:
  8578   002CFA  90D8               	bcf	status,0,c
  8579   002CFC  301A               	rrcf	___fladd@grs^0,w,c
  8580   002CFE  0901               	iorlw	1
  8581   002D00  6E1A               	movwf	___fladd@grs^0,c
  8582   002D02  EF85  F016         	goto	l5148
  8583   002D06                     l5146:
  8584   002D06  90D8               	bcf	status,0,c
  8585   002D08  321A               	rrcf	___fladd@grs^0,f,c
  8586   002D0A                     l5148:
  8587   002D0A  A00B               	btfss	___fladd@b^0,0,c
  8588   002D0C  EF8A  F016         	goto	u6461
  8589   002D10  EF8C  F016         	goto	u6460
  8590   002D14                     u6461:
  8591   002D14  EF8D  F016         	goto	l5152
  8592   002D18                     u6460:
  8593   002D18  8E1A               	bsf	___fladd@grs^0,7,c
  8594   002D1A                     l5152:
  8595   002D1A  340E               	rlcf	(___fladd@b+3)^0,w,c
  8596   002D1C  320E               	rrcf	(___fladd@b+3)^0,f,c
  8597   002D1E  320D               	rrcf	(___fladd@b+2)^0,f,c
  8598   002D20  320C               	rrcf	(___fladd@b+1)^0,f,c
  8599   002D22  320B               	rrcf	___fladd@b^0,f,c
  8600   002D24  2A19               	incf	___fladd@bexp^0,f,c
  8601   002D26                     l679:
  8602   002D26  5018               	movf	___fladd@aexp^0,w,c
  8603   002D28  5C19               	subwf	___fladd@bexp^0,w,c
  8604   002D2A  A0D8               	btfss	status,0,c
  8605   002D2C  EF9A  F016         	goto	u6471
  8606   002D30  EF9C  F016         	goto	u6470
  8607   002D34                     u6471:
  8608   002D34  EF76  F016         	goto	l680
  8609   002D38                     u6470:
  8610   002D38                     l678:
  8611   002D38  BC17               	btfsc	___fladd@signs^0,6,c
  8612   002D3A  EFA1  F016         	goto	u6481
  8613   002D3E  EFA3  F016         	goto	u6480
  8614   002D42                     u6481:
  8615   002D42  EFE3  F016         	goto	l5180
  8616   002D46                     u6480:
  8617   002D46  5019               	movf	___fladd@bexp^0,w,c
  8618   002D48  A4D8               	btfss	status,2,c
  8619   002D4A  EFA9  F016         	goto	u6491
  8620   002D4E  EFAB  F016         	goto	u6490
  8621   002D52                     u6491:
  8622   002D52  EFB5  F016         	goto	l5162
  8623   002D56                     u6490:
  8624   002D56  0E00               	movlw	0
  8625   002D58  6E0B               	movwf	?___fladd^0,c
  8626   002D5A  0E00               	movlw	0
  8627   002D5C  6E0C               	movwf	(?___fladd+1)^0,c
  8628   002D5E  0E00               	movlw	0
  8629   002D60  6E0D               	movwf	(?___fladd+2)^0,c
  8630   002D62  0E00               	movlw	0
  8631   002D64  6E0E               	movwf	(?___fladd+3)^0,c
  8632   002D66  EF04  F018         	goto	l687
  8633   002D6A                     l5162:
  8634   002D6A  500F               	movf	___fladd@a^0,w,c
  8635   002D6C  260B               	addwf	___fladd@b^0,f,c
  8636   002D6E  5010               	movf	(___fladd@a+1)^0,w,c
  8637   002D70  220C               	addwfc	(___fladd@b+1)^0,f,c
  8638   002D72  5011               	movf	(___fladd@a+2)^0,w,c
  8639   002D74  220D               	addwfc	(___fladd@b+2)^0,f,c
  8640   002D76  5012               	movf	(___fladd@a+3)^0,w,c
  8641   002D78  220E               	addwfc	(___fladd@b+3)^0,f,c
  8642   002D7A  A00E               	btfss	(___fladd@b+3)^0,0,c
  8643   002D7C  EFC2  F016         	goto	u6501
  8644   002D80  EFC4  F016         	goto	u6500
  8645   002D84                     u6501:
  8646   002D84  EF70  F017         	goto	l5216
  8647   002D88                     u6500:
  8648   002D88  A01A               	btfss	___fladd@grs^0,0,c
  8649   002D8A  EFC9  F016         	goto	u6511
  8650   002D8E  EFCB  F016         	goto	u6510
  8651   002D92                     u6511:
  8652   002D92  EFD1  F016         	goto	l5170
  8653   002D96                     u6510:
  8654   002D96  90D8               	bcf	status,0,c
  8655   002D98  301A               	rrcf	___fladd@grs^0,w,c
  8656   002D9A  0901               	iorlw	1
  8657   002D9C  6E1A               	movwf	___fladd@grs^0,c
  8658   002D9E  EFD3  F016         	goto	l5172
  8659   002DA2                     l5170:
  8660   002DA2  90D8               	bcf	status,0,c
  8661   002DA4  321A               	rrcf	___fladd@grs^0,f,c
  8662   002DA6                     l5172:
  8663   002DA6  A00B               	btfss	___fladd@b^0,0,c
  8664   002DA8  EFD8  F016         	goto	u6521
  8665   002DAC  EFDA  F016         	goto	u6520
  8666   002DB0                     u6521:
  8667   002DB0  EFDB  F016         	goto	l5176
  8668   002DB4                     u6520:
  8669   002DB4  8E1A               	bsf	___fladd@grs^0,7,c
  8670   002DB6                     l5176:
  8671   002DB6  340E               	rlcf	(___fladd@b+3)^0,w,c
  8672   002DB8  320E               	rrcf	(___fladd@b+3)^0,f,c
  8673   002DBA  320D               	rrcf	(___fladd@b+2)^0,f,c
  8674   002DBC  320C               	rrcf	(___fladd@b+1)^0,f,c
  8675   002DBE  320B               	rrcf	___fladd@b^0,f,c
  8676   002DC0  2A19               	incf	___fladd@bexp^0,f,c
  8677   002DC2  EF70  F017         	goto	l5216
  8678   002DC6                     l5180:
  8679   002DC6  500F               	movf	___fladd@a^0,w,c
  8680   002DC8  5C0B               	subwf	___fladd@b^0,w,c
  8681   002DCA  5010               	movf	(___fladd@a+1)^0,w,c
  8682   002DCC  580C               	subwfb	(___fladd@b+1)^0,w,c
  8683   002DCE  5011               	movf	(___fladd@a+2)^0,w,c
  8684   002DD0  580D               	subwfb	(___fladd@b+2)^0,w,c
  8685   002DD2  500E               	movf	(___fladd@b+3)^0,w,c
  8686   002DD4  0A80               	xorlw	128
  8687   002DD6  6E13               	movwf	??___fladd^0,c
  8688   002DD8  5012               	movf	(___fladd@a+3)^0,w,c
  8689   002DDA  0A80               	xorlw	128
  8690   002DDC  5813               	subwfb	??___fladd^0,w,c
  8691   002DDE  B0D8               	btfsc	status,0,c
  8692   002DE0  EFF4  F016         	goto	u6531
  8693   002DE4  EFF6  F016         	goto	u6530
  8694   002DE8                     u6531:
  8695   002DE8  EF21  F017         	goto	l5190
  8696   002DEC                     u6530:
  8697   002DEC  500B               	movf	___fladd@b^0,w,c
  8698   002DEE  5C0F               	subwf	___fladd@a^0,w,c
  8699   002DF0  6E13               	movwf	??___fladd^0,c
  8700   002DF2  500C               	movf	(___fladd@b+1)^0,w,c
  8701   002DF4  5810               	subwfb	(___fladd@a+1)^0,w,c
  8702   002DF6  6E14               	movwf	(??___fladd+1)^0,c
  8703   002DF8  500D               	movf	(___fladd@b+2)^0,w,c
  8704   002DFA  5811               	subwfb	(___fladd@a+2)^0,w,c
  8705   002DFC  6E15               	movwf	(??___fladd+2)^0,c
  8706   002DFE  500E               	movf	(___fladd@b+3)^0,w,c
  8707   002E00  5812               	subwfb	(___fladd@a+3)^0,w,c
  8708   002E02  6E16               	movwf	(??___fladd+3)^0,c
  8709   002E04  0EFF               	movlw	255
  8710   002E06  2413               	addwf	??___fladd^0,w,c
  8711   002E08  6E0B               	movwf	___fladd@b^0,c
  8712   002E0A  0EFF               	movlw	255
  8713   002E0C  2014               	addwfc	(??___fladd+1)^0,w,c
  8714   002E0E  6E0C               	movwf	(___fladd@b+1)^0,c
  8715   002E10  0EFF               	movlw	255
  8716   002E12  2015               	addwfc	(??___fladd+2)^0,w,c
  8717   002E14  6E0D               	movwf	(___fladd@b+2)^0,c
  8718   002E16  0EFF               	movlw	255
  8719   002E18  2016               	addwfc	(??___fladd+3)^0,w,c
  8720   002E1A  6E0E               	movwf	(___fladd@b+3)^0,c
  8721   002E1C  0E80               	movlw	128
  8722   002E1E  1A17               	xorwf	___fladd@signs^0,f,c
  8723   002E20  6C1A               	negf	___fladd@grs^0,c
  8724   002E22  501A               	movf	___fladd@grs^0,w,c
  8725   002E24  A4D8               	btfss	status,2,c
  8726   002E26  EF17  F017         	goto	u6541
  8727   002E2A  EF19  F017         	goto	u6540
  8728   002E2E                     u6541:
  8729   002E2E  EF29  F017         	goto	l695
  8730   002E32                     u6540:
  8731   002E32  0E01               	movlw	1
  8732   002E34  260B               	addwf	___fladd@b^0,f,c
  8733   002E36  0E00               	movlw	0
  8734   002E38  220C               	addwfc	(___fladd@b+1)^0,f,c
  8735   002E3A  220D               	addwfc	(___fladd@b+2)^0,f,c
  8736   002E3C  220E               	addwfc	(___fladd@b+3)^0,f,c
  8737   002E3E  EF29  F017         	goto	l695
  8738   002E42                     l5190:
  8739   002E42  500F               	movf	___fladd@a^0,w,c
  8740   002E44  5E0B               	subwf	___fladd@b^0,f,c
  8741   002E46  5010               	movf	(___fladd@a+1)^0,w,c
  8742   002E48  5A0C               	subwfb	(___fladd@b+1)^0,f,c
  8743   002E4A  5011               	movf	(___fladd@a+2)^0,w,c
  8744   002E4C  5A0D               	subwfb	(___fladd@b+2)^0,f,c
  8745   002E4E  5012               	movf	(___fladd@a+3)^0,w,c
  8746   002E50  5A0E               	subwfb	(___fladd@b+3)^0,f,c
  8747   002E52                     l695:
  8748   002E52  500B               	movf	___fladd@b^0,w,c
  8749   002E54  100C               	iorwf	(___fladd@b+1)^0,w,c
  8750   002E56  100D               	iorwf	(___fladd@b+2)^0,w,c
  8751   002E58  100E               	iorwf	(___fladd@b+3)^0,w,c
  8752   002E5A  A4D8               	btfss	status,2,c
  8753   002E5C  EF32  F017         	goto	u6551
  8754   002E60  EF34  F017         	goto	u6550
  8755   002E64                     u6551:
  8756   002E64  EF69  F017         	goto	l5214
  8757   002E68                     u6550:
  8758   002E68  501A               	movf	___fladd@grs^0,w,c
  8759   002E6A  A4D8               	btfss	status,2,c
  8760   002E6C  EF3A  F017         	goto	u6561
  8761   002E70  EF3C  F017         	goto	u6560
  8762   002E74                     u6561:
  8763   002E74  EF69  F017         	goto	l5214
  8764   002E78                     u6560:
  8765   002E78  0E00               	movlw	0
  8766   002E7A  6E0B               	movwf	?___fladd^0,c
  8767   002E7C  0E00               	movlw	0
  8768   002E7E  6E0C               	movwf	(?___fladd+1)^0,c
  8769   002E80  0E00               	movlw	0
  8770   002E82  6E0D               	movwf	(?___fladd+2)^0,c
  8771   002E84  0E00               	movlw	0
  8772   002E86  6E0E               	movwf	(?___fladd+3)^0,c
  8773   002E88  EF04  F018         	goto	l687
  8774   002E8C                     l5198:
  8775   002E8C  90D8               	bcf	status,0,c
  8776   002E8E  360B               	rlcf	___fladd@b^0,f,c
  8777   002E90  360C               	rlcf	(___fladd@b+1)^0,f,c
  8778   002E92  360D               	rlcf	(___fladd@b+2)^0,f,c
  8779   002E94  360E               	rlcf	(___fladd@b+3)^0,f,c
  8780   002E96  AE1A               	btfss	___fladd@grs^0,7,c
  8781   002E98  EF50  F017         	goto	u6571
  8782   002E9C  EF52  F017         	goto	u6570
  8783   002EA0                     u6571:
  8784   002EA0  EF53  F017         	goto	l5204
  8785   002EA4                     u6570:
  8786   002EA4  800B               	bsf	___fladd@b^0,0,c
  8787   002EA6                     l5204:
  8788   002EA6  A01A               	btfss	___fladd@grs^0,0,c
  8789   002EA8  EF58  F017         	goto	u6581
  8790   002EAC  EF5A  F017         	goto	u6580
  8791   002EB0                     u6581:
  8792   002EB0  EF5E  F017         	goto	l5208
  8793   002EB4                     u6580:
  8794   002EB4  80D8               	bsf	status,0,c
  8795   002EB6  361A               	rlcf	___fladd@grs^0,f,c
  8796   002EB8  EF60  F017         	goto	l5210
  8797   002EBC                     l5208:
  8798   002EBC  90D8               	bcf	status,0,c
  8799   002EBE  361A               	rlcf	___fladd@grs^0,f,c
  8800   002EC0                     l5210:
  8801   002EC0  5019               	movf	___fladd@bexp^0,w,c
  8802   002EC2  B4D8               	btfsc	status,2,c
  8803   002EC4  EF66  F017         	goto	u6591
  8804   002EC8  EF68  F017         	goto	u6590
  8805   002ECC                     u6591:
  8806   002ECC  EF69  F017         	goto	l5214
  8807   002ED0                     u6590:
  8808   002ED0  0619               	decf	___fladd@bexp^0,f,c
  8809   002ED2                     l5214:
  8810   002ED2  AE0D               	btfss	(___fladd@b+2)^0,7,c
  8811   002ED4  EF6E  F017         	goto	u6601
  8812   002ED8  EF70  F017         	goto	u6600
  8813   002EDC                     u6601:
  8814   002EDC  EF46  F017         	goto	l5198
  8815   002EE0                     u6600:
  8816   002EE0                     l5216:
  8817   002EE0  0E00               	movlw	0
  8818   002EE2  6E18               	movwf	___fladd@aexp^0,c
  8819   002EE4  AE1A               	btfss	___fladd@grs^0,7,c
  8820   002EE6  EF77  F017         	goto	u6611
  8821   002EEA  EF79  F017         	goto	u6610
  8822   002EEE                     u6611:
  8823   002EEE  EF91  F017         	goto	l704
  8824   002EF2                     u6610:
  8825   002EF2  C01A  F013         	movff	___fladd@grs,??___fladd
  8826   002EF6  0E7F               	movlw	127
  8827   002EF8  1613               	andwf	??___fladd^0,f,c
  8828   002EFA  B4D8               	btfsc	status,2,c
  8829   002EFC  EF82  F017         	goto	u6621
  8830   002F00  EF84  F017         	goto	u6620
  8831   002F04                     u6621:
  8832   002F04  EF88  F017         	goto	l705
  8833   002F08                     u6620:
  8834   002F08                     l5222:
  8835   002F08  0E01               	movlw	1
  8836   002F0A  6E18               	movwf	___fladd@aexp^0,c
  8837   002F0C  EF91  F017         	goto	l704
  8838   002F10                     l705:
  8839   002F10  A00B               	btfss	___fladd@b^0,0,c
  8840   002F12  EF8D  F017         	goto	u6631
  8841   002F16  EF8F  F017         	goto	u6630
  8842   002F1A                     u6631:
  8843   002F1A  EF91  F017         	goto	l704
  8844   002F1E                     u6630:
  8845   002F1E  EF84  F017         	goto	l5222
  8846   002F22                     l704:
  8847   002F22  5018               	movf	___fladd@aexp^0,w,c
  8848   002F24  B4D8               	btfsc	status,2,c
  8849   002F26  EF97  F017         	goto	u6641
  8850   002F2A  EF99  F017         	goto	u6640
  8851   002F2E                     u6641:
  8852   002F2E  EFC4  F017         	goto	l5234
  8853   002F32                     u6640:
  8854   002F32  0E01               	movlw	1
  8855   002F34  260B               	addwf	___fladd@b^0,f,c
  8856   002F36  0E00               	movlw	0
  8857   002F38  220C               	addwfc	(___fladd@b+1)^0,f,c
  8858   002F3A  220D               	addwfc	(___fladd@b+2)^0,f,c
  8859   002F3C  220E               	addwfc	(___fladd@b+3)^0,f,c
  8860   002F3E  A00E               	btfss	(___fladd@b+3)^0,0,c
  8861   002F40  EFA4  F017         	goto	u6651
  8862   002F44  EFA6  F017         	goto	u6650
  8863   002F48                     u6651:
  8864   002F48  EFC4  F017         	goto	l5234
  8865   002F4C                     u6650:
  8866   002F4C  C00B  F013         	movff	___fladd@b,??___fladd
  8867   002F50  C00C  F014         	movff	___fladd@b+1,??___fladd+1
  8868   002F54  C00D  F015         	movff	___fladd@b+2,??___fladd+2
  8869   002F58  C00E  F016         	movff	___fladd@b+3,??___fladd+3
  8870   002F5C  3416               	rlcf	(??___fladd+3)^0,w,c
  8871   002F5E  3216               	rrcf	(??___fladd+3)^0,f,c
  8872   002F60  3215               	rrcf	(??___fladd+2)^0,f,c
  8873   002F62  3214               	rrcf	(??___fladd+1)^0,f,c
  8874   002F64  3213               	rrcf	??___fladd^0,f,c
  8875   002F66  C013  F00B         	movff	??___fladd,___fladd@b
  8876   002F6A  C014  F00C         	movff	??___fladd+1,___fladd@b+1
  8877   002F6E  C015  F00D         	movff	??___fladd+2,___fladd@b+2
  8878   002F72  C016  F00E         	movff	??___fladd+3,___fladd@b+3
  8879   002F76  2819               	incf	___fladd@bexp^0,w,c
  8880   002F78  B4D8               	btfsc	status,2,c
  8881   002F7A  EFC1  F017         	goto	u6661
  8882   002F7E  EFC3  F017         	goto	u6660
  8883   002F82                     u6661:
  8884   002F82  EFC4  F017         	goto	l5234
  8885   002F86                     u6660:
  8886   002F86  2A19               	incf	___fladd@bexp^0,f,c
  8887   002F88                     l5234:
  8888   002F88  2819               	incf	___fladd@bexp^0,w,c
  8889   002F8A  B4D8               	btfsc	status,2,c
  8890   002F8C  EFCA  F017         	goto	u6671
  8891   002F90  EFCC  F017         	goto	u6670
  8892   002F94                     u6671:
  8893   002F94  EFD4  F017         	goto	l5238
  8894   002F98                     u6670:
  8895   002F98  5019               	movf	___fladd@bexp^0,w,c
  8896   002F9A  A4D8               	btfss	status,2,c
  8897   002F9C  EFD2  F017         	goto	u6681
  8898   002FA0  EFD4  F017         	goto	u6680
  8899   002FA4                     u6681:
  8900   002FA4  EFE6  F017         	goto	l5242
  8901   002FA8                     u6680:
  8902   002FA8                     l5238:
  8903   002FA8  0E00               	movlw	0
  8904   002FAA  6E0B               	movwf	___fladd@b^0,c
  8905   002FAC  0E00               	movlw	0
  8906   002FAE  6E0C               	movwf	(___fladd@b+1)^0,c
  8907   002FB0  0E00               	movlw	0
  8908   002FB2  6E0D               	movwf	(___fladd@b+2)^0,c
  8909   002FB4  0E00               	movlw	0
  8910   002FB6  6E0E               	movwf	(___fladd@b+3)^0,c
  8911   002FB8  5019               	movf	___fladd@bexp^0,w,c
  8912   002FBA  A4D8               	btfss	status,2,c
  8913   002FBC  EFE2  F017         	goto	u6691
  8914   002FC0  EFE4  F017         	goto	u6690
  8915   002FC4                     u6691:
  8916   002FC4  EFE6  F017         	goto	l5242
  8917   002FC8                     u6690:
  8918   002FC8  0E00               	movlw	0
  8919   002FCA  6E17               	movwf	___fladd@signs^0,c
  8920   002FCC                     l5242:
  8921   002FCC  A019               	btfss	___fladd@bexp^0,0,c
  8922   002FCE  EFEB  F017         	goto	u6701
  8923   002FD2  EFED  F017         	goto	u6700
  8924   002FD6                     u6701:
  8925   002FD6  EFF0  F017         	goto	l5246
  8926   002FDA                     u6700:
  8927   002FDA  8E0D               	bsf	(___fladd@b+2)^0,7,c
  8928   002FDC  EFF1  F017         	goto	l5248
  8929   002FE0                     l5246:
  8930   002FE0  9E0D               	bcf	(___fladd@b+2)^0,7,c
  8931   002FE2                     l5248:
  8932   002FE2  90D8               	bcf	status,0,c
  8933   002FE4  3019               	rrcf	___fladd@bexp^0,w,c
  8934   002FE6  6E0E               	movwf	(___fladd@b+3)^0,c
  8935   002FE8  AE17               	btfss	___fladd@signs^0,7,c
  8936   002FEA  EFF9  F017         	goto	u6711
  8937   002FEE  EFFB  F017         	goto	u6710
  8938   002FF2                     u6711:
  8939   002FF2  EFFC  F017         	goto	l5254
  8940   002FF6                     u6710:
  8941   002FF6  8E0E               	bsf	(___fladd@b+3)^0,7,c
  8942   002FF8                     l5254:
  8943   002FF8  C00B  F00B         	movff	___fladd@b,?___fladd
  8944   002FFC  C00C  F00C         	movff	___fladd@b+1,?___fladd+1
  8945   003000  C00D  F00D         	movff	___fladd@b+2,?___fladd+2
  8946   003004  C00E  F00E         	movff	___fladd@b+3,?___fladd+3
  8947   003008                     l687:
  8948   003008  0012               	return		;funcret
  8949   00300A                     __end_of___fladd:
  8950                           	callstack 0
  8951                           
  8952 ;; *************** function ___flneg *****************
  8953 ;; Defined at:
  8954 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  f1              4   10[COMRAM] unsigned char 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;		None
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  4   10[COMRAM] unsigned char 
  8961 ;; Registers used:
  8962 ;;		wreg, status,2, status,0
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8968 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8971 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8972 ;;Total ram usage:        4 bytes
  8973 ;; Hardware stack levels used: 1
  8974 ;; Hardware stack levels required when called: 3
  8975 ;; This function calls:
  8976 ;;		Nothing
  8977 ;; This function is called by:
  8978 ;;		_efgtoa
  8979 ;;		_strtof
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           	psect	text32
  8984   004E18                     __ptext32:
  8985                           	callstack 0
  8986   004E18                     ___flneg:
  8987                           	callstack 26
  8988   004E18  500B               	movf	___flneg@f1^0,w,c
  8989   004E1A  100C               	iorwf	(___flneg@f1+1)^0,w,c
  8990   004E1C  100D               	iorwf	(___flneg@f1+2)^0,w,c
  8991   004E1E  100E               	iorwf	(___flneg@f1+3)^0,w,c
  8992   004E20  B4D8               	btfsc	status,2,c
  8993   004E22  EF15  F027         	goto	u7231
  8994   004E26  EF17  F027         	goto	u7230
  8995   004E2A                     u7231:
  8996   004E2A  EF1F  F027         	goto	l5588
  8997   004E2E                     u7230:
  8998   004E2E  0E00               	movlw	0
  8999   004E30  1A0B               	xorwf	___flneg@f1^0,f,c
  9000   004E32  0E00               	movlw	0
  9001   004E34  1A0C               	xorwf	(___flneg@f1+1)^0,f,c
  9002   004E36  0E00               	movlw	0
  9003   004E38  1A0D               	xorwf	(___flneg@f1+2)^0,f,c
  9004   004E3A  0E80               	movlw	128
  9005   004E3C  1A0E               	xorwf	(___flneg@f1+3)^0,f,c
  9006   004E3E                     l5588:
  9007   004E3E  C00B  F00B         	movff	___flneg@f1,?___flneg
  9008   004E42  C00C  F00C         	movff	___flneg@f1+1,?___flneg+1
  9009   004E46  C00D  F00D         	movff	___flneg@f1+2,?___flneg+2
  9010   004E4A  C00E  F00E         	movff	___flneg@f1+3,?___flneg+3
  9011   004E4E  0012               	return		;funcret
  9012   004E50                     __end_of___flneg:
  9013                           	callstack 0
  9014                           
  9015 ;; *************** function ___flmul *****************
  9016 ;; Defined at:
  9017 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;  b               4   10[COMRAM] unsigned char 
  9020 ;;  a               4   14[COMRAM] unsigned char 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  prod            4   29[COMRAM] struct .
  9023 ;;  grs             4   24[COMRAM] unsigned long 
  9024 ;;  temp            2   33[COMRAM] struct .
  9025 ;;  bexp            1   28[COMRAM] unsigned char 
  9026 ;;  aexp            1   23[COMRAM] unsigned char 
  9027 ;;  sign            1   22[COMRAM] unsigned char 
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  4   10[COMRAM] unsigned char 
  9030 ;; Registers used:
  9031 ;;		wreg, status,2, status,0, prodl, prodh
  9032 ;; Tracked objects:
  9033 ;;		On entry : 0/0
  9034 ;;		On exit  : 0/0
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9037 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;Total ram usage:       25 bytes
  9042 ;; Hardware stack levels used: 1
  9043 ;; Hardware stack levels required when called: 3
  9044 ;; This function calls:
  9045 ;;		Nothing
  9046 ;; This function is called by:
  9047 ;;		_efgtoa
  9048 ;;		_strtof
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           	psect	text33
  9053   00300A                     __ptext33:
  9054                           	callstack 0
  9055   00300A                     ___flmul:
  9056                           	callstack 26
  9057   00300A  500E               	movf	(___flmul@b+3)^0,w,c
  9058   00300C  0B80               	andlw	128
  9059   00300E  6E17               	movwf	___flmul@sign^0,c
  9060   003010  500E               	movf	(___flmul@b+3)^0,w,c
  9061   003012  240E               	addwf	(___flmul@b+3)^0,w,c
  9062   003014  6E1D               	movwf	___flmul@bexp^0,c
  9063   003016  AE0D               	btfss	(___flmul@b+2)^0,7,c
  9064   003018  EF10  F018         	goto	u6961
  9065   00301C  EF12  F018         	goto	u6960
  9066   003020                     u6961:
  9067   003020  EF13  F018         	goto	l5416
  9068   003024                     u6960:
  9069   003024  801D               	bsf	___flmul@bexp^0,0,c
  9070   003026                     l5416:
  9071   003026  501D               	movf	___flmul@bexp^0,w,c
  9072   003028  B4D8               	btfsc	status,2,c
  9073   00302A  EF19  F018         	goto	u6971
  9074   00302E  EF1B  F018         	goto	u6970
  9075   003032                     u6971:
  9076   003032  EF2E  F018         	goto	l5424
  9077   003036                     u6970:
  9078   003036  281D               	incf	___flmul@bexp^0,w,c
  9079   003038  A4D8               	btfss	status,2,c
  9080   00303A  EF21  F018         	goto	u6981
  9081   00303E  EF23  F018         	goto	u6980
  9082   003042                     u6981:
  9083   003042  EF2B  F018         	goto	l5422
  9084   003046                     u6980:
  9085   003046  0E00               	movlw	0
  9086   003048  6E0B               	movwf	___flmul@b^0,c
  9087   00304A  0E00               	movlw	0
  9088   00304C  6E0C               	movwf	(___flmul@b+1)^0,c
  9089   00304E  0E00               	movlw	0
  9090   003050  6E0D               	movwf	(___flmul@b+2)^0,c
  9091   003052  0E00               	movlw	0
  9092   003054  6E0E               	movwf	(___flmul@b+3)^0,c
  9093   003056                     l5422:
  9094   003056  8E0D               	bsf	(___flmul@b+2)^0,7,c
  9095   003058  EF36  F018         	goto	l5426
  9096   00305C                     l5424:
  9097   00305C  0E00               	movlw	0
  9098   00305E  6E0B               	movwf	___flmul@b^0,c
  9099   003060  0E00               	movlw	0
  9100   003062  6E0C               	movwf	(___flmul@b+1)^0,c
  9101   003064  0E00               	movlw	0
  9102   003066  6E0D               	movwf	(___flmul@b+2)^0,c
  9103   003068  0E00               	movlw	0
  9104   00306A  6E0E               	movwf	(___flmul@b+3)^0,c
  9105   00306C                     l5426:
  9106   00306C  5012               	movf	(___flmul@a+3)^0,w,c
  9107   00306E  0B80               	andlw	128
  9108   003070  1A17               	xorwf	___flmul@sign^0,f,c
  9109   003072  5012               	movf	(___flmul@a+3)^0,w,c
  9110   003074  2412               	addwf	(___flmul@a+3)^0,w,c
  9111   003076  6E18               	movwf	___flmul@aexp^0,c
  9112   003078  AE11               	btfss	(___flmul@a+2)^0,7,c
  9113   00307A  EF41  F018         	goto	u6991
  9114   00307E  EF43  F018         	goto	u6990
  9115   003082                     u6991:
  9116   003082  EF44  F018         	goto	l5434
  9117   003086                     u6990:
  9118   003086  8018               	bsf	___flmul@aexp^0,0,c
  9119   003088                     l5434:
  9120   003088  5018               	movf	___flmul@aexp^0,w,c
  9121   00308A  B4D8               	btfsc	status,2,c
  9122   00308C  EF4A  F018         	goto	u7001
  9123   003090  EF4C  F018         	goto	u7000
  9124   003094                     u7001:
  9125   003094  EF5F  F018         	goto	l5442
  9126   003098                     u7000:
  9127   003098  2818               	incf	___flmul@aexp^0,w,c
  9128   00309A  A4D8               	btfss	status,2,c
  9129   00309C  EF52  F018         	goto	u7011
  9130   0030A0  EF54  F018         	goto	u7010
  9131   0030A4                     u7011:
  9132   0030A4  EF5C  F018         	goto	l5440
  9133   0030A8                     u7010:
  9134   0030A8  0E00               	movlw	0
  9135   0030AA  6E0F               	movwf	___flmul@a^0,c
  9136   0030AC  0E00               	movlw	0
  9137   0030AE  6E10               	movwf	(___flmul@a+1)^0,c
  9138   0030B0  0E00               	movlw	0
  9139   0030B2  6E11               	movwf	(___flmul@a+2)^0,c
  9140   0030B4  0E00               	movlw	0
  9141   0030B6  6E12               	movwf	(___flmul@a+3)^0,c
  9142   0030B8                     l5440:
  9143   0030B8  8E11               	bsf	(___flmul@a+2)^0,7,c
  9144   0030BA  EF67  F018         	goto	l764
  9145   0030BE                     l5442:
  9146   0030BE  0E00               	movlw	0
  9147   0030C0  6E0F               	movwf	___flmul@a^0,c
  9148   0030C2  0E00               	movlw	0
  9149   0030C4  6E10               	movwf	(___flmul@a+1)^0,c
  9150   0030C6  0E00               	movlw	0
  9151   0030C8  6E11               	movwf	(___flmul@a+2)^0,c
  9152   0030CA  0E00               	movlw	0
  9153   0030CC  6E12               	movwf	(___flmul@a+3)^0,c
  9154   0030CE                     l764:
  9155   0030CE  5018               	movf	___flmul@aexp^0,w,c
  9156   0030D0  B4D8               	btfsc	status,2,c
  9157   0030D2  EF6D  F018         	goto	u7021
  9158   0030D6  EF6F  F018         	goto	u7020
  9159   0030DA                     u7021:
  9160   0030DA  EF77  F018         	goto	l5446
  9161   0030DE                     u7020:
  9162   0030DE  501D               	movf	___flmul@bexp^0,w,c
  9163   0030E0  A4D8               	btfss	status,2,c
  9164   0030E2  EF75  F018         	goto	u7031
  9165   0030E6  EF77  F018         	goto	u7030
  9166   0030EA                     u7031:
  9167   0030EA  EF81  F018         	goto	l5450
  9168   0030EE                     u7030:
  9169   0030EE                     l5446:
  9170   0030EE  0E00               	movlw	0
  9171   0030F0  6E0B               	movwf	?___flmul^0,c
  9172   0030F2  0E00               	movlw	0
  9173   0030F4  6E0C               	movwf	(?___flmul+1)^0,c
  9174   0030F6  0E00               	movlw	0
  9175   0030F8  6E0D               	movwf	(?___flmul+2)^0,c
  9176   0030FA  0E00               	movlw	0
  9177   0030FC  6E0E               	movwf	(?___flmul+3)^0,c
  9178   0030FE  EF19  F01A         	goto	l768
  9179   003102                     l5450:
  9180   003102  5011               	movf	(___flmul@a+2)^0,w,c
  9181   003104  020B               	mulwf	___flmul@b^0,c
  9182   003106  CFF3 F022          	movff	prodl,___flmul@temp
  9183   00310A  CFF4 F023          	movff	prodh,___flmul@temp+1
  9184   00310E  5022               	movf	___flmul@temp^0,w,c
  9185   003110  6E19               	movwf	___flmul@grs^0,c
  9186   003112  6A1A               	clrf	(___flmul@grs+1)^0,c
  9187   003114  6A1B               	clrf	(___flmul@grs+2)^0,c
  9188   003116  6A1C               	clrf	(___flmul@grs+3)^0,c
  9189   003118  5023               	movf	(___flmul@temp+1)^0,w,c
  9190   00311A  6E1E               	movwf	___flmul@prod^0,c
  9191   00311C  6A1F               	clrf	(___flmul@prod+1)^0,c
  9192   00311E  6A20               	clrf	(___flmul@prod+2)^0,c
  9193   003120  6A21               	clrf	(___flmul@prod+3)^0,c
  9194   003122  5010               	movf	(___flmul@a+1)^0,w,c
  9195   003124  020C               	mulwf	(___flmul@b+1)^0,c
  9196   003126  CFF3 F022          	movff	prodl,___flmul@temp
  9197   00312A  CFF4 F023          	movff	prodh,___flmul@temp+1
  9198   00312E  5022               	movf	___flmul@temp^0,w,c
  9199   003130  2619               	addwf	___flmul@grs^0,f,c
  9200   003132  0E00               	movlw	0
  9201   003134  221A               	addwfc	(___flmul@grs+1)^0,f,c
  9202   003136  221B               	addwfc	(___flmul@grs+2)^0,f,c
  9203   003138  221C               	addwfc	(___flmul@grs+3)^0,f,c
  9204   00313A  5023               	movf	(___flmul@temp+1)^0,w,c
  9205   00313C  261E               	addwf	___flmul@prod^0,f,c
  9206   00313E  0E00               	movlw	0
  9207   003140  221F               	addwfc	(___flmul@prod+1)^0,f,c
  9208   003142  2220               	addwfc	(___flmul@prod+2)^0,f,c
  9209   003144  2221               	addwfc	(___flmul@prod+3)^0,f,c
  9210   003146  500F               	movf	___flmul@a^0,w,c
  9211   003148  020D               	mulwf	(___flmul@b+2)^0,c
  9212   00314A  CFF3 F022          	movff	prodl,___flmul@temp
  9213   00314E  CFF4 F023          	movff	prodh,___flmul@temp+1
  9214   003152  5022               	movf	___flmul@temp^0,w,c
  9215   003154  2619               	addwf	___flmul@grs^0,f,c
  9216   003156  0E00               	movlw	0
  9217   003158  221A               	addwfc	(___flmul@grs+1)^0,f,c
  9218   00315A  221B               	addwfc	(___flmul@grs+2)^0,f,c
  9219   00315C  221C               	addwfc	(___flmul@grs+3)^0,f,c
  9220   00315E  5023               	movf	(___flmul@temp+1)^0,w,c
  9221   003160  261E               	addwf	___flmul@prod^0,f,c
  9222   003162  0E00               	movlw	0
  9223   003164  221F               	addwfc	(___flmul@prod+1)^0,f,c
  9224   003166  2220               	addwfc	(___flmul@prod+2)^0,f,c
  9225   003168  2221               	addwfc	(___flmul@prod+3)^0,f,c
  9226   00316A  C01B  F01C         	movff	___flmul@grs+2,___flmul@grs+3
  9227   00316E  C01A  F01B         	movff	___flmul@grs+1,___flmul@grs+2
  9228   003172  C019  F01A         	movff	___flmul@grs,___flmul@grs+1
  9229   003176  6A19               	clrf	___flmul@grs^0,c
  9230   003178  500F               	movf	___flmul@a^0,w,c
  9231   00317A  020C               	mulwf	(___flmul@b+1)^0,c
  9232   00317C  CFF3 F022          	movff	prodl,___flmul@temp
  9233   003180  CFF4 F023          	movff	prodh,___flmul@temp+1
  9234   003184  5022               	movf	___flmul@temp^0,w,c
  9235   003186  2619               	addwf	___flmul@grs^0,f,c
  9236   003188  5023               	movf	(___flmul@temp+1)^0,w,c
  9237   00318A  221A               	addwfc	(___flmul@grs+1)^0,f,c
  9238   00318C  0E00               	movlw	0
  9239   00318E  221B               	addwfc	(___flmul@grs+2)^0,f,c
  9240   003190  0E00               	movlw	0
  9241   003192  221C               	addwfc	(___flmul@grs+3)^0,f,c
  9242   003194  5010               	movf	(___flmul@a+1)^0,w,c
  9243   003196  020B               	mulwf	___flmul@b^0,c
  9244   003198  CFF3 F022          	movff	prodl,___flmul@temp
  9245   00319C  CFF4 F023          	movff	prodh,___flmul@temp+1
  9246   0031A0  5022               	movf	___flmul@temp^0,w,c
  9247   0031A2  2619               	addwf	___flmul@grs^0,f,c
  9248   0031A4  5023               	movf	(___flmul@temp+1)^0,w,c
  9249   0031A6  221A               	addwfc	(___flmul@grs+1)^0,f,c
  9250   0031A8  0E00               	movlw	0
  9251   0031AA  221B               	addwfc	(___flmul@grs+2)^0,f,c
  9252   0031AC  0E00               	movlw	0
  9253   0031AE  221C               	addwfc	(___flmul@grs+3)^0,f,c
  9254   0031B0  C01B  F01C         	movff	___flmul@grs+2,___flmul@grs+3
  9255   0031B4  C01A  F01B         	movff	___flmul@grs+1,___flmul@grs+2
  9256   0031B8  C019  F01A         	movff	___flmul@grs,___flmul@grs+1
  9257   0031BC  6A19               	clrf	___flmul@grs^0,c
  9258   0031BE  500F               	movf	___flmul@a^0,w,c
  9259   0031C0  020B               	mulwf	___flmul@b^0,c
  9260   0031C2  CFF3 F022          	movff	prodl,___flmul@temp
  9261   0031C6  CFF4 F023          	movff	prodh,___flmul@temp+1
  9262   0031CA  5022               	movf	___flmul@temp^0,w,c
  9263   0031CC  2619               	addwf	___flmul@grs^0,f,c
  9264   0031CE  5023               	movf	(___flmul@temp+1)^0,w,c
  9265   0031D0  221A               	addwfc	(___flmul@grs+1)^0,f,c
  9266   0031D2  0E00               	movlw	0
  9267   0031D4  221B               	addwfc	(___flmul@grs+2)^0,f,c
  9268   0031D6  0E00               	movlw	0
  9269   0031D8  221C               	addwfc	(___flmul@grs+3)^0,f,c
  9270   0031DA  5011               	movf	(___flmul@a+2)^0,w,c
  9271   0031DC  020C               	mulwf	(___flmul@b+1)^0,c
  9272   0031DE  CFF3 F022          	movff	prodl,___flmul@temp
  9273   0031E2  CFF4 F023          	movff	prodh,___flmul@temp+1
  9274   0031E6  5022               	movf	___flmul@temp^0,w,c
  9275   0031E8  261E               	addwf	___flmul@prod^0,f,c
  9276   0031EA  5023               	movf	(___flmul@temp+1)^0,w,c
  9277   0031EC  221F               	addwfc	(___flmul@prod+1)^0,f,c
  9278   0031EE  0E00               	movlw	0
  9279   0031F0  2220               	addwfc	(___flmul@prod+2)^0,f,c
  9280   0031F2  0E00               	movlw	0
  9281   0031F4  2221               	addwfc	(___flmul@prod+3)^0,f,c
  9282   0031F6  5010               	movf	(___flmul@a+1)^0,w,c
  9283   0031F8  020D               	mulwf	(___flmul@b+2)^0,c
  9284   0031FA  CFF3 F022          	movff	prodl,___flmul@temp
  9285   0031FE  CFF4 F023          	movff	prodh,___flmul@temp+1
  9286   003202  5022               	movf	___flmul@temp^0,w,c
  9287   003204  261E               	addwf	___flmul@prod^0,f,c
  9288   003206  5023               	movf	(___flmul@temp+1)^0,w,c
  9289   003208  221F               	addwfc	(___flmul@prod+1)^0,f,c
  9290   00320A  0E00               	movlw	0
  9291   00320C  2220               	addwfc	(___flmul@prod+2)^0,f,c
  9292   00320E  0E00               	movlw	0
  9293   003210  2221               	addwfc	(___flmul@prod+3)^0,f,c
  9294   003212  5011               	movf	(___flmul@a+2)^0,w,c
  9295   003214  020D               	mulwf	(___flmul@b+2)^0,c
  9296   003216  CFF3 F022          	movff	prodl,___flmul@temp
  9297   00321A  CFF4 F023          	movff	prodh,___flmul@temp+1
  9298   00321E  5022               	movf	___flmul@temp^0,w,c
  9299   003220  6E13               	movwf	??___flmul^0,c
  9300   003222  5023               	movf	(___flmul@temp+1)^0,w,c
  9301   003224  6E14               	movwf	(??___flmul+1)^0,c
  9302   003226  6A15               	clrf	(??___flmul+2)^0,c
  9303   003228  6A16               	clrf	(??___flmul+3)^0,c
  9304   00322A  C015  F016         	movff	??___flmul+2,??___flmul+3
  9305   00322E  C014  F015         	movff	??___flmul+1,??___flmul+2
  9306   003232  C013  F014         	movff	??___flmul,??___flmul+1
  9307   003236  6A13               	clrf	??___flmul^0,c
  9308   003238  5013               	movf	??___flmul^0,w,c
  9309   00323A  261E               	addwf	___flmul@prod^0,f,c
  9310   00323C  5014               	movf	(??___flmul+1)^0,w,c
  9311   00323E  221F               	addwfc	(___flmul@prod+1)^0,f,c
  9312   003240  5015               	movf	(??___flmul+2)^0,w,c
  9313   003242  2220               	addwfc	(___flmul@prod+2)^0,f,c
  9314   003244  5016               	movf	(??___flmul+3)^0,w,c
  9315   003246  2221               	addwfc	(___flmul@prod+3)^0,f,c
  9316   003248  C019  F013         	movff	___flmul@grs,??___flmul
  9317   00324C  C01A  F014         	movff	___flmul@grs+1,??___flmul+1
  9318   003250  C01B  F015         	movff	___flmul@grs+2,??___flmul+2
  9319   003254  C01C  F016         	movff	___flmul@grs+3,??___flmul+3
  9320   003258  0E19               	movlw	25
  9321   00325A  EF34  F019         	goto	u7040
  9322   00325E                     u7045:
  9323   00325E  90D8               	bcf	status,0,c
  9324   003260  3216               	rrcf	(??___flmul+3)^0,f,c
  9325   003262  3215               	rrcf	(??___flmul+2)^0,f,c
  9326   003264  3214               	rrcf	(??___flmul+1)^0,f,c
  9327   003266  3213               	rrcf	??___flmul^0,f,c
  9328   003268                     u7040:
  9329   003268  2EE8               	decfsz	wreg,f,c
  9330   00326A  EF2F  F019         	goto	u7045
  9331   00326E  5013               	movf	??___flmul^0,w,c
  9332   003270  261E               	addwf	___flmul@prod^0,f,c
  9333   003272  5014               	movf	(??___flmul+1)^0,w,c
  9334   003274  221F               	addwfc	(___flmul@prod+1)^0,f,c
  9335   003276  5015               	movf	(??___flmul+2)^0,w,c
  9336   003278  2220               	addwfc	(___flmul@prod+2)^0,f,c
  9337   00327A  5016               	movf	(??___flmul+3)^0,w,c
  9338   00327C  2221               	addwfc	(___flmul@prod+3)^0,f,c
  9339   00327E  C01B  F01C         	movff	___flmul@grs+2,___flmul@grs+3
  9340   003282  C01A  F01B         	movff	___flmul@grs+1,___flmul@grs+2
  9341   003286  C019  F01A         	movff	___flmul@grs,___flmul@grs+1
  9342   00328A  6A19               	clrf	___flmul@grs^0,c
  9343   00328C  5018               	movf	___flmul@aexp^0,w,c
  9344   00328E  C01D  F013         	movff	___flmul@bexp,??___flmul
  9345   003292  6A14               	clrf	(??___flmul+1)^0,c
  9346   003294  2613               	addwf	??___flmul^0,f,c
  9347   003296  0E00               	movlw	0
  9348   003298  2214               	addwfc	(??___flmul+1)^0,f,c
  9349   00329A  0E82               	movlw	130
  9350   00329C  2413               	addwf	??___flmul^0,w,c
  9351   00329E  6E22               	movwf	___flmul@temp^0,c
  9352   0032A0  0EFF               	movlw	255
  9353   0032A2  2014               	addwfc	(??___flmul+1)^0,w,c
  9354   0032A4  6E23               	movwf	(___flmul@temp+1)^0,c
  9355   0032A6  EF6A  F019         	goto	l5498
  9356   0032AA                     l5492:
  9357   0032AA  90D8               	bcf	status,0,c
  9358   0032AC  361E               	rlcf	___flmul@prod^0,f,c
  9359   0032AE  361F               	rlcf	(___flmul@prod+1)^0,f,c
  9360   0032B0  3620               	rlcf	(___flmul@prod+2)^0,f,c
  9361   0032B2  3621               	rlcf	(___flmul@prod+3)^0,f,c
  9362   0032B4  AE1C               	btfss	(___flmul@grs+3)^0,7,c
  9363   0032B6  EF5F  F019         	goto	u7051
  9364   0032BA  EF61  F019         	goto	u7050
  9365   0032BE                     u7051:
  9366   0032BE  EF62  F019         	goto	l771
  9367   0032C2                     u7050:
  9368   0032C2  801E               	bsf	___flmul@prod^0,0,c
  9369   0032C4                     l771:
  9370   0032C4  90D8               	bcf	status,0,c
  9371   0032C6  3619               	rlcf	___flmul@grs^0,f,c
  9372   0032C8  361A               	rlcf	(___flmul@grs+1)^0,f,c
  9373   0032CA  361B               	rlcf	(___flmul@grs+2)^0,f,c
  9374   0032CC  361C               	rlcf	(___flmul@grs+3)^0,f,c
  9375   0032CE  0622               	decf	___flmul@temp^0,f,c
  9376   0032D0  A0D8               	btfss	status,0,c
  9377   0032D2  0623               	decf	(___flmul@temp+1)^0,f,c
  9378   0032D4                     l5498:
  9379   0032D4  AE20               	btfss	(___flmul@prod+2)^0,7,c
  9380   0032D6  EF6F  F019         	goto	u7061
  9381   0032DA  EF71  F019         	goto	u7060
  9382   0032DE                     u7061:
  9383   0032DE  EF55  F019         	goto	l5492
  9384   0032E2                     u7060:
  9385   0032E2  0E00               	movlw	0
  9386   0032E4  6E18               	movwf	___flmul@aexp^0,c
  9387   0032E6  AE1C               	btfss	(___flmul@grs+3)^0,7,c
  9388   0032E8  EF78  F019         	goto	u7071
  9389   0032EC  EF7A  F019         	goto	u7070
  9390   0032F0                     u7071:
  9391   0032F0  EF9E  F019         	goto	l773
  9392   0032F4                     u7070:
  9393   0032F4  0EFF               	movlw	255
  9394   0032F6  1419               	andwf	___flmul@grs^0,w,c
  9395   0032F8  6E13               	movwf	??___flmul^0,c
  9396   0032FA  0EFF               	movlw	255
  9397   0032FC  141A               	andwf	(___flmul@grs+1)^0,w,c
  9398   0032FE  6E14               	movwf	(??___flmul+1)^0,c
  9399   003300  0EFF               	movlw	255
  9400   003302  141B               	andwf	(___flmul@grs+2)^0,w,c
  9401   003304  6E15               	movwf	(??___flmul+2)^0,c
  9402   003306  0E7F               	movlw	127
  9403   003308  141C               	andwf	(___flmul@grs+3)^0,w,c
  9404   00330A  6E16               	movwf	(??___flmul+3)^0,c
  9405   00330C  5013               	movf	??___flmul^0,w,c
  9406   00330E  1014               	iorwf	(??___flmul+1)^0,w,c
  9407   003310  1015               	iorwf	(??___flmul+2)^0,w,c
  9408   003312  1016               	iorwf	(??___flmul+3)^0,w,c
  9409   003314  B4D8               	btfsc	status,2,c
  9410   003316  EF8F  F019         	goto	u7081
  9411   00331A  EF91  F019         	goto	u7080
  9412   00331E                     u7081:
  9413   00331E  EF95  F019         	goto	l774
  9414   003322                     u7080:
  9415   003322                     l5506:
  9416   003322  0E01               	movlw	1
  9417   003324  6E18               	movwf	___flmul@aexp^0,c
  9418   003326  EF9E  F019         	goto	l773
  9419   00332A                     l774:
  9420   00332A  A01E               	btfss	___flmul@prod^0,0,c
  9421   00332C  EF9A  F019         	goto	u7091
  9422   003330  EF9C  F019         	goto	u7090
  9423   003334                     u7091:
  9424   003334  EF9E  F019         	goto	l773
  9425   003338                     u7090:
  9426   003338  EF91  F019         	goto	l5506
  9427   00333C                     l773:
  9428   00333C  5018               	movf	___flmul@aexp^0,w,c
  9429   00333E  B4D8               	btfsc	status,2,c
  9430   003340  EFA4  F019         	goto	u7101
  9431   003344  EFA6  F019         	goto	u7100
  9432   003348                     u7101:
  9433   003348  EFCA  F019         	goto	l5518
  9434   00334C                     u7100:
  9435   00334C  0E01               	movlw	1
  9436   00334E  261E               	addwf	___flmul@prod^0,f,c
  9437   003350  0E00               	movlw	0
  9438   003352  221F               	addwfc	(___flmul@prod+1)^0,f,c
  9439   003354  2220               	addwfc	(___flmul@prod+2)^0,f,c
  9440   003356  2221               	addwfc	(___flmul@prod+3)^0,f,c
  9441   003358  A021               	btfss	(___flmul@prod+3)^0,0,c
  9442   00335A  EFB1  F019         	goto	u7111
  9443   00335E  EFB3  F019         	goto	u7110
  9444   003362                     u7111:
  9445   003362  EFCA  F019         	goto	l5518
  9446   003366                     u7110:
  9447   003366  C01E  F013         	movff	___flmul@prod,??___flmul
  9448   00336A  C01F  F014         	movff	___flmul@prod+1,??___flmul+1
  9449   00336E  C020  F015         	movff	___flmul@prod+2,??___flmul+2
  9450   003372  C021  F016         	movff	___flmul@prod+3,??___flmul+3
  9451   003376  3416               	rlcf	(??___flmul+3)^0,w,c
  9452   003378  3216               	rrcf	(??___flmul+3)^0,f,c
  9453   00337A  3215               	rrcf	(??___flmul+2)^0,f,c
  9454   00337C  3214               	rrcf	(??___flmul+1)^0,f,c
  9455   00337E  3213               	rrcf	??___flmul^0,f,c
  9456   003380  C013  F01E         	movff	??___flmul,___flmul@prod
  9457   003384  C014  F01F         	movff	??___flmul+1,___flmul@prod+1
  9458   003388  C015  F020         	movff	??___flmul+2,___flmul@prod+2
  9459   00338C  C016  F021         	movff	??___flmul+3,___flmul@prod+3
  9460   003390  4A22               	infsnz	___flmul@temp^0,f,c
  9461   003392  2A23               	incf	(___flmul@temp+1)^0,f,c
  9462   003394                     l5518:
  9463   003394  BE23               	btfsc	(___flmul@temp+1)^0,7,c
  9464   003396  EFD5  F019         	goto	u7121
  9465   00339A  5023               	movf	(___flmul@temp+1)^0,w,c
  9466   00339C  E108               	bnz	u7120
  9467   00339E  2822               	incf	___flmul@temp^0,w,c
  9468   0033A0  A0D8               	btfss	status,0,c
  9469   0033A2  EFD5  F019         	goto	u7121
  9470   0033A6  EFD7  F019         	goto	u7120
  9471   0033AA                     u7121:
  9472   0033AA  EFE1  F019         	goto	l5522
  9473   0033AE                     u7120:
  9474   0033AE  0E00               	movlw	0
  9475   0033B0  6E1E               	movwf	___flmul@prod^0,c
  9476   0033B2  0E00               	movlw	0
  9477   0033B4  6E1F               	movwf	(___flmul@prod+1)^0,c
  9478   0033B6  0E80               	movlw	128
  9479   0033B8  6E20               	movwf	(___flmul@prod+2)^0,c
  9480   0033BA  0E7F               	movlw	127
  9481   0033BC  6E21               	movwf	(___flmul@prod+3)^0,c
  9482   0033BE  EF0F  F01A         	goto	l5534
  9483   0033C2                     l5522:
  9484   0033C2  BE23               	btfsc	(___flmul@temp+1)^0,7,c
  9485   0033C4  EFEE  F019         	goto	u7130
  9486   0033C8  5023               	movf	(___flmul@temp+1)^0,w,c
  9487   0033CA  E106               	bnz	u7131
  9488   0033CC  0422               	decf	___flmul@temp^0,w,c
  9489   0033CE  B0D8               	btfsc	status,0,c
  9490   0033D0  EFEC  F019         	goto	u7131
  9491   0033D4  EFEE  F019         	goto	u7130
  9492   0033D8                     u7131:
  9493   0033D8  EFFA  F019         	goto	l781
  9494   0033DC                     u7130:
  9495   0033DC  0E00               	movlw	0
  9496   0033DE  6E1E               	movwf	___flmul@prod^0,c
  9497   0033E0  0E00               	movlw	0
  9498   0033E2  6E1F               	movwf	(___flmul@prod+1)^0,c
  9499   0033E4  0E00               	movlw	0
  9500   0033E6  6E20               	movwf	(___flmul@prod+2)^0,c
  9501   0033E8  0E00               	movlw	0
  9502   0033EA  6E21               	movwf	(___flmul@prod+3)^0,c
  9503   0033EC  0E00               	movlw	0
  9504   0033EE  6E17               	movwf	___flmul@sign^0,c
  9505   0033F0  EF0F  F01A         	goto	l5534
  9506   0033F4                     l781:
  9507   0033F4  C022  F01D         	movff	___flmul@temp,___flmul@bexp
  9508   0033F8  0EFF               	movlw	255
  9509   0033FA  161E               	andwf	___flmul@prod^0,f,c
  9510   0033FC  0EFF               	movlw	255
  9511   0033FE  161F               	andwf	(___flmul@prod+1)^0,f,c
  9512   003400  0E7F               	movlw	127
  9513   003402  1620               	andwf	(___flmul@prod+2)^0,f,c
  9514   003404  0E00               	movlw	0
  9515   003406  1621               	andwf	(___flmul@prod+3)^0,f,c
  9516   003408  A01D               	btfss	___flmul@bexp^0,0,c
  9517   00340A  EF09  F01A         	goto	u7141
  9518   00340E  EF0B  F01A         	goto	u7140
  9519   003412                     u7141:
  9520   003412  EF0C  F01A         	goto	l5532
  9521   003416                     u7140:
  9522   003416  8E20               	bsf	(___flmul@prod+2)^0,7,c
  9523   003418                     l5532:
  9524   003418  90D8               	bcf	status,0,c
  9525   00341A  301D               	rrcf	___flmul@bexp^0,w,c
  9526   00341C  6E21               	movwf	(___flmul@prod+3)^0,c
  9527   00341E                     l5534:
  9528   00341E  5017               	movf	___flmul@sign^0,w,c
  9529   003420  1221               	iorwf	(___flmul@prod+3)^0,f,c
  9530   003422  C01E  F00B         	movff	___flmul@prod,?___flmul
  9531   003426  C01F  F00C         	movff	___flmul@prod+1,?___flmul+1
  9532   00342A  C020  F00D         	movff	___flmul@prod+2,?___flmul+2
  9533   00342E  C021  F00E         	movff	___flmul@prod+3,?___flmul+3
  9534   003432                     l768:
  9535   003432  0012               	return		;funcret
  9536   003434                     __end_of___flmul:
  9537                           	callstack 0
  9538                           
  9539 ;; *************** function ___flge *****************
  9540 ;; Defined at:
  9541 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  9542 ;; Parameters:    Size  Location     Type
  9543 ;;  ff1             4   35[COMRAM] unsigned char 
  9544 ;;  ff2             4   39[COMRAM] unsigned char 
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;		None
  9547 ;; Return value:  Size  Location     Type
  9548 ;;		None               void
  9549 ;; Registers used:
  9550 ;;		wreg, status,2, status,0
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9556 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9558 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9559 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9560 ;;Total ram usage:       12 bytes
  9561 ;; Hardware stack levels used: 1
  9562 ;; Hardware stack levels required when called: 3
  9563 ;; This function calls:
  9564 ;;		Nothing
  9565 ;; This function is called by:
  9566 ;;		_efgtoa
  9567 ;;		_strtof
  9568 ;; This function uses a non-reentrant model
  9569 ;;
  9570                           
  9571                           	psect	text34
  9572   0042DC                     __ptext34:
  9573                           	callstack 0
  9574   0042DC                     ___flge:
  9575                           	callstack 26
  9576   0042DC  0E00               	movlw	0
  9577   0042DE  1424               	andwf	___flge@ff1^0,w,c
  9578   0042E0  6E2C               	movwf	??___flge^0,c
  9579   0042E2  0E00               	movlw	0
  9580   0042E4  1425               	andwf	(___flge@ff1+1)^0,w,c
  9581   0042E6  6E2D               	movwf	(??___flge+1)^0,c
  9582   0042E8  0E80               	movlw	128
  9583   0042EA  1426               	andwf	(___flge@ff1+2)^0,w,c
  9584   0042EC  6E2E               	movwf	(??___flge+2)^0,c
  9585   0042EE  0E7F               	movlw	127
  9586   0042F0  1427               	andwf	(___flge@ff1+3)^0,w,c
  9587   0042F2  6E2F               	movwf	(??___flge+3)^0,c
  9588   0042F4  502C               	movf	??___flge^0,w,c
  9589   0042F6  102D               	iorwf	(??___flge+1)^0,w,c
  9590   0042F8  102E               	iorwf	(??___flge+2)^0,w,c
  9591   0042FA  102F               	iorwf	(??___flge+3)^0,w,c
  9592   0042FC  A4D8               	btfss	status,2,c
  9593   0042FE  EF83  F021         	goto	u7181
  9594   004302  EF85  F021         	goto	u7180
  9595   004306                     u7181:
  9596   004306  EF8D  F021         	goto	l5566
  9597   00430A                     u7180:
  9598   00430A  0E00               	movlw	0
  9599   00430C  6E24               	movwf	___flge@ff1^0,c
  9600   00430E  0E00               	movlw	0
  9601   004310  6E25               	movwf	(___flge@ff1+1)^0,c
  9602   004312  0E00               	movlw	0
  9603   004314  6E26               	movwf	(___flge@ff1+2)^0,c
  9604   004316  0E00               	movlw	0
  9605   004318  6E27               	movwf	(___flge@ff1+3)^0,c
  9606   00431A                     l5566:
  9607   00431A  0E00               	movlw	0
  9608   00431C  1428               	andwf	___flge@ff2^0,w,c
  9609   00431E  6E2C               	movwf	??___flge^0,c
  9610   004320  0E00               	movlw	0
  9611   004322  1429               	andwf	(___flge@ff2+1)^0,w,c
  9612   004324  6E2D               	movwf	(??___flge+1)^0,c
  9613   004326  0E80               	movlw	128
  9614   004328  142A               	andwf	(___flge@ff2+2)^0,w,c
  9615   00432A  6E2E               	movwf	(??___flge+2)^0,c
  9616   00432C  0E7F               	movlw	127
  9617   00432E  142B               	andwf	(___flge@ff2+3)^0,w,c
  9618   004330  6E2F               	movwf	(??___flge+3)^0,c
  9619   004332  502C               	movf	??___flge^0,w,c
  9620   004334  102D               	iorwf	(??___flge+1)^0,w,c
  9621   004336  102E               	iorwf	(??___flge+2)^0,w,c
  9622   004338  102F               	iorwf	(??___flge+3)^0,w,c
  9623   00433A  A4D8               	btfss	status,2,c
  9624   00433C  EFA2  F021         	goto	u7191
  9625   004340  EFA4  F021         	goto	u7190
  9626   004344                     u7191:
  9627   004344  EFAC  F021         	goto	l5570
  9628   004348                     u7190:
  9629   004348  0E00               	movlw	0
  9630   00434A  6E28               	movwf	___flge@ff2^0,c
  9631   00434C  0E00               	movlw	0
  9632   00434E  6E29               	movwf	(___flge@ff2+1)^0,c
  9633   004350  0E00               	movlw	0
  9634   004352  6E2A               	movwf	(___flge@ff2+2)^0,c
  9635   004354  0E00               	movlw	0
  9636   004356  6E2B               	movwf	(___flge@ff2+3)^0,c
  9637   004358                     l5570:
  9638   004358  AE27               	btfss	(___flge@ff1+3)^0,7,c
  9639   00435A  EFB1  F021         	goto	u7201
  9640   00435E  EFB3  F021         	goto	u7200
  9641   004362                     u7201:
  9642   004362  EFBC  F021         	goto	l5574
  9643   004366                     u7200:
  9644   004366  6C24               	negf	___flge@ff1^0,c
  9645   004368  1E25               	comf	(___flge@ff1+1)^0,f,c
  9646   00436A  B0D8               	btfsc	status,0,c
  9647   00436C  2A25               	incf	(___flge@ff1+1)^0,f,c
  9648   00436E  1E26               	comf	(___flge@ff1+2)^0,f,c
  9649   004370  B0D8               	btfsc	status,0,c
  9650   004372  2A26               	incf	(___flge@ff1+2)^0,f,c
  9651   004374  0E80               	movlw	128
  9652   004376  5627               	subfwb	(___flge@ff1+3)^0,f,c
  9653   004378                     l5574:
  9654   004378  AE2B               	btfss	(___flge@ff2+3)^0,7,c
  9655   00437A  EFC1  F021         	goto	u7211
  9656   00437E  EFC3  F021         	goto	u7210
  9657   004382                     u7211:
  9658   004382  EFCC  F021         	goto	l415
  9659   004386                     u7210:
  9660   004386  6C28               	negf	___flge@ff2^0,c
  9661   004388  1E29               	comf	(___flge@ff2+1)^0,f,c
  9662   00438A  B0D8               	btfsc	status,0,c
  9663   00438C  2A29               	incf	(___flge@ff2+1)^0,f,c
  9664   00438E  1E2A               	comf	(___flge@ff2+2)^0,f,c
  9665   004390  B0D8               	btfsc	status,0,c
  9666   004392  2A2A               	incf	(___flge@ff2+2)^0,f,c
  9667   004394  0E80               	movlw	128
  9668   004396  562B               	subfwb	(___flge@ff2+3)^0,f,c
  9669   004398                     l415:
  9670   004398  0E00               	movlw	0
  9671   00439A  1A24               	xorwf	___flge@ff1^0,f,c
  9672   00439C  0E00               	movlw	0
  9673   00439E  1A25               	xorwf	(___flge@ff1+1)^0,f,c
  9674   0043A0  0E00               	movlw	0
  9675   0043A2  1A26               	xorwf	(___flge@ff1+2)^0,f,c
  9676   0043A4  0E80               	movlw	128
  9677   0043A6  1A27               	xorwf	(___flge@ff1+3)^0,f,c
  9678   0043A8  0E00               	movlw	0
  9679   0043AA  1A28               	xorwf	___flge@ff2^0,f,c
  9680   0043AC  0E00               	movlw	0
  9681   0043AE  1A29               	xorwf	(___flge@ff2+1)^0,f,c
  9682   0043B0  0E00               	movlw	0
  9683   0043B2  1A2A               	xorwf	(___flge@ff2+2)^0,f,c
  9684   0043B4  0E80               	movlw	128
  9685   0043B6  1A2B               	xorwf	(___flge@ff2+3)^0,f,c
  9686   0043B8  5028               	movf	___flge@ff2^0,w,c
  9687   0043BA  5C24               	subwf	___flge@ff1^0,w,c
  9688   0043BC  5029               	movf	(___flge@ff2+1)^0,w,c
  9689   0043BE  5825               	subwfb	(___flge@ff1+1)^0,w,c
  9690   0043C0  502A               	movf	(___flge@ff2+2)^0,w,c
  9691   0043C2  5826               	subwfb	(___flge@ff1+2)^0,w,c
  9692   0043C4  502B               	movf	(___flge@ff2+3)^0,w,c
  9693   0043C6  5827               	subwfb	(___flge@ff1+3)^0,w,c
  9694   0043C8  B0D8               	btfsc	status,0,c
  9695   0043CA  EFE9  F021         	goto	u7221
  9696   0043CE  EFEB  F021         	goto	u7220
  9697   0043D2                     u7221:
  9698   0043D2  EFEE  F021         	goto	l5580
  9699   0043D6                     u7220:
  9700   0043D6  90D8               	bcf	status,0,c
  9701   0043D8  EFEF  F021         	goto	l420
  9702   0043DC                     l5580:
  9703   0043DC  80D8               	bsf	status,0,c
  9704   0043DE                     l420:
  9705   0043DE  0012               	return		;funcret
  9706   0043E0                     __end_of___flge:
  9707                           	callstack 0
  9708                           
  9709 ;; *************** function ___fleq *****************
  9710 ;; Defined at:
  9711 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  ff1             4   10[COMRAM] unsigned char 
  9714 ;;  ff2             4   14[COMRAM] unsigned char 
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;		None
  9717 ;; Return value:  Size  Location     Type
  9718 ;;		None               void
  9719 ;; Registers used:
  9720 ;;		wreg, status,2, status,0
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9726 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9729 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9730 ;;Total ram usage:       12 bytes
  9731 ;; Hardware stack levels used: 1
  9732 ;; Hardware stack levels required when called: 3
  9733 ;; This function calls:
  9734 ;;		Nothing
  9735 ;; This function is called by:
  9736 ;;		_efgtoa
  9737 ;;		_strtof
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           	psect	text35
  9742   00474A                     __ptext35:
  9743                           	callstack 0
  9744   00474A                     ___fleq:
  9745                           	callstack 26
  9746   00474A  0E00               	movlw	0
  9747   00474C  140B               	andwf	___fleq@ff1^0,w,c
  9748   00474E  6E13               	movwf	??___fleq^0,c
  9749   004750  0E00               	movlw	0
  9750   004752  140C               	andwf	(___fleq@ff1+1)^0,w,c
  9751   004754  6E14               	movwf	(??___fleq+1)^0,c
  9752   004756  0E80               	movlw	128
  9753   004758  140D               	andwf	(___fleq@ff1+2)^0,w,c
  9754   00475A  6E15               	movwf	(??___fleq+2)^0,c
  9755   00475C  0E7F               	movlw	127
  9756   00475E  140E               	andwf	(___fleq@ff1+3)^0,w,c
  9757   004760  6E16               	movwf	(??___fleq+3)^0,c
  9758   004762  5013               	movf	??___fleq^0,w,c
  9759   004764  1014               	iorwf	(??___fleq+1)^0,w,c
  9760   004766  1015               	iorwf	(??___fleq+2)^0,w,c
  9761   004768  1016               	iorwf	(??___fleq+3)^0,w,c
  9762   00476A  A4D8               	btfss	status,2,c
  9763   00476C  EFBA  F023         	goto	u7151
  9764   004770  EFBC  F023         	goto	u7150
  9765   004774                     u7151:
  9766   004774  EFC4  F023         	goto	l5550
  9767   004778                     u7150:
  9768   004778  0E00               	movlw	0
  9769   00477A  6E0B               	movwf	___fleq@ff1^0,c
  9770   00477C  0E00               	movlw	0
  9771   00477E  6E0C               	movwf	(___fleq@ff1+1)^0,c
  9772   004780  0E00               	movlw	0
  9773   004782  6E0D               	movwf	(___fleq@ff1+2)^0,c
  9774   004784  0E00               	movlw	0
  9775   004786  6E0E               	movwf	(___fleq@ff1+3)^0,c
  9776   004788                     l5550:
  9777   004788  0E00               	movlw	0
  9778   00478A  140F               	andwf	___fleq@ff2^0,w,c
  9779   00478C  6E13               	movwf	??___fleq^0,c
  9780   00478E  0E00               	movlw	0
  9781   004790  1410               	andwf	(___fleq@ff2+1)^0,w,c
  9782   004792  6E14               	movwf	(??___fleq+1)^0,c
  9783   004794  0E80               	movlw	128
  9784   004796  1411               	andwf	(___fleq@ff2+2)^0,w,c
  9785   004798  6E15               	movwf	(??___fleq+2)^0,c
  9786   00479A  0E7F               	movlw	127
  9787   00479C  1412               	andwf	(___fleq@ff2+3)^0,w,c
  9788   00479E  6E16               	movwf	(??___fleq+3)^0,c
  9789   0047A0  5013               	movf	??___fleq^0,w,c
  9790   0047A2  1014               	iorwf	(??___fleq+1)^0,w,c
  9791   0047A4  1015               	iorwf	(??___fleq+2)^0,w,c
  9792   0047A6  1016               	iorwf	(??___fleq+3)^0,w,c
  9793   0047A8  A4D8               	btfss	status,2,c
  9794   0047AA  EFD9  F023         	goto	u7161
  9795   0047AE  EFDB  F023         	goto	u7160
  9796   0047B2                     u7161:
  9797   0047B2  EFE3  F023         	goto	l5554
  9798   0047B6                     u7160:
  9799   0047B6  0E00               	movlw	0
  9800   0047B8  6E0F               	movwf	___fleq@ff2^0,c
  9801   0047BA  0E00               	movlw	0
  9802   0047BC  6E10               	movwf	(___fleq@ff2+1)^0,c
  9803   0047BE  0E00               	movlw	0
  9804   0047C0  6E11               	movwf	(___fleq@ff2+2)^0,c
  9805   0047C2  0E00               	movlw	0
  9806   0047C4  6E12               	movwf	(___fleq@ff2+3)^0,c
  9807   0047C6                     l5554:
  9808   0047C6  500F               	movf	___fleq@ff2^0,w,c
  9809   0047C8  180B               	xorwf	___fleq@ff1^0,w,c
  9810   0047CA  E10F               	bnz	u7170
  9811   0047CC  5010               	movf	(___fleq@ff2+1)^0,w,c
  9812   0047CE  180C               	xorwf	(___fleq@ff1+1)^0,w,c
  9813   0047D0  E10C               	bnz	u7170
  9814   0047D2  5011               	movf	(___fleq@ff2+2)^0,w,c
  9815   0047D4  180D               	xorwf	(___fleq@ff1+2)^0,w,c
  9816   0047D6  E109               	bnz	u7170
  9817   0047D8  5012               	movf	(___fleq@ff2+3)^0,w,c
  9818   0047DA  180E               	xorwf	(___fleq@ff1+3)^0,w,c
  9819   0047DC  B4D8               	btfsc	status,2,c
  9820   0047DE  EFF3  F023         	goto	u7171
  9821   0047E2  EFF5  F023         	goto	u7170
  9822   0047E6                     u7171:
  9823   0047E6  EFF8  F023         	goto	l5558
  9824   0047EA                     u7170:
  9825   0047EA  90D8               	bcf	status,0,c
  9826   0047EC  EFF9  F023         	goto	l409
  9827   0047F0                     l5558:
  9828   0047F0  80D8               	bsf	status,0,c
  9829   0047F2                     l409:
  9830   0047F2  0012               	return		;funcret
  9831   0047F4                     __end_of___fleq:
  9832                           	callstack 0
  9833                           
  9834 ;; *************** function ___fldiv *****************
  9835 ;; Defined at:
  9836 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  9837 ;; Parameters:    Size  Location     Type
  9838 ;;  b               4   10[COMRAM] unsigned char 
  9839 ;;  a               4   14[COMRAM] unsigned char 
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;  grs             4   29[COMRAM] unsigned long 
  9842 ;;  rem             4   22[COMRAM] unsigned long 
  9843 ;;  new_exp         2   27[COMRAM] short 
  9844 ;;  aexp            1   34[COMRAM] unsigned char 
  9845 ;;  bexp            1   33[COMRAM] unsigned char 
  9846 ;;  sign            1   26[COMRAM] unsigned char 
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  4   10[COMRAM] unsigned char 
  9849 ;; Registers used:
  9850 ;;		wreg, status,2, status,0
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9856 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9857 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9858 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9860 ;;Total ram usage:       25 bytes
  9861 ;; Hardware stack levels used: 1
  9862 ;; Hardware stack levels required when called: 3
  9863 ;; This function calls:
  9864 ;;		Nothing
  9865 ;; This function is called by:
  9866 ;;		_efgtoa
  9867 ;;		_strtof
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           	psect	text36
  9872   003810                     __ptext36:
  9873                           	callstack 0
  9874   003810                     ___fldiv:
  9875                           	callstack 26
  9876   003810  500E               	movf	(___fldiv@b+3)^0,w,c
  9877   003812  0B80               	andlw	128
  9878   003814  6E1B               	movwf	___fldiv@sign^0,c
  9879   003816  500E               	movf	(___fldiv@b+3)^0,w,c
  9880   003818  240E               	addwf	(___fldiv@b+3)^0,w,c
  9881   00381A  6E22               	movwf	___fldiv@bexp^0,c
  9882   00381C  AE0D               	btfss	(___fldiv@b+2)^0,7,c
  9883   00381E  EF13  F01C         	goto	u6731
  9884   003822  EF15  F01C         	goto	u6730
  9885   003826                     u6731:
  9886   003826  EF16  F01C         	goto	l5278
  9887   00382A                     u6730:
  9888   00382A  8022               	bsf	___fldiv@bexp^0,0,c
  9889   00382C                     l5278:
  9890   00382C  5022               	movf	___fldiv@bexp^0,w,c
  9891   00382E  B4D8               	btfsc	status,2,c
  9892   003830  EF1C  F01C         	goto	u6741
  9893   003834  EF1E  F01C         	goto	u6740
  9894   003838                     u6741:
  9895   003838  EF33  F01C         	goto	l5288
  9896   00383C                     u6740:
  9897   00383C  2822               	incf	___fldiv@bexp^0,w,c
  9898   00383E  A4D8               	btfss	status,2,c
  9899   003840  EF24  F01C         	goto	u6751
  9900   003844  EF26  F01C         	goto	u6750
  9901   003848                     u6751:
  9902   003848  EF2E  F01C         	goto	l5284
  9903   00384C                     u6750:
  9904   00384C  0E00               	movlw	0
  9905   00384E  6E0B               	movwf	___fldiv@b^0,c
  9906   003850  0E00               	movlw	0
  9907   003852  6E0C               	movwf	(___fldiv@b+1)^0,c
  9908   003854  0E00               	movlw	0
  9909   003856  6E0D               	movwf	(___fldiv@b+2)^0,c
  9910   003858  0E00               	movlw	0
  9911   00385A  6E0E               	movwf	(___fldiv@b+3)^0,c
  9912   00385C                     l5284:
  9913   00385C  8E0D               	bsf	(___fldiv@b+2)^0,7,c
  9914   00385E  0E00               	movlw	0
  9915   003860  6E0E               	movwf	(___fldiv@b+3)^0,c
  9916   003862  EF3B  F01C         	goto	l5290
  9917   003866                     l5288:
  9918   003866  0E00               	movlw	0
  9919   003868  6E0B               	movwf	___fldiv@b^0,c
  9920   00386A  0E00               	movlw	0
  9921   00386C  6E0C               	movwf	(___fldiv@b+1)^0,c
  9922   00386E  0E00               	movlw	0
  9923   003870  6E0D               	movwf	(___fldiv@b+2)^0,c
  9924   003872  0E00               	movlw	0
  9925   003874  6E0E               	movwf	(___fldiv@b+3)^0,c
  9926   003876                     l5290:
  9927   003876  5012               	movf	(___fldiv@a+3)^0,w,c
  9928   003878  0B80               	andlw	128
  9929   00387A  1A1B               	xorwf	___fldiv@sign^0,f,c
  9930   00387C  5012               	movf	(___fldiv@a+3)^0,w,c
  9931   00387E  2412               	addwf	(___fldiv@a+3)^0,w,c
  9932   003880  6E23               	movwf	___fldiv@aexp^0,c
  9933   003882  AE11               	btfss	(___fldiv@a+2)^0,7,c
  9934   003884  EF46  F01C         	goto	u6761
  9935   003888  EF48  F01C         	goto	u6760
  9936   00388C                     u6761:
  9937   00388C  EF49  F01C         	goto	l5298
  9938   003890                     u6760:
  9939   003890  8023               	bsf	___fldiv@aexp^0,0,c
  9940   003892                     l5298:
  9941   003892  5023               	movf	___fldiv@aexp^0,w,c
  9942   003894  B4D8               	btfsc	status,2,c
  9943   003896  EF4F  F01C         	goto	u6771
  9944   00389A  EF51  F01C         	goto	u6770
  9945   00389E                     u6771:
  9946   00389E  EF66  F01C         	goto	l5308
  9947   0038A2                     u6770:
  9948   0038A2  2823               	incf	___fldiv@aexp^0,w,c
  9949   0038A4  A4D8               	btfss	status,2,c
  9950   0038A6  EF57  F01C         	goto	u6781
  9951   0038AA  EF59  F01C         	goto	u6780
  9952   0038AE                     u6781:
  9953   0038AE  EF61  F01C         	goto	l5304
  9954   0038B2                     u6780:
  9955   0038B2  0E00               	movlw	0
  9956   0038B4  6E0F               	movwf	___fldiv@a^0,c
  9957   0038B6  0E00               	movlw	0
  9958   0038B8  6E10               	movwf	(___fldiv@a+1)^0,c
  9959   0038BA  0E00               	movlw	0
  9960   0038BC  6E11               	movwf	(___fldiv@a+2)^0,c
  9961   0038BE  0E00               	movlw	0
  9962   0038C0  6E12               	movwf	(___fldiv@a+3)^0,c
  9963   0038C2                     l5304:
  9964   0038C2  8E11               	bsf	(___fldiv@a+2)^0,7,c
  9965   0038C4  0E00               	movlw	0
  9966   0038C6  6E12               	movwf	(___fldiv@a+3)^0,c
  9967   0038C8  EF6E  F01C         	goto	l5310
  9968   0038CC                     l5308:
  9969   0038CC  0E00               	movlw	0
  9970   0038CE  6E0F               	movwf	___fldiv@a^0,c
  9971   0038D0  0E00               	movlw	0
  9972   0038D2  6E10               	movwf	(___fldiv@a+1)^0,c
  9973   0038D4  0E00               	movlw	0
  9974   0038D6  6E11               	movwf	(___fldiv@a+2)^0,c
  9975   0038D8  0E00               	movlw	0
  9976   0038DA  6E12               	movwf	(___fldiv@a+3)^0,c
  9977   0038DC                     l5310:
  9978   0038DC  500F               	movf	___fldiv@a^0,w,c
  9979   0038DE  1010               	iorwf	(___fldiv@a+1)^0,w,c
  9980   0038E0  1011               	iorwf	(___fldiv@a+2)^0,w,c
  9981   0038E2  1012               	iorwf	(___fldiv@a+3)^0,w,c
  9982   0038E4  A4D8               	btfss	status,2,c
  9983   0038E6  EF77  F01C         	goto	u6791
  9984   0038EA  EF79  F01C         	goto	u6790
  9985   0038EE                     u6791:
  9986   0038EE  EF91  F01C         	goto	l5322
  9987   0038F2                     u6790:
  9988   0038F2  0E00               	movlw	0
  9989   0038F4  6E0B               	movwf	___fldiv@b^0,c
  9990   0038F6  0E00               	movlw	0
  9991   0038F8  6E0C               	movwf	(___fldiv@b+1)^0,c
  9992   0038FA  0E00               	movlw	0
  9993   0038FC  6E0D               	movwf	(___fldiv@b+2)^0,c
  9994   0038FE  0E00               	movlw	0
  9995   003900  6E0E               	movwf	(___fldiv@b+3)^0,c
  9996   003902  0E80               	movlw	128
  9997   003904  120D               	iorwf	(___fldiv@b+2)^0,f,c
  9998   003906  0E7F               	movlw	127
  9999   003908  120E               	iorwf	(___fldiv@b+3)^0,f,c
 10000   00390A                     l5316:
 10001   00390A  501B               	movf	___fldiv@sign^0,w,c
 10002   00390C  120E               	iorwf	(___fldiv@b+3)^0,f,c
 10003   00390E  C00B  F00B         	movff	___fldiv@b,?___fldiv
 10004   003912  C00C  F00C         	movff	___fldiv@b+1,?___fldiv+1
 10005   003916  C00D  F00D         	movff	___fldiv@b+2,?___fldiv+2
 10006   00391A  C00E  F00E         	movff	___fldiv@b+3,?___fldiv+3
 10007   00391E  EFD4  F01D         	goto	l732
 10008   003922                     l5322:
 10009   003922  5022               	movf	___fldiv@bexp^0,w,c
 10010   003924  A4D8               	btfss	status,2,c
 10011   003926  EF97  F01C         	goto	u6801
 10012   00392A  EF99  F01C         	goto	u6800
 10013   00392E                     u6801:
 10014   00392E  EFA3  F01C         	goto	l5330
 10015   003932                     u6800:
 10016   003932  0E00               	movlw	0
 10017   003934  6E0B               	movwf	?___fldiv^0,c
 10018   003936  0E00               	movlw	0
 10019   003938  6E0C               	movwf	(?___fldiv+1)^0,c
 10020   00393A  0E00               	movlw	0
 10021   00393C  6E0D               	movwf	(?___fldiv+2)^0,c
 10022   00393E  0E00               	movlw	0
 10023   003940  6E0E               	movwf	(?___fldiv+3)^0,c
 10024   003942  EFD4  F01D         	goto	l732
 10025   003946                     l5330:
 10026   003946  5023               	movf	___fldiv@aexp^0,w,c
 10027   003948  C022  F013         	movff	___fldiv@bexp,??___fldiv
 10028   00394C  6A14               	clrf	(??___fldiv+1)^0,c
 10029   00394E  5E13               	subwf	??___fldiv^0,f,c
 10030   003950  0E00               	movlw	0
 10031   003952  5A14               	subwfb	(??___fldiv+1)^0,f,c
 10032   003954  0E7F               	movlw	127
 10033   003956  2413               	addwf	??___fldiv^0,w,c
 10034   003958  6E1C               	movwf	___fldiv@new_exp^0,c
 10035   00395A  0E00               	movlw	0
 10036   00395C  2014               	addwfc	(??___fldiv+1)^0,w,c
 10037   00395E  6E1D               	movwf	(___fldiv@new_exp+1)^0,c
 10038   003960  C00B  F017         	movff	___fldiv@b,___fldiv@rem
 10039   003964  C00C  F018         	movff	___fldiv@b+1,___fldiv@rem+1
 10040   003968  C00D  F019         	movff	___fldiv@b+2,___fldiv@rem+2
 10041   00396C  C00E  F01A         	movff	___fldiv@b+3,___fldiv@rem+3
 10042   003970  0E00               	movlw	0
 10043   003972  6E0B               	movwf	___fldiv@b^0,c
 10044   003974  0E00               	movlw	0
 10045   003976  6E0C               	movwf	(___fldiv@b+1)^0,c
 10046   003978  0E00               	movlw	0
 10047   00397A  6E0D               	movwf	(___fldiv@b+2)^0,c
 10048   00397C  0E00               	movlw	0
 10049   00397E  6E0E               	movwf	(___fldiv@b+3)^0,c
 10050   003980  0E00               	movlw	0
 10051   003982  6E1E               	movwf	___fldiv@grs^0,c
 10052   003984  0E00               	movlw	0
 10053   003986  6E1F               	movwf	(___fldiv@grs+1)^0,c
 10054   003988  0E00               	movlw	0
 10055   00398A  6E20               	movwf	(___fldiv@grs+2)^0,c
 10056   00398C  0E00               	movlw	0
 10057   00398E  6E21               	movwf	(___fldiv@grs+3)^0,c
 10058   003990  0E00               	movlw	0
 10059   003992  6E23               	movwf	___fldiv@aexp^0,c
 10060   003994  EF04  F01D         	goto	l734
 10061   003998                     l5340:
 10062   003998  5023               	movf	___fldiv@aexp^0,w,c
 10063   00399A  B4D8               	btfsc	status,2,c
 10064   00399C  EFD2  F01C         	goto	u6811
 10065   0039A0  EFD4  F01C         	goto	u6810
 10066   0039A4                     u6811:
 10067   0039A4  EFEB  F01C         	goto	l5348
 10068   0039A8                     u6810:
 10069   0039A8  90D8               	bcf	status,0,c
 10070   0039AA  3617               	rlcf	___fldiv@rem^0,f,c
 10071   0039AC  3618               	rlcf	(___fldiv@rem+1)^0,f,c
 10072   0039AE  3619               	rlcf	(___fldiv@rem+2)^0,f,c
 10073   0039B0  361A               	rlcf	(___fldiv@rem+3)^0,f,c
 10074   0039B2  90D8               	bcf	status,0,c
 10075   0039B4  360B               	rlcf	___fldiv@b^0,f,c
 10076   0039B6  360C               	rlcf	(___fldiv@b+1)^0,f,c
 10077   0039B8  360D               	rlcf	(___fldiv@b+2)^0,f,c
 10078   0039BA  360E               	rlcf	(___fldiv@b+3)^0,f,c
 10079   0039BC  AE21               	btfss	(___fldiv@grs+3)^0,7,c
 10080   0039BE  EFE3  F01C         	goto	u6821
 10081   0039C2  EFE5  F01C         	goto	u6820
 10082   0039C6                     u6821:
 10083   0039C6  EFE6  F01C         	goto	l737
 10084   0039CA                     u6820:
 10085   0039CA  800B               	bsf	___fldiv@b^0,0,c
 10086   0039CC                     l737:
 10087   0039CC  90D8               	bcf	status,0,c
 10088   0039CE  361E               	rlcf	___fldiv@grs^0,f,c
 10089   0039D0  361F               	rlcf	(___fldiv@grs+1)^0,f,c
 10090   0039D2  3620               	rlcf	(___fldiv@grs+2)^0,f,c
 10091   0039D4  3621               	rlcf	(___fldiv@grs+3)^0,f,c
 10092   0039D6                     l5348:
 10093   0039D6  500F               	movf	___fldiv@a^0,w,c
 10094   0039D8  5C17               	subwf	___fldiv@rem^0,w,c
 10095   0039DA  5010               	movf	(___fldiv@a+1)^0,w,c
 10096   0039DC  5818               	subwfb	(___fldiv@rem+1)^0,w,c
 10097   0039DE  5011               	movf	(___fldiv@a+2)^0,w,c
 10098   0039E0  5819               	subwfb	(___fldiv@rem+2)^0,w,c
 10099   0039E2  5012               	movf	(___fldiv@a+3)^0,w,c
 10100   0039E4  581A               	subwfb	(___fldiv@rem+3)^0,w,c
 10101   0039E6  A0D8               	btfss	status,0,c
 10102   0039E8  EFF8  F01C         	goto	u6831
 10103   0039EC  EFFA  F01C         	goto	u6830
 10104   0039F0                     u6831:
 10105   0039F0  EF03  F01D         	goto	l5354
 10106   0039F4                     u6830:
 10107   0039F4  8C21               	bsf	(___fldiv@grs+3)^0,6,c
 10108   0039F6  500F               	movf	___fldiv@a^0,w,c
 10109   0039F8  5E17               	subwf	___fldiv@rem^0,f,c
 10110   0039FA  5010               	movf	(___fldiv@a+1)^0,w,c
 10111   0039FC  5A18               	subwfb	(___fldiv@rem+1)^0,f,c
 10112   0039FE  5011               	movf	(___fldiv@a+2)^0,w,c
 10113   003A00  5A19               	subwfb	(___fldiv@rem+2)^0,f,c
 10114   003A02  5012               	movf	(___fldiv@a+3)^0,w,c
 10115   003A04  5A1A               	subwfb	(___fldiv@rem+3)^0,f,c
 10116   003A06                     l5354:
 10117   003A06  2A23               	incf	___fldiv@aexp^0,f,c
 10118   003A08                     l734:
 10119   003A08  0E19               	movlw	25
 10120   003A0A  6423               	cpfsgt	___fldiv@aexp^0,c
 10121   003A0C  EF0A  F01D         	goto	u6841
 10122   003A10  EF0C  F01D         	goto	u6840
 10123   003A14                     u6841:
 10124   003A14  EFCC  F01C         	goto	l5340
 10125   003A18                     u6840:
 10126   003A18  5017               	movf	___fldiv@rem^0,w,c
 10127   003A1A  1018               	iorwf	(___fldiv@rem+1)^0,w,c
 10128   003A1C  1019               	iorwf	(___fldiv@rem+2)^0,w,c
 10129   003A1E  101A               	iorwf	(___fldiv@rem+3)^0,w,c
 10130   003A20  B4D8               	btfsc	status,2,c
 10131   003A22  EF15  F01D         	goto	u6851
 10132   003A26  EF17  F01D         	goto	u6850
 10133   003A2A                     u6851:
 10134   003A2A  EF2F  F01D         	goto	l5366
 10135   003A2E                     u6850:
 10136   003A2E  801E               	bsf	___fldiv@grs^0,0,c
 10137   003A30  EF2F  F01D         	goto	l5366
 10138   003A34                     l5360:
 10139   003A34  90D8               	bcf	status,0,c
 10140   003A36  360B               	rlcf	___fldiv@b^0,f,c
 10141   003A38  360C               	rlcf	(___fldiv@b+1)^0,f,c
 10142   003A3A  360D               	rlcf	(___fldiv@b+2)^0,f,c
 10143   003A3C  360E               	rlcf	(___fldiv@b+3)^0,f,c
 10144   003A3E  AE21               	btfss	(___fldiv@grs+3)^0,7,c
 10145   003A40  EF24  F01D         	goto	u6861
 10146   003A44  EF26  F01D         	goto	u6860
 10147   003A48                     u6861:
 10148   003A48  EF27  F01D         	goto	l743
 10149   003A4C                     u6860:
 10150   003A4C  800B               	bsf	___fldiv@b^0,0,c
 10151   003A4E                     l743:
 10152   003A4E  90D8               	bcf	status,0,c
 10153   003A50  361E               	rlcf	___fldiv@grs^0,f,c
 10154   003A52  361F               	rlcf	(___fldiv@grs+1)^0,f,c
 10155   003A54  3620               	rlcf	(___fldiv@grs+2)^0,f,c
 10156   003A56  3621               	rlcf	(___fldiv@grs+3)^0,f,c
 10157   003A58  061C               	decf	___fldiv@new_exp^0,f,c
 10158   003A5A  A0D8               	btfss	status,0,c
 10159   003A5C  061D               	decf	(___fldiv@new_exp+1)^0,f,c
 10160   003A5E                     l5366:
 10161   003A5E  AE0D               	btfss	(___fldiv@b+2)^0,7,c
 10162   003A60  EF34  F01D         	goto	u6871
 10163   003A64  EF36  F01D         	goto	u6870
 10164   003A68                     u6871:
 10165   003A68  EF1A  F01D         	goto	l5360
 10166   003A6C                     u6870:
 10167   003A6C  0E00               	movlw	0
 10168   003A6E  6E23               	movwf	___fldiv@aexp^0,c
 10169   003A70  AE21               	btfss	(___fldiv@grs+3)^0,7,c
 10170   003A72  EF3D  F01D         	goto	u6881
 10171   003A76  EF3F  F01D         	goto	u6880
 10172   003A7A                     u6881:
 10173   003A7A  EF63  F01D         	goto	l745
 10174   003A7E                     u6880:
 10175   003A7E  0EFF               	movlw	255
 10176   003A80  141E               	andwf	___fldiv@grs^0,w,c
 10177   003A82  6E13               	movwf	??___fldiv^0,c
 10178   003A84  0EFF               	movlw	255
 10179   003A86  141F               	andwf	(___fldiv@grs+1)^0,w,c
 10180   003A88  6E14               	movwf	(??___fldiv+1)^0,c
 10181   003A8A  0EFF               	movlw	255
 10182   003A8C  1420               	andwf	(___fldiv@grs+2)^0,w,c
 10183   003A8E  6E15               	movwf	(??___fldiv+2)^0,c
 10184   003A90  0E7F               	movlw	127
 10185   003A92  1421               	andwf	(___fldiv@grs+3)^0,w,c
 10186   003A94  6E16               	movwf	(??___fldiv+3)^0,c
 10187   003A96  5013               	movf	??___fldiv^0,w,c
 10188   003A98  1014               	iorwf	(??___fldiv+1)^0,w,c
 10189   003A9A  1015               	iorwf	(??___fldiv+2)^0,w,c
 10190   003A9C  1016               	iorwf	(??___fldiv+3)^0,w,c
 10191   003A9E  B4D8               	btfsc	status,2,c
 10192   003AA0  EF54  F01D         	goto	u6891
 10193   003AA4  EF56  F01D         	goto	u6890
 10194   003AA8                     u6891:
 10195   003AA8  EF5A  F01D         	goto	l746
 10196   003AAC                     u6890:
 10197   003AAC                     l5374:
 10198   003AAC  0E01               	movlw	1
 10199   003AAE  6E23               	movwf	___fldiv@aexp^0,c
 10200   003AB0  EF63  F01D         	goto	l745
 10201   003AB4                     l746:
 10202   003AB4  A00B               	btfss	___fldiv@b^0,0,c
 10203   003AB6  EF5F  F01D         	goto	u6901
 10204   003ABA  EF61  F01D         	goto	u6900
 10205   003ABE                     u6901:
 10206   003ABE  EF63  F01D         	goto	l745
 10207   003AC2                     u6900:
 10208   003AC2  EF56  F01D         	goto	l5374
 10209   003AC6                     l745:
 10210   003AC6  5023               	movf	___fldiv@aexp^0,w,c
 10211   003AC8  B4D8               	btfsc	status,2,c
 10212   003ACA  EF69  F01D         	goto	u6911
 10213   003ACE  EF6B  F01D         	goto	u6910
 10214   003AD2                     u6911:
 10215   003AD2  EF8F  F01D         	goto	l5386
 10216   003AD6                     u6910:
 10217   003AD6  0E01               	movlw	1
 10218   003AD8  260B               	addwf	___fldiv@b^0,f,c
 10219   003ADA  0E00               	movlw	0
 10220   003ADC  220C               	addwfc	(___fldiv@b+1)^0,f,c
 10221   003ADE  220D               	addwfc	(___fldiv@b+2)^0,f,c
 10222   003AE0  220E               	addwfc	(___fldiv@b+3)^0,f,c
 10223   003AE2  A00E               	btfss	(___fldiv@b+3)^0,0,c
 10224   003AE4  EF76  F01D         	goto	u6921
 10225   003AE8  EF78  F01D         	goto	u6920
 10226   003AEC                     u6921:
 10227   003AEC  EF8F  F01D         	goto	l5386
 10228   003AF0                     u6920:
 10229   003AF0  C00B  F013         	movff	___fldiv@b,??___fldiv
 10230   003AF4  C00C  F014         	movff	___fldiv@b+1,??___fldiv+1
 10231   003AF8  C00D  F015         	movff	___fldiv@b+2,??___fldiv+2
 10232   003AFC  C00E  F016         	movff	___fldiv@b+3,??___fldiv+3
 10233   003B00  3416               	rlcf	(??___fldiv+3)^0,w,c
 10234   003B02  3216               	rrcf	(??___fldiv+3)^0,f,c
 10235   003B04  3215               	rrcf	(??___fldiv+2)^0,f,c
 10236   003B06  3214               	rrcf	(??___fldiv+1)^0,f,c
 10237   003B08  3213               	rrcf	??___fldiv^0,f,c
 10238   003B0A  C013  F00B         	movff	??___fldiv,___fldiv@b
 10239   003B0E  C014  F00C         	movff	??___fldiv+1,___fldiv@b+1
 10240   003B12  C015  F00D         	movff	??___fldiv+2,___fldiv@b+2
 10241   003B16  C016  F00E         	movff	??___fldiv+3,___fldiv@b+3
 10242   003B1A  4A1C               	infsnz	___fldiv@new_exp^0,f,c
 10243   003B1C  2A1D               	incf	(___fldiv@new_exp+1)^0,f,c
 10244   003B1E                     l5386:
 10245   003B1E  BE1D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10246   003B20  EF9A  F01D         	goto	u6931
 10247   003B24  501D               	movf	(___fldiv@new_exp+1)^0,w,c
 10248   003B26  E108               	bnz	u6930
 10249   003B28  281C               	incf	___fldiv@new_exp^0,w,c
 10250   003B2A  A0D8               	btfss	status,0,c
 10251   003B2C  EF9A  F01D         	goto	u6931
 10252   003B30  EF9C  F01D         	goto	u6930
 10253   003B34                     u6931:
 10254   003B34  EFA7  F01D         	goto	l5390
 10255   003B38                     u6930:
 10256   003B38  0E00               	movlw	0
 10257   003B3A  6E1D               	movwf	(___fldiv@new_exp+1)^0,c
 10258   003B3C  681C               	setf	___fldiv@new_exp^0,c
 10259   003B3E  0E00               	movlw	0
 10260   003B40  6E0B               	movwf	___fldiv@b^0,c
 10261   003B42  0E00               	movlw	0
 10262   003B44  6E0C               	movwf	(___fldiv@b+1)^0,c
 10263   003B46  0E00               	movlw	0
 10264   003B48  6E0D               	movwf	(___fldiv@b+2)^0,c
 10265   003B4A  0E00               	movlw	0
 10266   003B4C  6E0E               	movwf	(___fldiv@b+3)^0,c
 10267   003B4E                     l5390:
 10268   003B4E  BE1D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10269   003B50  EFB4  F01D         	goto	u6940
 10270   003B54  501D               	movf	(___fldiv@new_exp+1)^0,w,c
 10271   003B56  E106               	bnz	u6941
 10272   003B58  041C               	decf	___fldiv@new_exp^0,w,c
 10273   003B5A  B0D8               	btfsc	status,0,c
 10274   003B5C  EFB2  F01D         	goto	u6941
 10275   003B60  EFB4  F01D         	goto	u6940
 10276   003B64                     u6941:
 10277   003B64  EFC2  F01D         	goto	l5394
 10278   003B68                     u6940:
 10279   003B68  0E00               	movlw	0
 10280   003B6A  6E1D               	movwf	(___fldiv@new_exp+1)^0,c
 10281   003B6C  0E00               	movlw	0
 10282   003B6E  6E1C               	movwf	___fldiv@new_exp^0,c
 10283   003B70  0E00               	movlw	0
 10284   003B72  6E0B               	movwf	___fldiv@b^0,c
 10285   003B74  0E00               	movlw	0
 10286   003B76  6E0C               	movwf	(___fldiv@b+1)^0,c
 10287   003B78  0E00               	movlw	0
 10288   003B7A  6E0D               	movwf	(___fldiv@b+2)^0,c
 10289   003B7C  0E00               	movlw	0
 10290   003B7E  6E0E               	movwf	(___fldiv@b+3)^0,c
 10291   003B80  0E00               	movlw	0
 10292   003B82  6E1B               	movwf	___fldiv@sign^0,c
 10293   003B84                     l5394:
 10294   003B84  C01C  F022         	movff	___fldiv@new_exp,___fldiv@bexp
 10295   003B88  A022               	btfss	___fldiv@bexp^0,0,c
 10296   003B8A  EFC9  F01D         	goto	u6951
 10297   003B8E  EFCB  F01D         	goto	u6950
 10298   003B92                     u6951:
 10299   003B92  EFCE  F01D         	goto	l5400
 10300   003B96                     u6950:
 10301   003B96  8E0D               	bsf	(___fldiv@b+2)^0,7,c
 10302   003B98  EFCF  F01D         	goto	l5402
 10303   003B9C                     l5400:
 10304   003B9C  9E0D               	bcf	(___fldiv@b+2)^0,7,c
 10305   003B9E                     l5402:
 10306   003B9E  90D8               	bcf	status,0,c
 10307   003BA0  3022               	rrcf	___fldiv@bexp^0,w,c
 10308   003BA2  6E0E               	movwf	(___fldiv@b+3)^0,c
 10309   003BA4  EF85  F01C         	goto	l5316
 10310   003BA8                     l732:
 10311   003BA8  0012               	return		;funcret
 10312   003BAA                     __end_of___fldiv:
 10313                           	callstack 0
 10314                           
 10315 ;; *************** function _settings *****************
 10316 ;; Defined at:
 10317 ;;		line 48 in file "main.c"
 10318 ;; Parameters:    Size  Location     Type
 10319 ;;		None
 10320 ;; Auto vars:     Size  Location     Type
 10321 ;;		None
 10322 ;; Return value:  Size  Location     Type
 10323 ;;                  1    wreg      void 
 10324 ;; Registers used:
 10325 ;;		wreg, status,2, status,0, cstack
 10326 ;; Tracked objects:
 10327 ;;		On entry : 0/0
 10328 ;;		On exit  : 0/0
 10329 ;;		Unchanged: 0/0
 10330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10335 ;;Total ram usage:        0 bytes
 10336 ;; Hardware stack levels used: 1
 10337 ;; Hardware stack levels required when called: 5
 10338 ;; This function calls:
 10339 ;;		_SettingsLCD
 10340 ;; This function is called by:
 10341 ;;		_main
 10342 ;; This function uses a non-reentrant model
 10343 ;;
 10344                           
 10345                           	psect	text37
 10346   004B2E                     __ptext37:
 10347                           	callstack 0
 10348   004B2E                     _settings:
 10349                           	callstack 25
 10350   004B2E                     
 10351                           ;main.c: 49:     OSCCON = 0x72;
 10352   004B2E  0E72               	movlw	114
 10353   004B30  6ED3               	movwf	211,c	;volatile
 10354                           
 10355                           ;main.c: 50:     ANSELC = 0x00;
 10356   004B32  0E00               	movlw	0
 10357   004B34  010F               	movlb	15	; () banked
 10358   004B36  6F3A               	movwf	58,b	;volatile
 10359                           
 10360                           ;main.c: 51:     ANSELD = 0x00;
 10361   004B38  0E00               	movlw	0
 10362   004B3A  6F3B               	movwf	59,b	;volatile
 10363                           
 10364                           ;main.c: 52:     ANSELE = 0x00;
 10365   004B3C  0E00               	movlw	0
 10366   004B3E  6F3C               	movwf	60,b	;volatile
 10367   004B40                     
 10368                           ; BSR set to: 15
 10369                           ;main.c: 53:     TRISCbits.RC5 = 0;
 10370   004B40  9A94               	bcf	148,5,c	;volatile
 10371   004B42                     
 10372                           ; BSR set to: 15
 10373                           ;main.c: 54:     LATCbits.LC5 = 0;
 10374   004B42  9A8B               	bcf	139,5,c	;volatile
 10375                           
 10376                           ;main.c: 55:     TRISD = 0x00;
 10377   004B44  0E00               	movlw	0
 10378   004B46  6E95               	movwf	149,c	;volatile
 10379                           
 10380                           ;main.c: 56:     TRISE = 0x00;
 10381   004B48  0E00               	movlw	0
 10382   004B4A  6E96               	movwf	150,c	;volatile
 10383                           
 10384                           ;main.c: 57:     LATD = 0x00;
 10385   004B4C  0E00               	movlw	0
 10386   004B4E  6E8C               	movwf	140,c	;volatile
 10387                           
 10388                           ;main.c: 58:     LATE = 0x00;
 10389   004B50  0E00               	movlw	0
 10390   004B52  6E8D               	movwf	141,c	;volatile
 10391   004B54                     
 10392                           ; BSR set to: 15
 10393                           ;main.c: 61:     SettingsLCD(0x02);
 10394   004B54  0E02               	movlw	2
 10395   004B56  ECBD  F027         	call	_SettingsLCD
 10396   004B5A                     
 10397                           ;main.c: 62:     SettingsLCD(0x06);
 10398   004B5A  0E06               	movlw	6
 10399   004B5C  ECBD  F027         	call	_SettingsLCD
 10400   004B60                     
 10401                           ;main.c: 63:     SettingsLCD(0x0F);
 10402   004B60  0E0F               	movlw	15
 10403   004B62  ECBD  F027         	call	_SettingsLCD
 10404   004B66                     
 10405                           ;main.c: 64:     SettingsLCD(0x28);
 10406   004B66  0E28               	movlw	40
 10407   004B68  ECBD  F027         	call	_SettingsLCD
 10408   004B6C                     
 10409                           ;main.c: 65:     SettingsLCD(0x01);
 10410   004B6C  0E01               	movlw	1
 10411   004B6E  ECBD  F027         	call	_SettingsLCD
 10412   004B72                     
 10413                           ;main.c: 68:     TRISCbits.RC7 = 1;
 10414   004B72  8E94               	bsf	148,7,c	;volatile
 10415   004B74                     
 10416                           ;main.c: 69:     TRISCbits.RC6 = 0;
 10417   004B74  9C94               	bcf	148,6,c	;volatile
 10418   004B76                     
 10419                           ;main.c: 70:     SPBRG1 = 0x19;
 10420   004B76  0E19               	movlw	25
 10421   004B78  6EAF               	movwf	175,c	;volatile
 10422   004B7A                     
 10423                           ;main.c: 71:     RCSTA1 = 0x90;
 10424   004B7A  0E90               	movlw	144
 10425   004B7C  6EAB               	movwf	171,c	;volatile
 10426   004B7E                     
 10427                           ;main.c: 72:     TXSTA1 = 0x20;
 10428   004B7E  0E20               	movlw	32
 10429   004B80  6EAC               	movwf	172,c	;volatile
 10430   004B82                     
 10431                           ;main.c: 75:     GIE = 1;
 10432   004B82  8EF2               	bsf	4082,7,c	;volatile
 10433   004B84                     
 10434                           ;main.c: 76:     PEIE = 1;
 10435   004B84  8CF2               	bsf	4082,6,c	;volatile
 10436   004B86                     
 10437                           ;main.c: 77:     RCIE = 1;
 10438   004B86  8A9D               	bsf	3997,5,c	;volatile
 10439   004B88                     
 10440                           ;main.c: 78:     RCIF = 0;
 10441   004B88  9A9E               	bcf	3998,5,c	;volatile
 10442   004B8A  0012               	return		;funcret
 10443   004B8C                     __end_of_settings:
 10444                           	callstack 0
 10445                           
 10446 ;; *************** function _SettingsLCD *****************
 10447 ;; Defined at:
 10448 ;;		line 191 in file "main.c"
 10449 ;; Parameters:    Size  Location     Type
 10450 ;;  word            1    wreg     unsigned char 
 10451 ;; Auto vars:     Size  Location     Type
 10452 ;;  word            1   11[COMRAM] unsigned char 
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  1    wreg      void 
 10455 ;; Registers used:
 10456 ;;		wreg, status,2, status,0, cstack
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10465 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10466 ;;Total ram usage:        1 bytes
 10467 ;; Hardware stack levels used: 1
 10468 ;; Hardware stack levels required when called: 4
 10469 ;; This function calls:
 10470 ;;		_LCD
 10471 ;; This function is called by:
 10472 ;;		_settings
 10473 ;;		_main
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text38
 10478   004F7A                     __ptext38:
 10479                           	callstack 0
 10480   004F7A                     _SettingsLCD:
 10481                           	callstack 25
 10482                           
 10483                           ;incstack = 0
 10484                           ;SettingsLCD@word stored from wreg
 10485   004F7A  6E0C               	movwf	SettingsLCD@word^0,c
 10486   004F7C                     
 10487                           ;main.c: 192:     LATE1 = 0;
 10488   004F7C  928D               	bcf	3981,1,c	;volatile
 10489   004F7E                     
 10490                           ;main.c: 193:     LCD(word >> 4);
 10491   004F7E  380C               	swapf	SettingsLCD@word^0,w,c
 10492   004F80  0B0F               	andlw	15
 10493   004F82  EC7C  F027         	call	_LCD
 10494                           
 10495                           ;main.c: 194:     LCD(word & 0x0F);
 10496   004F86  500C               	movf	SettingsLCD@word^0,w,c
 10497   004F88  0B0F               	andlw	15
 10498   004F8A  EC7C  F027         	call	_LCD
 10499   004F8E  0012               	return		;funcret
 10500   004F90                     __end_of_SettingsLCD:
 10501                           	callstack 0
 10502                           
 10503 ;; *************** function _LCD *****************
 10504 ;; Defined at:
 10505 ;;		line 203 in file "main.c"
 10506 ;; Parameters:    Size  Location     Type
 10507 ;;  data            1    wreg     unsigned char 
 10508 ;; Auto vars:     Size  Location     Type
 10509 ;;  data            1   10[COMRAM] unsigned char 
 10510 ;; Return value:  Size  Location     Type
 10511 ;;                  1    wreg      void 
 10512 ;; Registers used:
 10513 ;;		wreg, status,2, cstack
 10514 ;; Tracked objects:
 10515 ;;		On entry : 0/0
 10516 ;;		On exit  : 0/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10523 ;;Total ram usage:        1 bytes
 10524 ;; Hardware stack levels used: 1
 10525 ;; Hardware stack levels required when called: 3
 10526 ;; This function calls:
 10527 ;;		Nothing
 10528 ;; This function is called by:
 10529 ;;		_SettingsLCD
 10530 ;; This function uses a non-reentrant model
 10531 ;;
 10532                           
 10533                           	psect	text39
 10534   004EF8                     __ptext39:
 10535                           	callstack 0
 10536   004EF8                     _LCD:
 10537                           	callstack 25
 10538                           
 10539                           ;incstack = 0
 10540                           ;LCD@data stored from wreg
 10541   004EF8  6E0B               	movwf	LCD@data^0,c
 10542   004EFA                     
 10543                           ;main.c: 204:     LATE0 = 1;
 10544   004EFA  808D               	bsf	3981,0,c	;volatile
 10545   004EFC                     
 10546                           ;main.c: 205:     _delay((unsigned long)((10)*(16000000/4000000.0)));
 10547   004EFC  0E0D               	movlw	13
 10548   004EFE                     u9177:
 10549   004EFE  2EE8               	decfsz	wreg,f,c
 10550   004F00  D7FE               	bra	u9177
 10551   004F02  F000               	nop	
 10552   004F04                     
 10553                           ;main.c: 206:     LATD = data;
 10554   004F04  C00B  FF8C         	movff	LCD@data,3980	;volatile
 10555   004F08                     
 10556                           ;main.c: 207:     _delay((unsigned long)((10)*(16000000/4000000.0)));
 10557   004F08  0E0D               	movlw	13
 10558   004F0A                     u9187:
 10559   004F0A  2EE8               	decfsz	wreg,f,c
 10560   004F0C  D7FE               	bra	u9187
 10561   004F0E  F000               	nop	
 10562   004F10                     
 10563                           ;main.c: 208:     LATE0 = 0;
 10564   004F10  908D               	bcf	3981,0,c	;volatile
 10565   004F12                     
 10566                           ;main.c: 209:     _delay((unsigned long)((10)*(16000000/4000000.0)));
 10567   004F12  0E0D               	movlw	13
 10568   004F14                     u9197:
 10569   004F14  2EE8               	decfsz	wreg,f,c
 10570   004F16  D7FE               	bra	u9197
 10571   004F18  F000               	nop	
 10572   004F1A  0012               	return		;funcret
 10573   004F1C                     __end_of_LCD:
 10574                           	callstack 0
 10575                           
 10576 ;; *************** function _UART1_Write_String *****************
 10577 ;; Defined at:
 10578 ;;		line 217 in file "main.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;  text            2   11[COMRAM] PTR const unsigned char 
 10581 ;;		 -> STR_11(20), STR_6(29), main@lcdBuffer(20), main@buffer(20), 
 10582 ;;		 -> STR_1(31), 
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;		None
 10585 ;; Return value:  Size  Location     Type
 10586 ;;                  1    wreg      void 
 10587 ;; Registers used:
 10588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10589 ;; Tracked objects:
 10590 ;;		On entry : 0/0
 10591 ;;		On exit  : 0/0
 10592 ;;		Unchanged: 0/0
 10593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10598 ;;Total ram usage:        2 bytes
 10599 ;; Hardware stack levels used: 1
 10600 ;; Hardware stack levels required when called: 4
 10601 ;; This function calls:
 10602 ;;		_UART1_Write_Char
 10603 ;; This function is called by:
 10604 ;;		_main
 10605 ;; This function uses a non-reentrant model
 10606 ;;
 10607                           
 10608                           	psect	text40
 10609   004A0A                     __ptext40:
 10610                           	callstack 0
 10611   004A0A                     _UART1_Write_String:
 10612                           	callstack 26
 10613   004A0A                     
 10614                           ;main.c: 218:     while (*text != '\0') {
 10615   004A0A  EF1C  F025         	goto	l4398
 10616   004A0E                     l4394:
 10617                           
 10618                           ;main.c: 219:         UART1_Write_Char(*text);
 10619   004A0E  C00C  FFF6         	movff	UART1_Write_String@text,tblptrl
 10620   004A12  C00D  FFF7         	movff	UART1_Write_String@text+1,tblptrh
 10621   004A16  0E00               	movlw	low (__smallconst shr (0+16))
 10622   004A18  6EF8               	movwf	tblptru,c
 10623   004A1A  0E0F               	movlw	(high __ramtop+-1)
 10624   004A1C  64F7               	cpfsgt	tblptrh,c
 10625   004A1E  D003               	bra	u5077
 10626   004A20  0008               	tblrd		*
 10627   004A22  50F5               	movf	tablat,w,c
 10628   004A24  D005               	bra	u5070
 10629   004A26                     u5077:
 10630   004A26  CFF6 FFE1          	movff	tblptrl,fsr1l
 10631   004A2A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10632   004A2E  50E7               	movf	indf1,w,c
 10633   004A30                     u5070:
 10634   004A30  ECC8  F027         	call	_UART1_Write_Char
 10635   004A34                     
 10636                           ;main.c: 220:         text++;
 10637   004A34  4A0C               	infsnz	UART1_Write_String@text^0,f,c
 10638   004A36  2A0D               	incf	(UART1_Write_String@text+1)^0,f,c
 10639   004A38                     l4398:
 10640                           
 10641                           ;main.c: 218:     while (*text != '\0') {
 10642   004A38  C00C  FFF6         	movff	UART1_Write_String@text,tblptrl
 10643   004A3C  C00D  FFF7         	movff	UART1_Write_String@text+1,tblptrh
 10644   004A40  0E00               	movlw	low (__smallconst shr (0+16))
 10645   004A42  6EF8               	movwf	tblptru,c
 10646   004A44  0E0F               	movlw	(high __ramtop+-1)
 10647   004A46  64F7               	cpfsgt	tblptrh,c
 10648   004A48  D003               	bra	u5087
 10649   004A4A  0008               	tblrd		*
 10650   004A4C  50F5               	movf	tablat,w,c
 10651   004A4E  D005               	bra	u5080
 10652   004A50                     u5087:
 10653   004A50  CFF6 FFE1          	movff	tblptrl,fsr1l
 10654   004A54  CFF7 FFE2          	movff	tblptrh,fsr1h
 10655   004A58  50E7               	movf	indf1,w,c
 10656   004A5A                     u5080:
 10657   004A5A  0900               	iorlw	0
 10658   004A5C  A4D8               	btfss	status,2,c
 10659   004A5E  EF33  F025         	goto	u5091
 10660   004A62  EF35  F025         	goto	u5090
 10661   004A66                     u5091:
 10662   004A66  EF07  F025         	goto	l4394
 10663   004A6A                     u5090:
 10664   004A6A  0012               	return		;funcret
 10665   004A6C                     __end_of_UART1_Write_String:
 10666                           	callstack 0
 10667                           
 10668 ;; *************** function _UART1_Write_Char *****************
 10669 ;; Defined at:
 10670 ;;		line 212 in file "main.c"
 10671 ;; Parameters:    Size  Location     Type
 10672 ;;  data            1    wreg     unsigned char 
 10673 ;; Auto vars:     Size  Location     Type
 10674 ;;  data            1   10[COMRAM] unsigned char 
 10675 ;; Return value:  Size  Location     Type
 10676 ;;                  1    wreg      void 
 10677 ;; Registers used:
 10678 ;;		wreg
 10679 ;; Tracked objects:
 10680 ;;		On entry : 0/0
 10681 ;;		On exit  : 0/0
 10682 ;;		Unchanged: 0/0
 10683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10688 ;;Total ram usage:        1 bytes
 10689 ;; Hardware stack levels used: 1
 10690 ;; Hardware stack levels required when called: 3
 10691 ;; This function calls:
 10692 ;;		Nothing
 10693 ;; This function is called by:
 10694 ;;		_main
 10695 ;;		_UART1_Write_String
 10696 ;; This function uses a non-reentrant model
 10697 ;;
 10698                           
 10699                           	psect	text41
 10700   004F90                     __ptext41:
 10701                           	callstack 0
 10702   004F90                     _UART1_Write_Char:
 10703                           	callstack 26
 10704                           
 10705                           ;incstack = 0
 10706                           ;UART1_Write_Char@data stored from wreg
 10707   004F90  6E0B               	movwf	UART1_Write_Char@data^0,c
 10708   004F92                     l116:
 10709   004F92  A89E               	btfss	3998,4,c	;volatile
 10710   004F94  EFCE  F027         	goto	u4821
 10711   004F98  EFD0  F027         	goto	u4820
 10712   004F9C                     u4821:
 10713   004F9C  EFC9  F027         	goto	l116
 10714   004FA0                     u4820:
 10715   004FA0                     
 10716                           ;main.c: 214:     TXREG1 = data;
 10717   004FA0  C00B  FFAD         	movff	UART1_Write_Char@data,4013	;volatile
 10718   004FA4  0012               	return		;funcret
 10719   004FA6                     __end_of_UART1_Write_Char:
 10720                           	callstack 0
 10721                           
 10722 ;; *************** function _UART1_Read_Char *****************
 10723 ;; Defined at:
 10724 ;;		line 224 in file "main.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;		None
 10727 ;; Auto vars:     Size  Location     Type
 10728 ;;		None
 10729 ;; Return value:  Size  Location     Type
 10730 ;;                  1    wreg      unsigned char 
 10731 ;; Registers used:
 10732 ;;		wreg, status,2
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10742 ;;Total ram usage:        0 bytes
 10743 ;; Hardware stack levels used: 1
 10744 ;; Hardware stack levels required when called: 3
 10745 ;; This function calls:
 10746 ;;		Nothing
 10747 ;; This function is called by:
 10748 ;;		_main
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           	psect	text42
 10753   004F62                     __ptext42:
 10754                           	callstack 0
 10755   004F62                     _UART1_Read_Char:
 10756                           	callstack 27
 10757   004F62                     
 10758                           ;main.c: 225:     if (RC1IF) {
 10759   004F62  AA9E               	btfss	3998,5,c	;volatile
 10760   004F64  EFB6  F027         	goto	u5061
 10761   004F68  EFB8  F027         	goto	u5060
 10762   004F6C                     u5061:
 10763   004F6C  EFBB  F027         	goto	l4388
 10764   004F70                     u5060:
 10765   004F70                     
 10766                           ;main.c: 226:         return RCREG1;
 10767   004F70  50AE               	movf	174,w,c	;volatile
 10768   004F72  EFBC  F027         	goto	l129
 10769   004F76                     l4388:
 10770                           
 10771                           ;main.c: 228:         return '\0';
 10772   004F76  0E00               	movlw	0
 10773   004F78                     l129:
 10774   004F78  0012               	return		;funcret
 10775   004F7A                     __end_of_UART1_Read_Char:
 10776                           	callstack 0
 10777                           
 10778 ;; *************** function _RXTX *****************
 10779 ;; Defined at:
 10780 ;;		line 232 in file "main.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;		None
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;  receivedChar    1    9[COMRAM] unsigned char 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  1    wreg      void 
 10787 ;; Registers used:
 10788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10796 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10797 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10798 ;;Total ram usage:        7 bytes
 10799 ;; Hardware stack levels used: 1
 10800 ;; Hardware stack levels required when called: 2
 10801 ;; This function calls:
 10802 ;;		_WriteLCD
 10803 ;;		i2_SettingsLCD
 10804 ;;		i2_UART1_Write_Char
 10805 ;;		i2_UART1_Write_String
 10806 ;; This function is called by:
 10807 ;;		Interrupt level 2
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           	psect	intcode
 10812   000008                     __pintcode:
 10813                           	callstack 0
 10814   000008                     _RXTX:
 10815                           	callstack 20
 10816                           
 10817                           ;incstack = 0
 10818   000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10819   00000A  CFE1 F004          	movff	fsr1l,??_RXTX
 10820   00000E  CFE2 F005          	movff	fsr1h,??_RXTX+1
 10821   000012  CFF6 F006          	movff	tblptrl,??_RXTX+2
 10822   000016  CFF7 F007          	movff	tblptrh,??_RXTX+3
 10823   00001A  CFF8 F008          	movff	tblptru,??_RXTX+4
 10824   00001E  CFF5 F009          	movff	tablat,??_RXTX+5
 10825   000022                     
 10826                           ;main.c: 233:     if (RC1IF) {
 10827   000022  AA9E               	btfss	3998,5,c	;volatile
 10828   000024  EF16  F000         	goto	i2u622_41
 10829   000028  EF18  F000         	goto	i2u622_40
 10830   00002C                     i2u622_41:
 10831   00002C  EF68  F000         	goto	i2l147
 10832   000030                     i2u622_40:
 10833   000030                     
 10834                           ;main.c: 234:         char receivedChar = RCREG1;
 10835   000030  CFAE F00A          	movff	4014,RXTX@receivedChar	;volatile
 10836   000034                     
 10837                           ;main.c: 235:         if (receivedChar == 'M' || receivedChar == 'm') {
 10838   000034  0E4D               	movlw	77
 10839   000036  180A               	xorwf	RXTX@receivedChar^0,w,c
 10840   000038  B4D8               	btfsc	status,2,c
 10841   00003A  EF21  F000         	goto	i2u623_41
 10842   00003E  EF23  F000         	goto	i2u623_40
 10843   000042                     i2u623_41:
 10844   000042  EF2C  F000         	goto	i2l4966
 10845   000046                     i2u623_40:
 10846   000046  0E6D               	movlw	109
 10847   000048  180A               	xorwf	RXTX@receivedChar^0,w,c
 10848   00004A  A4D8               	btfss	status,2,c
 10849   00004C  EF2A  F000         	goto	i2u624_41
 10850   000050  EF2C  F000         	goto	i2u624_40
 10851   000054                     i2u624_41:
 10852   000054  EF34  F000         	goto	i2l4968
 10853   000058                     i2u624_40:
 10854   000058                     i2l4966:
 10855                           
 10856                           ;main.c: 236:             SettingsLCD(0x80);
 10857   000058  0E80               	movlw	128
 10858   00005A  ECDE  F027         	call	i2_SettingsLCD
 10859                           
 10860                           ;main.c: 237:             WriteLCD(receivedChar);
 10861   00005E  500A               	movf	RXTX@receivedChar^0,w,c
 10862   000060  ECE9  F027         	call	_WriteLCD
 10863                           
 10864                           ;main.c: 238:         } else if (receivedChar == 'A' || receivedChar == 'a') {
 10865   000064  EF68  F000         	goto	i2l147
 10866   000068                     i2l4968:
 10867   000068  0E41               	movlw	65
 10868   00006A  180A               	xorwf	RXTX@receivedChar^0,w,c
 10869   00006C  B4D8               	btfsc	status,2,c
 10870   00006E  EF3B  F000         	goto	i2u625_41
 10871   000072  EF3D  F000         	goto	i2u625_40
 10872   000076                     i2u625_41:
 10873   000076  EF46  F000         	goto	i2l4972
 10874   00007A                     i2u625_40:
 10875   00007A  0E61               	movlw	97
 10876   00007C  180A               	xorwf	RXTX@receivedChar^0,w,c
 10877   00007E  A4D8               	btfss	status,2,c
 10878   000080  EF44  F000         	goto	i2u626_41
 10879   000084  EF46  F000         	goto	i2u626_40
 10880   000088                     i2u626_41:
 10881   000088  EF51  F000         	goto	i2l4976
 10882   00008C                     i2u626_40:
 10883   00008C                     i2l4972:
 10884                           
 10885                           ;main.c: 239:             UART1_Write_String("Enviar coordenadas:");
 10886   00008C  0E73               	movlw	low STR_11
 10887   00008E  6E02               	movwf	i2UART1_Write_String@text^0,c
 10888   000090  0E10               	movlw	high STR_11
 10889   000092  6E03               	movwf	(i2UART1_Write_String@text+1)^0,c
 10890   000094  EC36  F025         	call	i2_UART1_Write_String	;wreg free
 10891   000098                     
 10892                           ;main.c: 240:             UART1_Write_Char(0x0D);
 10893   000098  0E0D               	movlw	13
 10894   00009A  ECD3  F027         	call	i2_UART1_Write_Char
 10895                           
 10896                           ;main.c: 241:         } else if (receivedChar == 'S' || receivedChar == 's') {
 10897   00009E  EF68  F000         	goto	i2l147
 10898   0000A2                     i2l4976:
 10899   0000A2  0E53               	movlw	83
 10900   0000A4  180A               	xorwf	RXTX@receivedChar^0,w,c
 10901   0000A6  B4D8               	btfsc	status,2,c
 10902   0000A8  EF58  F000         	goto	i2u627_41
 10903   0000AC  EF5A  F000         	goto	i2u627_40
 10904   0000B0                     i2u627_41:
 10905   0000B0  EF63  F000         	goto	i2l4980
 10906   0000B4                     i2u627_40:
 10907   0000B4  0E73               	movlw	115
 10908   0000B6  180A               	xorwf	RXTX@receivedChar^0,w,c
 10909   0000B8  A4D8               	btfss	status,2,c
 10910   0000BA  EF61  F000         	goto	i2u628_41
 10911   0000BE  EF63  F000         	goto	i2u628_40
 10912   0000C2                     i2u628_41:
 10913   0000C2  EF68  F000         	goto	i2l139
 10914   0000C6                     i2u628_40:
 10915   0000C6                     i2l4980:
 10916                           
 10917                           ;main.c: 242:             mode = 'S';
 10918   0000C6  0E53               	movlw	83
 10919   0000C8  0101               	movlb	1	; () banked
 10920   0000CA  6F10               	movwf	_mode& (0+255),b
 10921   0000CC  EF68  F000         	goto	i2l147
 10922   0000D0                     i2l139:
 10923   0000D0                     i2l147:
 10924   0000D0  C009  FFF5         	movff	??_RXTX+5,tablat
 10925   0000D4  C008  FFF8         	movff	??_RXTX+4,tblptru
 10926   0000D8  C007  FFF7         	movff	??_RXTX+3,tblptrh
 10927   0000DC  C006  FFF6         	movff	??_RXTX+2,tblptrl
 10928   0000E0  C005  FFE2         	movff	??_RXTX+1,fsr1h
 10929   0000E4  C004  FFE1         	movff	??_RXTX,fsr1l
 10930   0000E8  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10931   0000EA  0011               	retfie		f
 10932   0000EC                     __end_of_RXTX:
 10933                           	callstack 0
 10934                           
 10935 ;; *************** function i2_UART1_Write_String *****************
 10936 ;; Defined at:
 10937 ;;		line 217 in file "main.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;  text            2    1[COMRAM] PTR const unsigned char 
 10940 ;;		 -> STR_11(20), STR_6(29), main@lcdBuffer(20), main@buffer(20), 
 10941 ;;		 -> STR_1(31), 
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;		None
 10944 ;; Return value:  Size  Location     Type
 10945 ;;                  1    wreg      void 
 10946 ;; Registers used:
 10947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10948 ;; Tracked objects:
 10949 ;;		On entry : 0/0
 10950 ;;		On exit  : 0/0
 10951 ;;		Unchanged: 0/0
 10952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;Total ram usage:        2 bytes
 10958 ;; Hardware stack levels used: 1
 10959 ;; Hardware stack levels required when called: 1
 10960 ;; This function calls:
 10961 ;;		i2_UART1_Write_Char
 10962 ;; This function is called by:
 10963 ;;		_RXTX
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           
 10967                           	psect	text44
 10968   004A6C                     __ptext44:
 10969                           	callstack 0
 10970   004A6C                     i2_UART1_Write_String:
 10971                           	callstack 20
 10972   004A6C                     
 10973                           ;main.c: 218:     while (*text != '\0') {
 10974   004A6C  EF4D  F025         	goto	i2l4862
 10975   004A70                     i2l4858:
 10976                           
 10977                           ;main.c: 219:         UART1_Write_Char(*text);
 10978   004A70  C002  FFF6         	movff	i2UART1_Write_String@text,tblptrl
 10979   004A74  C003  FFF7         	movff	i2UART1_Write_String@text+1,tblptrh
 10980   004A78  0E00               	movlw	low (__smallconst shr (0+16))
 10981   004A7A  6EF8               	movwf	tblptru,c
 10982   004A7C  0E0F               	movlw	(high __ramtop+-1)
 10983   004A7E  64F7               	cpfsgt	tblptrh,c
 10984   004A80  D003               	bra	i2u607_47
 10985   004A82  0008               	tblrd		*
 10986   004A84  50F5               	movf	tablat,w,c
 10987   004A86  D005               	bra	i2u607_40
 10988   004A88                     i2u607_47:
 10989   004A88  CFF6 FFE1          	movff	tblptrl,fsr1l
 10990   004A8C  CFF7 FFE2          	movff	tblptrh,fsr1h
 10991   004A90  50E7               	movf	indf1,w,c
 10992   004A92                     i2u607_40:
 10993   004A92  ECD3  F027         	call	i2_UART1_Write_Char
 10994   004A96                     
 10995                           ;main.c: 220:         text++;
 10996   004A96  4A02               	infsnz	i2UART1_Write_String@text^0,f,c
 10997   004A98  2A03               	incf	(i2UART1_Write_String@text+1)^0,f,c
 10998   004A9A                     i2l4862:
 10999                           
 11000                           ;main.c: 218:     while (*text != '\0') {
 11001   004A9A  C002  FFF6         	movff	i2UART1_Write_String@text,tblptrl
 11002   004A9E  C003  FFF7         	movff	i2UART1_Write_String@text+1,tblptrh
 11003   004AA2  0E00               	movlw	low (__smallconst shr (0+16))
 11004   004AA4  6EF8               	movwf	tblptru,c
 11005   004AA6  0E0F               	movlw	(high __ramtop+-1)
 11006   004AA8  64F7               	cpfsgt	tblptrh,c
 11007   004AAA  D003               	bra	i2u608_47
 11008   004AAC  0008               	tblrd		*
 11009   004AAE  50F5               	movf	tablat,w,c
 11010   004AB0  D005               	bra	i2u608_40
 11011   004AB2                     i2u608_47:
 11012   004AB2  CFF6 FFE1          	movff	tblptrl,fsr1l
 11013   004AB6  CFF7 FFE2          	movff	tblptrh,fsr1h
 11014   004ABA  50E7               	movf	indf1,w,c
 11015   004ABC                     i2u608_40:
 11016   004ABC  0900               	iorlw	0
 11017   004ABE  A4D8               	btfss	status,2,c
 11018   004AC0  EF64  F025         	goto	i2u609_41
 11019   004AC4  EF66  F025         	goto	i2u609_40
 11020   004AC8                     i2u609_41:
 11021   004AC8  EF38  F025         	goto	i2l4858
 11022   004ACC                     i2u609_40:
 11023   004ACC  0012               	return		;funcret
 11024   004ACE                     __end_ofi2_UART1_Write_String:
 11025                           	callstack 0
 11026                           
 11027 ;; *************** function i2_UART1_Write_Char *****************
 11028 ;; Defined at:
 11029 ;;		line 212 in file "main.c"
 11030 ;; Parameters:    Size  Location     Type
 11031 ;;  data            1    wreg     unsigned char 
 11032 ;; Auto vars:     Size  Location     Type
 11033 ;;  data            1    0[COMRAM] unsigned char 
 11034 ;; Return value:  Size  Location     Type
 11035 ;;                  1    wreg      void 
 11036 ;; Registers used:
 11037 ;;		wreg
 11038 ;; Tracked objects:
 11039 ;;		On entry : 0/0
 11040 ;;		On exit  : 0/0
 11041 ;;		Unchanged: 0/0
 11042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11046 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11047 ;;Total ram usage:        1 bytes
 11048 ;; Hardware stack levels used: 1
 11049 ;; This function calls:
 11050 ;;		Nothing
 11051 ;; This function is called by:
 11052 ;;		_RXTX
 11053 ;;		i2_UART1_Write_String
 11054 ;; This function uses a non-reentrant model
 11055 ;;
 11056                           
 11057                           	psect	text45
 11058   004FA6                     __ptext45:
 11059                           	callstack 0
 11060   004FA6                     i2_UART1_Write_Char:
 11061                           	callstack 20
 11062                           
 11063                           ;incstack = 0
 11064                           ;i2UART1_Write_Char@data stored from wreg
 11065   004FA6  6E01               	movwf	i2UART1_Write_Char@data^0,c
 11066   004FA8                     i2l116:
 11067   004FA8  A89E               	btfss	3998,4,c	;volatile
 11068   004FAA  EFD9  F027         	goto	i2u505_41
 11069   004FAE  EFDB  F027         	goto	i2u505_40
 11070   004FB2                     i2u505_41:
 11071   004FB2  EFD4  F027         	goto	i2l116
 11072   004FB6                     i2u505_40:
 11073   004FB6                     
 11074                           ;main.c: 214:     TXREG1 = data;
 11075   004FB6  C001  FFAD         	movff	i2UART1_Write_Char@data,4013	;volatile
 11076   004FBA  0012               	return		;funcret
 11077   004FBC                     __end_ofi2_UART1_Write_Char:
 11078                           	callstack 0
 11079                           
 11080 ;; *************** function i2_SettingsLCD *****************
 11081 ;; Defined at:
 11082 ;;		line 191 in file "main.c"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;  word            1    wreg     unsigned char 
 11085 ;; Auto vars:     Size  Location     Type
 11086 ;;  word            1    1[COMRAM] unsigned char 
 11087 ;; Return value:  Size  Location     Type
 11088 ;;                  1    wreg      void 
 11089 ;; Registers used:
 11090 ;;		wreg, status,2, status,0, cstack
 11091 ;; Tracked objects:
 11092 ;;		On entry : 0/0
 11093 ;;		On exit  : 0/0
 11094 ;;		Unchanged: 0/0
 11095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11099 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11100 ;;Total ram usage:        1 bytes
 11101 ;; Hardware stack levels used: 1
 11102 ;; Hardware stack levels required when called: 1
 11103 ;; This function calls:
 11104 ;;		i2_LCD
 11105 ;; This function is called by:
 11106 ;;		_RXTX
 11107 ;; This function uses a non-reentrant model
 11108 ;;
 11109                           
 11110                           	psect	text46
 11111   004FBC                     __ptext46:
 11112                           	callstack 0
 11113   004FBC                     i2_SettingsLCD:
 11114                           	callstack 20
 11115                           
 11116                           ;incstack = 0
 11117                           ;i2SettingsLCD@word stored from wreg
 11118   004FBC  6E02               	movwf	i2SettingsLCD@word^0,c
 11119   004FBE                     
 11120                           ;main.c: 192:     LATE1 = 0;
 11121   004FBE  928D               	bcf	3981,1,c	;volatile
 11122   004FC0                     
 11123                           ;main.c: 193:     LCD(word >> 4);
 11124   004FC0  3802               	swapf	i2SettingsLCD@word^0,w,c
 11125   004FC2  0B0F               	andlw	15
 11126   004FC4  EC8E  F027         	call	i2_LCD
 11127                           
 11128                           ;main.c: 194:     LCD(word & 0x0F);
 11129   004FC8  5002               	movf	i2SettingsLCD@word^0,w,c
 11130   004FCA  0B0F               	andlw	15
 11131   004FCC  EC8E  F027         	call	i2_LCD
 11132   004FD0  0012               	return		;funcret
 11133   004FD2                     __end_ofi2_SettingsLCD:
 11134                           	callstack 0
 11135                           
 11136 ;; *************** function _WriteLCD *****************
 11137 ;; Defined at:
 11138 ;;		line 197 in file "main.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;  word            1    wreg     unsigned char 
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;  word            1    1[COMRAM] unsigned char 
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg, status,2, status,0, cstack
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;Total ram usage:        1 bytes
 11157 ;; Hardware stack levels used: 1
 11158 ;; Hardware stack levels required when called: 1
 11159 ;; This function calls:
 11160 ;;		i2_LCD
 11161 ;; This function is called by:
 11162 ;;		_RXTX
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           	psect	text47
 11167   004FD2                     __ptext47:
 11168                           	callstack 0
 11169   004FD2                     _WriteLCD:
 11170                           	callstack 20
 11171                           
 11172                           ;incstack = 0
 11173                           ;WriteLCD@word stored from wreg
 11174   004FD2  6E02               	movwf	WriteLCD@word^0,c
 11175   004FD4                     
 11176                           ;main.c: 198:     LATE1 = 1;
 11177   004FD4  828D               	bsf	3981,1,c	;volatile
 11178   004FD6                     
 11179                           ;main.c: 199:     LCD(word >> 4);
 11180   004FD6  3802               	swapf	WriteLCD@word^0,w,c
 11181   004FD8  0B0F               	andlw	15
 11182   004FDA  EC8E  F027         	call	i2_LCD
 11183                           
 11184                           ;main.c: 200:     LCD(word & 0x0F);
 11185   004FDE  5002               	movf	WriteLCD@word^0,w,c
 11186   004FE0  0B0F               	andlw	15
 11187   004FE2  EC8E  F027         	call	i2_LCD
 11188   004FE6  0012               	return		;funcret
 11189   004FE8                     __end_of_WriteLCD:
 11190                           	callstack 0
 11191                           
 11192 ;; *************** function i2_LCD *****************
 11193 ;; Defined at:
 11194 ;;		line 203 in file "main.c"
 11195 ;; Parameters:    Size  Location     Type
 11196 ;;  data            1    wreg     unsigned char 
 11197 ;; Auto vars:     Size  Location     Type
 11198 ;;  data            1    0[COMRAM] unsigned char 
 11199 ;; Return value:  Size  Location     Type
 11200 ;;                  1    wreg      void 
 11201 ;; Registers used:
 11202 ;;		wreg, status,2, cstack
 11203 ;; Tracked objects:
 11204 ;;		On entry : 0/0
 11205 ;;		On exit  : 0/0
 11206 ;;		Unchanged: 0/0
 11207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11212 ;;Total ram usage:        1 bytes
 11213 ;; Hardware stack levels used: 1
 11214 ;; This function calls:
 11215 ;;		Nothing
 11216 ;; This function is called by:
 11217 ;;		_WriteLCD
 11218 ;;		i2_SettingsLCD
 11219 ;; This function uses a non-reentrant model
 11220 ;;
 11221                           
 11222                           	psect	text48
 11223   004F1C                     __ptext48:
 11224                           	callstack 0
 11225   004F1C                     i2_LCD:
 11226                           	callstack 20
 11227                           
 11228                           ;incstack = 0
 11229                           ;i2LCD@data stored from wreg
 11230   004F1C  6E01               	movwf	i2LCD@data^0,c
 11231   004F1E                     
 11232                           ;main.c: 204:     LATE0 = 1;
 11233   004F1E  808D               	bsf	3981,0,c	;volatile
 11234   004F20                     
 11235                           ;main.c: 205:     _delay((unsigned long)((10)*(16000000/4000000.0)));
 11236   004F20  0E0D               	movlw	13
 11237   004F22                     i2u920_47:
 11238   004F22  2EE8               	decfsz	wreg,f,c
 11239   004F24  D7FE               	bra	i2u920_47
 11240   004F26  F000               	nop	
 11241   004F28                     
 11242                           ;main.c: 206:     LATD = data;
 11243   004F28  C001  FF8C         	movff	i2LCD@data,3980	;volatile
 11244   004F2C                     
 11245                           ;main.c: 207:     _delay((unsigned long)((10)*(16000000/4000000.0)));
 11246   004F2C  0E0D               	movlw	13
 11247   004F2E                     i2u921_47:
 11248   004F2E  2EE8               	decfsz	wreg,f,c
 11249   004F30  D7FE               	bra	i2u921_47
 11250   004F32  F000               	nop	
 11251   004F34                     
 11252                           ;main.c: 208:     LATE0 = 0;
 11253   004F34  908D               	bcf	3981,0,c	;volatile
 11254   004F36                     
 11255                           ;main.c: 209:     _delay((unsigned long)((10)*(16000000/4000000.0)));
 11256   004F36  0E0D               	movlw	13
 11257   004F38                     i2u922_47:
 11258   004F38  2EE8               	decfsz	wreg,f,c
 11259   004F3A  D7FE               	bra	i2u922_47
 11260   004F3C  F000               	nop	
 11261   004F3E  0012               	return		;funcret
 11262   004F40                     __end_ofi2_LCD:
 11263                           	callstack 0
 11264                           
 11265                           	psect	rparam
 11266   000000                     
 11267                           	psect	temp
 11268   000055                     btemp:
 11269                           	callstack 0
 11270   000055                     	ds	1
 11271   000000                     int$flags	set	btemp
 11272   000000                     wtemp8	set	btemp+1
 11273   000000                     ttemp5	set	btemp+1
 11274   000000                     ttemp6	set	btemp+4
 11275   000000                     ttemp7	set	btemp+8
 11276                           
 11277                           	psect	idloc
 11278                           
 11279                           ;Config register IDLOC0 @ 0x200000
 11280                           ;	unspecified, using default values
 11281   200000                     	org	2097152
 11282   200000  FF                 	db	255
 11283                           
 11284                           ;Config register IDLOC1 @ 0x200001
 11285                           ;	unspecified, using default values
 11286   200001                     	org	2097153
 11287   200001  FF                 	db	255
 11288                           
 11289                           ;Config register IDLOC2 @ 0x200002
 11290                           ;	unspecified, using default values
 11291   200002                     	org	2097154
 11292   200002  FF                 	db	255
 11293                           
 11294                           ;Config register IDLOC3 @ 0x200003
 11295                           ;	unspecified, using default values
 11296   200003                     	org	2097155
 11297   200003  FF                 	db	255
 11298                           
 11299                           ;Config register IDLOC4 @ 0x200004
 11300                           ;	unspecified, using default values
 11301   200004                     	org	2097156
 11302   200004  FF                 	db	255
 11303                           
 11304                           ;Config register IDLOC5 @ 0x200005
 11305                           ;	unspecified, using default values
 11306   200005                     	org	2097157
 11307   200005  FF                 	db	255
 11308                           
 11309                           ;Config register IDLOC6 @ 0x200006
 11310                           ;	unspecified, using default values
 11311   200006                     	org	2097158
 11312   200006  FF                 	db	255
 11313                           
 11314                           ;Config register IDLOC7 @ 0x200007
 11315                           ;	unspecified, using default values
 11316   200007                     	org	2097159
 11317   200007  FF                 	db	255
 11318                           
 11319                           	psect	config
 11320                           
 11321                           ; Padding undefined space
 11322   300000                     	org	3145728
 11323   300000  FF                 	db	255
 11324                           
 11325                           ;Config register CONFIG1H @ 0x300001
 11326                           ;	Oscillator Selection bits
 11327                           ;	FOSC = INTIO67, Internal oscillator block
 11328                           ;	4X PLL Enable
 11329                           ;	PLLCFG = 0x0, unprogrammed default
 11330                           ;	Primary clock enable bit
 11331                           ;	PRICLKEN = 0x1, unprogrammed default
 11332                           ;	Fail-Safe Clock Monitor Enable bit
 11333                           ;	FCMEN = 0x0, unprogrammed default
 11334                           ;	Internal/External Oscillator Switchover bit
 11335                           ;	IESO = 0x0, unprogrammed default
 11336   300001                     	org	3145729
 11337   300001  28                 	db	40
 11338                           
 11339                           ;Config register CONFIG2L @ 0x300002
 11340                           ;	unspecified, using default values
 11341                           ;	Power-up Timer Enable bit
 11342                           ;	PWRTEN = 0x1, unprogrammed default
 11343                           ;	Brown-out Reset Enable bits
 11344                           ;	BOREN = 0x3, unprogrammed default
 11345                           ;	Brown Out Reset Voltage bits
 11346                           ;	BORV = 0x3, unprogrammed default
 11347   300002                     	org	3145730
 11348   300002  1F                 	db	31
 11349                           
 11350                           ;Config register CONFIG2H @ 0x300003
 11351                           ;	Watchdog Timer Enable bits
 11352                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 11353                           ;	Watchdog Timer Postscale Select bits
 11354                           ;	WDTPS = 0xF, unprogrammed default
 11355   300003                     	org	3145731
 11356   300003  3C                 	db	60
 11357                           
 11358                           ; Padding undefined space
 11359   300004                     	org	3145732
 11360   300004  FF                 	db	255
 11361                           
 11362                           ;Config register CONFIG3H @ 0x300005
 11363                           ;	unspecified, using default values
 11364                           ;	CCP2 MUX bit
 11365                           ;	CCP2MX = 0x1, unprogrammed default
 11366                           ;	PORTB A/D Enable bit
 11367                           ;	PBADEN = 0x1, unprogrammed default
 11368                           ;	P3A/CCP3 Mux bit
 11369                           ;	CCP3MX = 0x1, unprogrammed default
 11370                           ;	HFINTOSC Fast Start-up
 11371                           ;	HFOFST = 0x1, unprogrammed default
 11372                           ;	Timer3 Clock input mux bit
 11373                           ;	T3CMX = 0x1, unprogrammed default
 11374                           ;	ECCP2 B output mux bit
 11375                           ;	P2BMX = 0x1, unprogrammed default
 11376                           ;	MCLR Pin Enable bit
 11377                           ;	MCLRE = 0x1, unprogrammed default
 11378   300005                     	org	3145733
 11379   300005  BF                 	db	191
 11380                           
 11381                           ;Config register CONFIG4L @ 0x300006
 11382                           ;	Stack Full/Underflow Reset Enable bit
 11383                           ;	STVREN = 0x1, unprogrammed default
 11384                           ;	Single-Supply ICSP Enable bit
 11385                           ;	LVP = OFF, Single-Supply ICSP disabled
 11386                           ;	Extended Instruction Set Enable bit
 11387                           ;	XINST = 0x0, unprogrammed default
 11388                           ;	Background Debug
 11389                           ;	DEBUG = 0x1, unprogrammed default
 11390   300006                     	org	3145734
 11391   300006  81                 	db	129
 11392                           
 11393                           ; Padding undefined space
 11394   300007                     	org	3145735
 11395   300007  FF                 	db	255
 11396                           
 11397                           ;Config register CONFIG5L @ 0x300008
 11398                           ;	unspecified, using default values
 11399                           ;	Code Protection Block 0
 11400                           ;	CP0 = 0x1, unprogrammed default
 11401                           ;	Code Protection Block 1
 11402                           ;	CP1 = 0x1, unprogrammed default
 11403                           ;	Code Protection Block 2
 11404                           ;	CP2 = 0x1, unprogrammed default
 11405                           ;	Code Protection Block 3
 11406                           ;	CP3 = 0x1, unprogrammed default
 11407   300008                     	org	3145736
 11408   300008  0F                 	db	15
 11409                           
 11410                           ;Config register CONFIG5H @ 0x300009
 11411                           ;	unspecified, using default values
 11412                           ;	Boot Block Code Protection bit
 11413                           ;	CPB = 0x1, unprogrammed default
 11414                           ;	Data EEPROM Code Protection bit
 11415                           ;	CPD = 0x1, unprogrammed default
 11416   300009                     	org	3145737
 11417   300009  C0                 	db	192
 11418                           
 11419                           ;Config register CONFIG6L @ 0x30000A
 11420                           ;	unspecified, using default values
 11421                           ;	Write Protection Block 0
 11422                           ;	WRT0 = 0x1, unprogrammed default
 11423                           ;	Write Protection Block 1
 11424                           ;	WRT1 = 0x1, unprogrammed default
 11425                           ;	Write Protection Block 2
 11426                           ;	WRT2 = 0x1, unprogrammed default
 11427                           ;	Write Protection Block 3
 11428                           ;	WRT3 = 0x1, unprogrammed default
 11429   30000A                     	org	3145738
 11430   30000A  0F                 	db	15
 11431                           
 11432                           ;Config register CONFIG6H @ 0x30000B
 11433                           ;	unspecified, using default values
 11434                           ;	Configuration Register Write Protection bit
 11435                           ;	WRTC = 0x1, unprogrammed default
 11436                           ;	Boot Block Write Protection bit
 11437                           ;	WRTB = 0x1, unprogrammed default
 11438                           ;	Data EEPROM Write Protection bit
 11439                           ;	WRTD = 0x1, unprogrammed default
 11440   30000B                     	org	3145739
 11441   30000B  E0                 	db	224
 11442                           
 11443                           ;Config register CONFIG7L @ 0x30000C
 11444                           ;	unspecified, using default values
 11445                           ;	Table Read Protection Block 0
 11446                           ;	EBTR0 = 0x1, unprogrammed default
 11447                           ;	Table Read Protection Block 1
 11448                           ;	EBTR1 = 0x1, unprogrammed default
 11449                           ;	Table Read Protection Block 2
 11450                           ;	EBTR2 = 0x1, unprogrammed default
 11451                           ;	Table Read Protection Block 3
 11452                           ;	EBTR3 = 0x1, unprogrammed default
 11453   30000C                     	org	3145740
 11454   30000C  0F                 	db	15
 11455                           
 11456                           ;Config register CONFIG7H @ 0x30000D
 11457                           ;	unspecified, using default values
 11458                           ;	Boot Block Table Read Protection bit
 11459                           ;	EBTRB = 0x1, unprogrammed default
 11460   30000D                     	org	3145741
 11461   30000D  40                 	db	64
 11462                           tosu	equ	0xFFF
 11463                           tosh	equ	0xFFE
 11464                           tosl	equ	0xFFD
 11465                           stkptr	equ	0xFFC
 11466                           pclatu	equ	0xFFB
 11467                           pclath	equ	0xFFA
 11468                           pcl	equ	0xFF9
 11469                           tblptru	equ	0xFF8
 11470                           tblptrh	equ	0xFF7
 11471                           tblptrl	equ	0xFF6
 11472                           tablat	equ	0xFF5
 11473                           prodh	equ	0xFF4
 11474                           prodl	equ	0xFF3
 11475                           indf0	equ	0xFEF
 11476                           postinc0	equ	0xFEE
 11477                           postdec0	equ	0xFED
 11478                           preinc0	equ	0xFEC
 11479                           plusw0	equ	0xFEB
 11480                           fsr0h	equ	0xFEA
 11481                           fsr0l	equ	0xFE9
 11482                           wreg	equ	0xFE8
 11483                           indf1	equ	0xFE7
 11484                           postinc1	equ	0xFE6
 11485                           postdec1	equ	0xFE5
 11486                           preinc1	equ	0xFE4
 11487                           plusw1	equ	0xFE3
 11488                           fsr1h	equ	0xFE2
 11489                           fsr1l	equ	0xFE1
 11490                           bsr	equ	0xFE0
 11491                           indf2	equ	0xFDF
 11492                           postinc2	equ	0xFDE
 11493                           postdec2	equ	0xFDD
 11494                           preinc2	equ	0xFDC
 11495                           plusw2	equ	0xFDB
 11496                           fsr2h	equ	0xFDA
 11497                           fsr2l	equ	0xFD9
 11498                           status	equ	0xFD8

Data Sizes:
    Strings     166
    Constant    0
    Data        0
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      84
    BANK0           160     89      90
    BANK1           256     93     190
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_26(CODE[1]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 20
		 -> main@bufferFinal(BANK1[20]), NULL(NULL[0]), main@bufferInicial(BANK1[20]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_4(CODE[2]), NULL(NULL[0]), 
		 -> STR_3(CODE[2]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 20
		 -> main@bufferFinal(BANK1[20]), NULL(NULL[0]), main@bufferInicial(BANK1[20]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 20
		 -> main@bufferFinal(BANK1[20]), NULL(NULL[0]), main@bufferInicial(BANK1[20]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@bufferFinal(BANK1[20]), NULL(NULL[0]), main@bufferInicial(BANK1[20]), 

    strtof@s	PTR const unsigned char  size(2) Largest target is 20
		 -> main@bufferFinal(BANK1[20]), NULL(NULL[0]), main@bufferInicial(BANK1[20]), 

    strtof@res	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_15(CODE[4]), STR_12(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_15(CODE[4]), STR_12(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_10(CODE[26]), STR_7(CODE[10]), STR_5(CODE[28]), STR_2(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_10(CODE[26]), STR_7(CODE[10]), STR_5(CODE[28]), STR_2(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 28
		 -> STR_10(CODE[26]), STR_7(CODE[10]), STR_5(CODE[28]), STR_2(CODE[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S762$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_10(CODE[26]), STR_7(CODE[10]), STR_5(CODE[28]), STR_2(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@lcdBuffer(BANK1[20]), main@buffer(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S677$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S677$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    UART1_Write_String@text	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_11(CODE[20]), STR_6(CODE[29]), main@lcdBuffer(BANK1[20]), main@buffer(BANK1[20]), 
		 -> STR_1(CODE[31]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 20
		 -> main@bufferFinal(BANK1[20]), NULL(NULL[0]), main@bufferInicial(BANK1[20]), 

    main@token	PTR unsigned char  size(2) Largest target is 20
		 -> main@bufferFinal(BANK1[20]), NULL(NULL[0]), main@bufferInicial(BANK1[20]), 


Critical Paths under _main in COMRAM

    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strtof->___flge
    _toupper->_islower
    _isxdigit->_isdigit
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _settings->_SettingsLCD
    _SettingsLCD->_LCD
    _UART1_Write_String->_UART1_Write_Char

Critical Paths under _RXTX in COMRAM

    _RXTX->i2_UART1_Write_String
    i2_UART1_Write_String->i2_UART1_Write_Char
    i2_SettingsLCD->i2_LCD
    _WriteLCD->i2_LCD

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _RXTX in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RXTX in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RXTX in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RXTX in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RXTX in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RXTX in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RXTX in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RXTX in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _RXTX in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _RXTX in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _RXTX in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _RXTX in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _RXTX in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _RXTX in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _RXTX in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _RXTX in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                93    93      0   56682
                                              0 BANK1     93    93      0
                        _SettingsLCD
                    _UART1_Read_Char
                   _UART1_Write_Char
                 _UART1_Write_String
                           _settings
                            _sprintf
                             _strtof
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _strtok                                               4     0      4    2056
                                             21 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     3      4     635
                                             14 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     3      4     635
                                             14 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               4     0      4     392
                                             10 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _strtof                                              25    21      4   21192
                                             47 COMRAM    10     6      4
                                              0 BANK0     15    15      0
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                             ___wmul
                           ___xxtofl
                            _isdigit
                            _isspace
                           _isxdigit
                               _nanf
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              4     2      2     565
                                             14 COMRAM     4     2      2
                            _islower
 ---------------------------------------------------------------------------------
 (3) _islower                                              4     2      2     191
                                             10 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _nanf                                                 8     4      4     124
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _isxdigit                                             8     6      2    1207
                                             14 COMRAM     7     5      2
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              4     2      2     731
                                             10 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _isspace                                              5     3      2     259
                                             10 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                             10 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     456
                                             10 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    16     12   31031
                                             63 BANK0     26    14     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   29993
                                             66 COMRAM     2     2      0
                                             57 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6   29505
                                             64 COMRAM     2     2      0
                                             44 BANK0     13     7      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4    1212
                                             16 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     772
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   26432
                                             55 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     497
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3073
                                             26 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             19 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                             10 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                             10 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             35 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             10 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                             10 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             35 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                             10 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     245
                                             10 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3773
                                             10 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1346
                                             35 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     950
                                             10 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3083
                                             10 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0      66
                        _SettingsLCD
 ---------------------------------------------------------------------------------
 (2) _SettingsLCD                                          1     1      0      66
                                             11 COMRAM     1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART1_Write_String                                   2     0      2     573
                                             11 COMRAM     2     0      2
                   _UART1_Write_Char
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_Char                                     1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART1_Read_Char                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _RXTX                                                 7     7      0     402
                                              3 COMRAM     7     7      0
                           _WriteLCD
                      i2_SettingsLCD
                 i2_UART1_Write_Char
               i2_UART1_Write_String
 ---------------------------------------------------------------------------------
 (10) i2_UART1_Write_String                                2     0      2      93
                                              1 COMRAM     2     0      2
                 i2_UART1_Write_Char
 ---------------------------------------------------------------------------------
 (11) i2_UART1_Write_Char                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_SettingsLCD                                       1     1      0      66
                                              1 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (10) _WriteLCD                                            1     1      0      66
                                              1 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (11) i2_LCD                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SettingsLCD
     _LCD
   _UART1_Read_Char
   _UART1_Write_Char
   _UART1_Write_String
     _UART1_Write_Char
   _settings
     _SettingsLCD
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul
   _strtof
     ___fldiv
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___lmul
     ___wmul
     ___xxtofl
     _isdigit
     _isspace
     _isxdigit
       _isdigit
     _nanf
     _toupper
       _islower
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr

 _RXTX (ROOT)
   _WriteLCD
     i2_LCD
   i2_SettingsLCD
     i2_LCD
   i2_UART1_Write_Char
   i2_UART1_Write_String
     i2_UART1_Write_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5D      BE       7       74.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      5A       5       56.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      54       1       89.4%
BITBIGSFRlhll       4E      0       0      43        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRlhhh       23      0       0      39        0.0%
BITBIGSFRhl         1E      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhhllh      C      0       0      40        0.0%
BITBIGSFRlhlh        6      0       0      42        0.0%
BITBIGSFRlhhlll      6      0       0      41        0.0%
BITBIGSFRll          2      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16C      28        0.0%
DATA                 0      0     16C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 31 19:55:40 2023

                ___fldiv@aexp 0023                  ___fldiv@bexp 0022                  ___fldiv@sign 001B  
                          l77 4B8A                            l94 35CE           ___wmul@multiplicand 000D  
                         l101 379A                           l113 4F1A                           l107 4F8E  
                         l116 4F92                           l125 4A6A                           l150 4EF6  
                         l119 4FA4                           l129 4F78                           l161 48C6  
                         l162 48D6                           l420 43DE                           l415 4398  
                         l424 4E4E                           l409 47F2                           l447 42DA  
                         l704 2F22                           l720 4D5A                           l705 2F10  
                         l732 3BA8                           l812 4110                           l805 4078  
                         l734 3A08                           l743 3A4E                           l680 2CEC  
                         l808 41D4                           l745 3AC6                           l737 39CC  
                         l746 3AB4                           l906 292C                           l922 4748  
                         l771 32C4                           l819 416C                           l764 30CE  
                         l828 4C7E                           l781 33F4                           l773 333C  
                         l774 332A                           l678 2D38                           l862 486C  
                         l918 4740                           l942 3E0E                           l695 2E52  
                         l687 3008                           l679 2D26                           l768 3432  
                         l873 2B48                           l858 4816                           l980 4A08  
                         l876 24E2                           l949 4C2E                           l966 4020  
                         l878 2328                           l959 44DC                           l969 3F64  
                         l977 49F8                           l986 4CCE                           _GIE 7F97  
                         l998 4682                           _LCD 4EF8                           _pad 47F4  
                         wreg 0FE8                  ___flmul@aexp 0018                  ___flmul@bexp 001D  
                ___flmul@sign 0017                  ___flmul@temp 0022                  ___flmul@prod 001E  
               i2_SettingsLCD 4FBC                          ?_LCD 0001                  ___fltol@exp1 0014  
                        l1006 4D9E                          l1015 4DDE                          l1009 4FE8  
                        l1124 19D8                          l1125 214E                          l1206 4D14  
                        l1143 1C9A                          l1224 4F60                          l1144 1C40  
                        l1072 14E8                          l1136 1BB2                          l1145 1CAC  
                        l1218 4B2C                          l1250 4B8C                          l1234 45B8  
                        l1252 4BDC                          l1237 45B0                          l1246 499A  
                        l1262 4934                          l1271 4E16                          l1247 49A2  
                        l1263 493C                          l4100 4F10                          l1268 4E0E  
                        l1277 4E7A                          l4102 4F12                          l1198 4EA6  
                        l4200 4FA0                          l5100 2C3C                          l5110 2C5A  
                        l5102 2C4A                          l5200 2E96                          l5120 2C6E  
                        l5112 2C5E                          l5104 2C4E                          l6000 3DA8  
                        l4320 4904                          l5210 2EC0                          l5202 2EA4  
                        l5130 2C82                          l5122 2C72                          l5114 2C62  
                        l5106 2C52                          l5050 4606                          l5042 45BA  
                        l6002 3DD4                          l4322 493E                          l4314 48D8  
                        l4092 4EFA                          l5300 38A2                          l5220 2EF2  
                        l5212 2ED0                          l5204 2EA6                          l5140 2CD4  
                        l5132 2C86                          l5124 2C76                          l5116 2C66  
                        l5108 2C56                          l5060 2B64                          l5052 463C  
                        l5044 45CC                          l6100 4C24                          l4180 4BA8  
                        l4324 494A                          l4316 48E4                          l4420 4516  
                        l4412 44DE                          l4094 4EFC                          l4350 4B42  
                        l5310 38DC                          l5302 38B2                          l5230 2F4C  
                        l5222 2F08                          l5206 2EB4                          l5214 2ED2  
                        l5150 2D18                          l5142 2CE4                          l5126 2C7A  
                        l5118 2C6A                          l5134 2C8A                          l5070 2B98  
                        l5062 2B66                          l5046 45DE                          l6006 3DE6  
                        l6110 4D0A                          l6030 4E7C                          l4326 4952  
                        l4318 48EC                          l4430 457E                          l4422 4532  
                        l4414 44F0                          l4096 4F04                          l4360 4B6C  
                        l4352 4B54                          l5400 3B9C                          l5312 38F2  
                        l5304 38C2                          l5240 2FC8                          l5232 2F86  
                        l5208 2EBC                          l5216 2EE0                          l5152 2D1A  
                        l5144 2CFA                          l5136 2C8E                          l5128 2C7E  
                        l5080 2BCA                          l5064 2B76                          l5072 2BA0  
                        l5056 2B4A                          l5048 45E8                          l6040 487E  
                        l6112 4D0E                          l6104 4CD0                          l6200 1216  
                        l4184 4BB4                          l4328 496A                          l4432 4596  
                        l4424 454A                          l4416 450A                          l4098 4F08  
                        l4194 4F7C                          l4370 4B7E                          l4362 4B72  
                        l4354 4B5A                          l4346 4B2E                          l5402 3B9E  
                        l5330 3946                          l5314 3902                          l5322 3922  
                        l5306 38C4                          l5410 300A                          l5250 2FE8  
                        l5242 2FCC                          l5226 2F32                          l5234 2F88  
                        l5218 2EE4                          l5170 2DA2                          l5162 2D6A  
                        l5154 2D24                          l5146 2D06                          l5138 2CB8  
                        l5090 2C00                          l5082 2BD0                          l5074 2BB0  
                        l5066 2B86                          l5058 2B56                          l6042 488C  
                        l6050 4034                          l6106 4CD4                          l6130 4AD2  
                        l6122 4ACE                          l6034 4E50                          l6202 1226  
                        l6210 126E                          l4186 4BD4                          l4178 4B8C  
                        l4434 45A0                          l4380 4F62                          l4196 4F7E  
                        l4372 4B82                          l4364 4B74                          l4356 4B60  
                        l4348 4B40                          l5340 3998                          l5332 3960  
                        l5324 3932                          l5316 390A                          l5308 38CC  
                        l5500 32E2                          l5420 3046                          l5412 3016  
                        l5252 2FF6                          l5244 2FDA                          l5236 2F98  
                        l5228 2F3E                          l5172 2DA6                          l5164 2D7A  
                        l5156 2D46                          l5180 2DC6                          l5148 2D0A  
                        l5092 2C10                          l5084 2BDE                          l5076 2BB6  
                        l5068 2B96                          l5260 4D68                          l6044 489C  
                        l6060 40B2                          l6052 4042                          l6108 4CE8  
                        l6132 4AF4                          l6116 4F40                          l6140 4DE0  
                        l6300 1672                          l6220 12F4                          l6212 1276  
                        l6204 1238                          l4436 45A8                          l4428 455E  
                        l4382 4F70                          l4198 4F92                          l4374 4B84  
                        l4366 4B76                          l4358 4B66                          l5350 39F4  
                        l5342 39A8                          l5334 3970                          l5326 3932  
                        l5318 390E                          l5510 334C                          l5502 32E6  
                        l5430 3078                          l5422 3056                          l5414 3024  
                        l5254 2FF8                          l5246 2FE0                          l5238 2FA8  
                        l5182 2DEC                          l5190 2E42                          l5174 2DB4  
                        l5166 2D88                          l5158 2D56                          l5094 2C12  
                        l5086 2BE0                          l5078 2BC8                          l5262 4D7A  
                        l6150 4C30                          l6046 48A6                          l6038 486E  
                        l6070 4106                          l6062 40BA                          l6054 4088  
                        l6134 4B22                          l6118 4F50                          l6310 16BC  
                        l6302 167A                          l6230 1358                          l6222 1306  
                        l6214 1278                          l6206 124A                          ?_pad 001B  
                        l4392 4A0A                          l4376 4B86                          l4368 4B7A  
                        l5360 3A34                          l5352 39F6                          l5344 39BC  
                        l5336 3980                          l5280 383C                          l5272 3810  
                        l5520 33AE                          l5512 3358                          l5504 32F4  
                        l5440 30B8                          l5432 3086                          l5424 305C  
                        l5416 3026                          l5248 2FE2                          l5192 2E68  
                        l5184 2E20                          l5176 2DB6                          l5168 2D96  
                        l5088 2BF0                          l5096 2C1A                          l5600 422A  
                        l5264 4D7E                          l6152 4C42                          l6080 417C  
                        l6072 4142                          l6064 40C6                          l6056 409E  
                        l6048 4024                          l6136 4B26                          l6128 4ACE  
                        l6144 4DE0                          l6400 1A26                          l6320 1736  
                        l6312 16E8                          l6304 1680                          l6240 13BA  
                        l6232 1360                          l6224 1322                          l6216 1294  
                        l6208 124E                          l4394 4A0E                          l4378 4B88  
                        l5370 3A70                          l5362 3A3E                          l5354 3A06  
                        l5346 39CA                          l5338 3990                          l5290 3876  
                        l5282 384C                          l5274 381C                          l5530 3416  
                        l5522 33C2                          l5514 3366                          l5506 3322  
                        l5450 3102                          l5442 30BE                          l5434 3088  
                        l5426 306C                          l5418 3036                          l5194 2E78  
                        l5186 2E22                          l5178 2DC0                          l5098 2C2A  
                        l5602 422C                          l5258 4D5C                          l5266 4ED2  
                        l6154 4C4A                          l6090 41C4                          l6082 4180  
                        l6074 414E                          l6066 40F8                          l6146 4E02  
                        l6410 1A98                          l6402 1A3E                          l6330 17E8  
                        l6322 1758                          l6306 169E                          l6250 1434  
                        l6234 1362                          l6242 13D0                          l6226 1334  
                        l6218 12C4                          l6162 10A8                          l4388 4F76  
                        l4396 4A34                          l5380 3AE2                          l5372 3A7E  
                        l5364 3A4C                          l5356 3A18                          l5348 39D6  
                        l5292 387C                          l5284 385C                          l5276 382A  
                        l5532 3418                          l5524 33DC                          l5516 3390  
                        l5460 3152                          l5452 310E                          l5444 30DE  
                        l5436 3098                          l5428 3072                          l5188 2E32  
                        l5540 4D16                          l5604 423C                          l5700 3FD8  
                        l5268 4EEE                          l6156 4C52                          l6084 41A4  
                        l6076 415C                          l6068 40FA                          l6500 1E42  
                        l6420 1B00                          l6412 1AA8                          l6340 1834  
                        l6332 1814                          l6324 1774                          l6316 16EE  
                        l6308 16B0                          l6252 1444                          l6236 137E  
                        l6228 133E                          l6244 13E4                          l6180 115C  
                        l6172 10DC                          l6164 10B2                          l4398 4A38  
                        l5390 3B4E                          l5382 3AF0                          l5374 3AAC  
                        l5358 3A2E                          l5366 3A5E                          l5294 3882  
                        l5286 385E                          l5278 382C                          l5550 4788  
                        l5526 33F8                          l5534 341E                          l5518 3394  
                        l5470 3194                          l5462 315E                          l5454 3118  
                        l5446 30EE                          l5438 30A8                          l5198 2E8C  
                        l5542 4D26                          l5630 42BA                          l5614 4266  
                        l5606 4240                          l5702 4000                          l5710 4C94  
                        l6094 4BDE                          l6158 4C6E                          l6086 41B4  
                        l6078 417A                          l6510 1EBE                          l6502 1E68  
                        l6430 1BDA                          l6422 1B10                          l6414 1AB6  
                        l6406 1A52                          l6350 1872                          l6342 1838  
                        l6326 17B2                          l6318 1720                          l6334 181C  
                        l6270 152C                          l6262 14EC                          l6254 1462  
                        l6246 1414                          l6238 139C                          l6190 1188  
                        l6182 1160                          l6174 1110                          l6166 10C4  
                        l5392 3B68                          l5384 3B1A                          l5368 3A6C  
                        l5296 3890                          l5288 3866                          l5552 47B6  
                        l5536 3422                          l5528 3408                          l5480 31F6  
                        l5472 31A0                          l5464 316A                          l5456 312E  
                        l5632 42CA                          l5624 428E                          l5616 4270  
                        l5608 424E                          l5704 4010                          l5712 4CA0  
                        l5640 480E                          l5800 2468                          l5720 2150  
                        l6096 4BEA                          l6088 41C2                          l6520 1F5C  
                        l6512 1ECA                          l6504 1E9A                          l6440 1C18  
                        l6424 1B2C                          l6416 1AD2                          l6408 1A84  
                        l6360 18B8                          l6352 1890                          l6344 1852  
                        l6328 17BA                          l6336 181E                          l6256 1480  
                        l6248 1416                          l6192 118A                          l6184 1168  
                        l6176 1144                          l6168 10D8                          l6600 3518  
                        l5394 3B84                          l5378 3AD6                          l5386 3B1E  
                        l5298 3892                          l5554 47C6                          l5546 474A  
                        l5570 4358                          l5562 42DC                          l5490 328C  
                        l5482 3202                          l5474 31B0                          l5466 3178  
                        l5458 313A                          l5626 429A                          l5618 427A  
                        l5650 43E0                          l5714 4CA4                          l5642 4822  
                        l5810 24F8                          l5802 2470                          l5730 219C  
                        l5722 2156                          l6098 4C08                          l6522 1F64  
                        l6514 1EFE                          l6450 1CA8                          l6442 1C2C  
                        l6434 1BE4                          l6426 1B50                          l6418 1AEA  
                        l6370 1904                          l6362 18EA                          l6354 1896  
                        l6338 182C                          l6290 15DC                          l6282 1578  
                        l6274 154E                          l6266 14F0                          l6258 14B8  
                        l6194 11A6                          l6178 1148                          l6610 3596  
                        l6602 3526                          l5396 3B88                          l5388 3B38  
                        l5556 47EA                          l5548 4778                          l5580 43DC  
                        l5572 4366                          l5564 430A                          l5492 32AA  
                        l5484 321E                          l5476 31CA                          l5468 3184  
                        l5628 42AA                          l5652 4400                          l5716 4CB0  
                        l5708 4C80                          l5644 4836                          l5636 47F4  
                        l5900 2988                          l5820 252E                          l5812 2504  
                        l5740 21DA                          l5732 21A6                          l5724 2166  
                        l6540 1FFE                          l6532 1FCC                          l6524 1F76  
                        l6516 1F08                          l6508 1EAE                          l6460 1D0E  
                        l6444 1C3A                          l6452 1CB4                          l6428 1BC0  
                        l6380 1980                          l6372 1922                          l6364 18F2  
                        l6356 18B4                          l6348 1870                          l6292 15F2  
                        l6284 15A4                          l6276 156C                          l6268 150E  
                        l6196 11D6                          l6188 1180                          l6620 3636  
                        l6612 35AA                          l6604 3542                          l5398 3B96  
                        l5558 47F0                          l5574 4378                          l5566 431A  
                        l5494 32B4                          l5486 3248                          l5478 31DA  
                        l5654 443E                          l5662 447E                          l5718 4CB4  
                        l5646 483A                          l5638 4802                          l5910 29BC  
                        l5902 298E                          l5830 2576                          l5822 253C  
                        l5814 250E                          l5806 24B0                          l5750 2222  
                        l5742 21E2                          l5734 21AE                          l5726 2174  
                        l6550 2092                          l6542 2032                          l6526 1FA8  
                        l6518 1F28                          l6470 1D50                          l6462 1D18  
                        l6454 1CBC                          l6446 1C44                          l6438 1C16  
                        l6374 192E                          l6366 18FA                          l6294 1614  
                        l6278 156E                          l6198 1206                          l6630 3694  
                        l6622 3642                          l6614 35EE                          l6606 3556  
                        l5576 4386                          l5568 4348                          l5496 32C2  
                        l5488 327E                          l5584 4E18                          l5592 41D6  
                        l5664 4490                          l5656 4466                          l5680 3E10  
                        l5648 4858                          l5672 4DA0                          l5920 2A72  
                        l5912 2A14                          l5904 29A0                          l5840 268A  
                        l5832 2586                          l5824 2554                          l5816 2516  
                        l5808 24EA                          l5752 2228                          l5736 21BE  
                        l5744 21E6                          l5728 2178                          l6560 20FC  
                        l6552 20A4                          l6544 203C                          l6528 1FB8  
                        l6536 1FE0                          l6472 1D5A                          l6480 1D92  
                        l6464 1D32                          l6456 1CD6                          l6448 1C78  
                        l6392 19E6                          l6376 193E                          l6384 1982  
                        l6368 1902                          l6296 1630                          l6288 15AA  
                        l6640 36D2                          l6632 369C                          l6624 3678  
                        l6616 3624                          l6608 357A                          l5578 43D6  
                        l5498 32D4                          l5586 4E2E                          l5594 41EC  
                        l5658 4472                          l5682 3E30                          l5674 4DB0  
                        l5930 2AE2                          l5922 2A8E                          l5914 2A48  
                        l5906 29B2                          l5850 272A                          l5834 259A  
                        l5842 2690                          l5826 2566                          l5818 251C  
                        l5770 22B4                          l5754 2230                          l5746 220C  
                        l5762 2272                          l5738 21CE                          l6562 210C  
                        l6554 20D6                          l6546 2056                          l6490 1E02  
                        l6482 1DC0                          l6474 1D8C                          l6458 1CF0  
                        l6394 19EE                          l6386 19B4                          l6378 195A  
                        l6298 166E                          l6650 3746                          l6642 36E4  
                        l6634 36AC                          l6626 3684                          l6618 362A  
                        l6570 3434                          l5588 4E3E                          l5668 44D4  
                        l5692 3F18                          l5684 3E86                          l5676 49A4  
                        l5932 2AFA                          l5924 2A96                          l5916 2A50  
                        l5908 29B6                          l5860 2806                          l5852 275C  
                        l5844 26AE                          l5836 25FE                          l5828 256E  
                        l5772 22BC                          l5764 2298                          l5780 22D8  
                        l5756 2248                          l5748 221E                          l6564 211A  
                        l6548 208A                          l6484 1DD0                          l6476 1D90  
                        l6468 1D36                          l6492 1E0A                          l6388 19C4  
                        l6396 19F6                          l6556 20E0                          l6660 37F6  
                        l6652 3762                          l6644 36F2                          l6636 36BE  
                        l6628 368A                          l6580 3476                          l6572 343C  
                        l5598 4200                          l5694 3F54                          l5686 3E9A  
                        l5678 49C2                          l5934 2B0A                          l5926 2AA4  
                        l5918 2A54                          l5870 2868                          l5862 280C  
                        l5854 276C                          l5846 26E2                          l5838 2656  
                        l5790 2372                          l5782 22F2                          l5766 22AA  
                        l5758 2252                          l5950 470A                          l5942 4684  
                        l6566 213E                          l6558 20F4                          l6494 1E12  
                        l6486 1DEE                          l6398 1A08                          l6662 37FC  
                        l6654 3776                          l6646 370E                          l6638 36CE  
                        l6590 34D0                          l6582 34AC                          l6574 3444  
                        l5688 3EA8                          l5696 3F88                          l5936 2B20  
                        l5928 2AD4                          l5880 2902                          l5872 2870  
                        l5864 2840                          l5856 277C                          l5848 2714  
                        l5792 23B0                          l5768 22AE                          l5952 4718  
                        l5944 468C                          l5960 3BE8                          l6496 1E24  
                        l6488 1DF4                          l6656 37BA                          l6648 3722  
                        l6592 34E0                          l6584 34B8                          l6576 3458  
                        l5698 3FC4                          l5938 2B28                          l5890 2960  
                        l5882 2922                          l5874 2876                          l5866 2854  
                        l5858 27B0                          l5794 23E2                          l5786 2338  
                        l5946 46B0                          l6754 3C8A                          l5970 3C4A  
                        l5962 3BEC                          l5954 3BAA                          l6498 1E32  
                        l6658 37C0                          l6594 34F2                          l6586 34BE  
                        l6578 346A                          l5892 2966                          l5884 293E  
                        l5876 287E                          l5868 2858                          l5796 2420  
                        l5788 233E                          l5948 46EA                          l6756 3D44  
                        l5972 3C5C                          l5980 3C74                          l5964 3C10  
                        l5956 3BCE                          l6596 3502                          l6588 34C8  
                        l5894 296E                          l5886 294C                          l5878 288A  
                        l5798 2434                          l6758 3DC6                          l5990 3D30  
                        l5974 3C64                          l5982 3CA8                          l5966 3C1E  
                        l5958 3BDC                          l6598 3506                          l5896 297E  
                        l5888 295C                          l5992 3D5A                          l5984 3CC8  
                        l5976 3C6C                          l5968 3C3A                          l5898 2982  
                        l5994 3D7A                          l5986 3CFC                          STR_1 1001  
                        STR_2 104F                          STR_3 10A5                          STR_4 10A5  
                        STR_5 103D                          STR_6 1020                          STR_7 104F  
                        STR_8 10A5                          STR_9 10A5                          _LATD 0F8C  
                        _LATE 0F8D                          u5010 4904                          u5011 4900  
                        u5020 4934                          u5100 44F0                          u5021 4930  
                        u5101 44EC                          u5030 496A                          u5110 450A  
                        u5031 4966                          u5111 4506                          u5040 499A  
                        u5120 454A                          u5041 4996                          u5121 4546  
                        u5130 4596                          u5131 4592                          u5060 4F70  
                        u5061 4F6C                          u5070 4A30                          u5080 4A5A  
                        u7000 3098                          u7001 3094                          u5090 4A6A  
                        u7010 30A8                          u5091 4A66                          u7011 30A4  
                        _PEIE 7F96                          u7100 334C                          u7020 30DE  
                        u6300 45DE                          u5077 4A26                          u7101 3348  
                        u7021 30DA                          u6301 45DA                          u7110 3366  
                        u7030 30EE                          u6310 4606                          u5087 4A50  
                        u7111 3362                          u7031 30EA                          u6311 4602  
                        u7200 4366                          u7120 33AE                          u7040 3268  
                        u6400 2C3C                          u6320 463C                          u8000 413E  
                        u7201 4362                          u7121 33AA                          u6401 2C38  
                        u6321 4638                          u8001 413A                          u7210 4386  
                        u7130 33DC                          u7050 32C2                          u6410 2C4A  
                        u6330 2B64                          u8010 415C                          u7211 4382  
                        u7131 33D8                          u7051 32BE                          u6411 2C46  
                        u6331 2B60                          u8011 4158                          _RCIE 7CED  
                        u4820 4FA0                          u7220 43D6                          u7140 3416  
                        u7060 32E2                          u6500 2D88                          u6420 2CB8  
                        u6340 2B76                          u7300 42BA                          u8020 416C  
                        u8100 4B22                          _RCIF 7CF5                          u4821 4F9C  
                        u7221 43D2                          u7141 3412                          u7061 32DE  
                        u7045 325E                          u6501 2D84                          u6421 2CB4  
                        u6341 2B72                          u7301 42B6                          u8021 4168  
                        u8101 4B1E                          u7150 4778                          u7070 32F4  
                        u7230 4E2E                          u6510 2D96                          u6430 2CD0  
                        u6350 2B86                          u7310 4802                          u8030 417A  
                        u8110 4E02                          u7151 4774                          u7071 32F0  
                        u7231 4E2A                          u6511 2D92                          u6431 2CCA  
                        u6351 2B82                          u7311 47FE                          u8031 4176  
                        u8111 4DFE                          u7160 47B6                          u7080 3322  
                        u6600 2EE0                          u6520 2DB4                          u6440 2CD2  
                        u6360 2BC8                          u7240 41EC                          u7320 4858  
                        u7400 4DDE                          u8040 41B4                          u9000 2052  
                        u8200 11D6                          u8120 10C4                          u7161 47B2  
                        u7081 331E                          u6601 2EDC                          u6521 2DB0  
                        u6361 2BC4                          u7241 41E8                          u7321 4854  
                        u7401 4DDA                          u8041 41B0                          u9001 204E  
                        u8201 11D2                          u8121 10C0                          u7170 47EA  
                        u7090 3338                          u6610 2EF2                          u6530 2DEC  
                        u6450 2CFA                          u6370 2BDE                          u7250 4220  
                        u7330 4420                          u7410 49C2                          u6290 45CC  
                        u8050 41C2                          u9010 20A4                          u8210 1206  
                        u8130 10F8                          u7171 47E6                          u7091 3334  
                        u6611 2EEE                          u6531 2DE8                          u6451 2CF6  
                        u6371 2BDA                          u7411 49BE                          u6291 45C8  
                        u8051 41BE                          u9011 20A0                          u8211 1202  
                        u8131 10F2                          u7180 430A                          u6700 2FDA  
                        u6620 2F08                          u6540 2E32                          u6460 2D18  
                        u6380 2BF0                          u7260 424E                          u7340 443E  
                        u7500 3FC4                          u7420 3E58                          u8060 4C24  
                        u9020 20D6                          u8300 1358                          u8220 1216  
                        u8140 10FA                          u4780 4BA8                          u9100 3556  
                        u7181 4306                          u6701 2FD6                          u6621 2F04  
                        u6541 2E2E                          u6461 2D14                          u6381 2BEC  
                        u7261 424A                          u7341 443A                          u7501 3FC0  
                        u8061 4C20                          u9021 20D2                          u8301 1354  
                        u8221 1212                          u4781 4BA4                          u9101 3552  
                        u7190 4348                          u6710 2FF6                          u6630 2F1E  
                        u6550 2E68                          u6470 2D38                          u6390 2C00  
                        u7270 4262                          u7350 4466                          u7510 4000  
                        u7430 3E86                          u8070 4CE8                          u9030 20F4  
                        u8310 137E                          u8230 1238                          u8150 1110  
                        u4790 4BD4                          u9110 35AA                          u7191 4344  
                        u6711 2FF2                          u6631 2F1A                          u6551 2E64  
                        u6471 2D34                          u6391 2BFC                          u7271 425E  
                        u7255 4216                          u7351 4462                          u7335 4416  
                        u7511 3FFC                          u7431 3E82                          u8071 4CE4  
                        u9031 20F0                          u8311 137A                          u8231 1234  
                        u8151 110C                          u4791 4BD0                          u9111 35A6  
                        u6800 3932                          u6640 2F32                          u6560 2E78  
                        u6480 2D46                          u7280 428A                          u7360 4490  
                        u7440 3EA8                          u7520 4CCE                          u6720 4D9E  
                        u7600 2324                          u8080 4D0A                          u9040 211A  
                        u8400 150E                          u8320 139C                          u8240 124A  
                        u8160 1144                          u9120 36AC                          u6801 392E  
                        u6641 2F2E                          u6561 2E74                          u6481 2D42  
                        u7281 4286                          u7361 448C                          u7441 3EA4  
                        u7425 3E4E                          u7521 4CCA                          u6721 4D9A  
                        u7601 2320                          u8081 4D06                          u9041 2116  
                        u8401 150A                          u8321 1398                          u8241 1246  
                        u8161 1140                          u9121 36A8                          u6810 39A8  
                        u6730 382A                          u6650 2F4C                          u6570 2EA4  
                        u6490 2D56                          u7290 42AA                          u7610 23B0  
                        u7530 2174                          u8090 4AF4                          u8410 152C  
                        u8330 13BA                          u8250 1294                          u8170 115C  
                        u9130 36BE                          u9050 3458                          u6811 39A4  
                        u6731 3826                          u6651 2F48                          u6571 2EA0  
                        u6491 2D52                          u7291 42A6                          u7611 23AC  
                        u7531 2170                          u8091 4AF0                          u8411 1528  
                        u8331 13B6                          u8251 1290                          u8171 1158  
                        u9131 36BA                          u9051 3454                          u6900 3AC2  
                        u6820 39CA                          u6740 383C                          u6660 2F86  
                        u6580 2EB4                          u7380 44CA                          u7460 3F14  
                        u7700 26AE                          u7620 23E2                          u7540 21BE  
                        u8500 16E8                          u8420 154A                          u8340 1434  
                        u8260 12C4                          u8180 117C                          u9140 36E4  
                        u9060 346A                          u6901 3ABE                          u6821 39C6  
                        u6741 3838                          u6661 2F82                          u6581 2EB0  
                        u7381 44C4                          u7461 3F10                          u7701 26AA  
                        u7621 23DE                          u7541 21BA                          u8501 16E4  
                        u8421 1546                          u8341 1430                          u8261 12C0  
                        u8181 1178                          u9141 36E0                          u9061 3466  
                        u6910 3AD6                          u6830 39F4                          u6750 384C  
                        u6670 2F98                          u6590 2ED0                          u7390 44CC  
                        u7470 3F38                          u7710 2714                          u7630 2420  
                        u7550 21CE                          u8510 1720                          u8430 156C  
                        u8350 1444                          u8270 12F4                          u8190 11A6  
                        u9150 3722                          u9070 34E0                          u6911 3AD2  
                        u6831 39F0                          u6751 3848                          u6671 2F94  
                        u6591 2ECC                          u7375 44A2                          u7455 3EBC  
                        u7711 2710                          u7631 241C                          u7551 21CA  
                        u8511 171C                          u8431 1568                          u8351 1440  
                        u8271 12F0                          u8191 11A2                          u9151 371E  
                        u9071 34DC                          u6920 3AF0                          u6840 3A18  
                        u6760 3890                          u6680 2FA8                          u7480 3F54  
                        u7456 3EC6                          u7800 2A72                          u7720 275C  
                        u7640 24AC                          u7560 220C                          u8600 18B4  
                        u8520 1774                          u8440 15A4                          u8360 1462  
                        u8280 1306                          u9160 3776                          u9080 34F2  
                        u6921 3AEC                          u6841 3A14                          u6761 388C  
                        u6681 2FA4                          u7481 3F50                          u7457 3ED6  
                        u7801 2A6E                          u7721 2758                          u7641 24A8  
                        u7561 2208                          u8601 18B0                          u8521 1770  
                        u8441 15A0                          u8361 145E                          u8281 1302  
                        u9161 3772                          u9081 34EE                          u6930 3B38  
                        u6850 3A2E                          u6770 38A2                          u6690 2FC8  
                        u7490 3FA8                          u7810 2A8E                          u7730 276C  
                        u7650 24E2                          u7570 221E                          u8610 18EA  
                        u8530 179C                          u8450 15DC                          u8370 1480  
                        u8290 1334                          u9090 3518                          u6931 3B34  
                        u6851 3A2A                          u6771 389E                          u6691 2FC4  
                        u7475 3F2E                          u7811 2A8A                          u7731 2768  
                        u7651 24DE                          u7571 221A                          u8611 18E6  
                        u8451 15D8                          u8371 147C                          u8291 1330  
                        u9091 3514                          u6940 3B68                          u6860 3A4C  
                        u6780 38B2                          u7820 2AF4                          u7740 2806  
                        u7660 24F8                          u7580 2298                          u7900 4EA0  
                        u8700 1AB6                          u8620 1922                          u8540 17E8  
                        u8460 1630                          u8380 14B8                          u6941 3B64  
                        u6861 3A48                          u6781 38AE                          u7821 2AEE  
                        u7741 2802                          u7661 24F4                          u7581 2294  
                        u7901 4E9A                          u8701 1AB2                          u8621 191E  
                        u8541 17E4                          u8461 162C                          u8381 14B4  
                        u6950 3B96                          u6870 3A6C                          u6790 38F2  
                        u7830 2AF6                          u7750 2854                          u7670 252E  
                        u7590 22AA                          u7910 4EA2                          u8710 1AD2  
                        u8630 193E                          u8550 1814                          u8470 1658  
                        u8390 14E4                          u6951 3B92                          u6871 3A68  
                        u6791 38EE                          u7495 3F9E                          u7751 2850  
                        u7671 252A                          u7591 22A6                          u8711 1ACE  
                        u8631 193A                          u8551 1810                          u8535 1792  
                        u8391 14E0                          u6880 3A7E                          u6960 3024  
                        u7840 2B0A                          u7760 2902                          u7680 253C  
                        u7920 4E74                          u8800 1C3A                          u8720 1B00  
                        u8640 19B4                          u8560 182C                          u8480 169E  
                        u9177 4EFE                          u6881 3A7A                          u6961 3020  
                        u7841 2B06                          u7761 28FE                          u7681 2538  
                        u7921 4E6E                          u8801 1C36                          u8721 1AFC  
                        u8641 19B0                          u8561 1828                          u8481 169A  
                        u6890 3AAC                          u6970 3036                          u7770 293E  
                        u7690 2566                          u7850 46B0                          u7930 4E76  
                        u8810 1CA8                          u8730 1B2C                          u8650 19C4  
                        u8570 1852                          u8490 16B0                          u9187 4F0A  
                        u6891 3AA8                          u6971 3032                          u7771 293A  
                        u7691 2562                          u7851 46AC                          u8811 1CA4  
                        u8731 1B28                          u8651 19C0                          u8571 184E  
                        u8491 16AC                          u8475 164E                          u6980 3046  
                        u7780 294C                          u7860 4740                          u7940 488C  
                        u8900 1E02                          u8820 1CD6                          u8660 19E6  
                        u8580 186C                          u9197 4F14                          u6981 3042  
                        u7781 2948                          u7861 473C                          u7941 4888  
                        u8901 1DFE                          u8821 1CD2                          u8661 19E2  
                        u8581 1868                          u6990 3086                          u7790 29A0  
                        u7870 3BCE                          u7950 48C6                          u8910 1E24  
                        u8830 1CF0                          u8670 1A08                          u8590 1890  
                        u6991 3082                          u7791 299C                          u7871 3BCA  
                        u7951 48C2                          u8911 1E20                          u8831 1CEC  
                        u8671 1A04                          u8591 188C                          u7880 3C10  
                        u7960 4034                          u8920 1E32                          u8840 1D0E  
                        u8760 1BC0                          u8680 1A3E                          u7881 3C0C  
                        u7961 4030                          u8921 1E2E                          u8841 1D0A  
                        u8761 1BBC                          u8745 1B54                          u8681 1A3A  
                        u7890 3CC4                          u7970 4042                          u8930 1E9A  
                        u8850 1D32                          u8770 1BDA                          u8690 1A84  
                        u7891 3CC0                          u7971 403E                          u8931 1E96  
                        u8851 1D2E                          u8771 1BD6                          u8755 1B8E  
                        u8691 1A80                          u7980 409E                          u8940 1EBE  
                        u8860 1D50                          u8780 1C12                          u7981 409A  
                        u8941 1EBA                          u8861 1D4C                          u8781 1C0E  
                        u7990 40F4                          u8950 1F24                          u8870 1DC0  
                        u8790 1C2C                          u7991 40F0                          u8951 1F20  
                        u8871 1DBC                          u8791 1C28                          u8960 1F76  
                        u8880 1DD0                          u8961 1F72                          u8881 1DCC  
                        u8970 1FA8                          u8890 1DEE                          u8971 1FA4  
                        u8891 1DEA                          u8980 1FB8                          u8981 1FB4  
                        u8990 1FFA                          u8991 1FF6                          _RXTX 0008  
                        _dbuf 0111                          _labs 49A4                          _main 3434  
                        _nanf 4F40                          _mode 0110                          _prec 0053  
                        pad@i 0022                          pad@p 001F                          fsr1h 0FE2  
                        fsr2h 0FDA                          indf1 0FE7                          indf2 0FDF  
                        fsr1l 0FE1                          pad@w 0024                          fsr2l 0FD9  
                        btemp 0055                 ___fpclassifyf 43E0                          prodh 0FF4  
                        prodl 0FF3                          start 00EC               ___fldiv@new_exp 001C  
                ___param_bank 0000                         ??_LCD 000B                         ??_pad 0021  
             _UART1_Read_Char 4F62                         ?_RXTX 0001                 ___fltol@sign1 0013  
                       ?_labs 000B               __end_of___fladd 300A                         ?_main 0001  
                       ?_nanf 000B               __end_of___fldiv 3BAA               __end_of___flneg 4E50  
                       STR_10 1059                         STR_11 1073                         STR_12 109D  
                       STR_23 10A1                         STR_15 10A1                         STR_24 1099  
                       STR_26 101F                         STR_18 1090                         STR_19 1087  
             __end_of___flmul 3434               __end_of___flsub 4D5C               __end_of___fltol 42DC  
                       _LATE0 7C68                         _LATE1 7C69                         _RC1IF 7CF5  
                       i2l110 4FE6                         i2l113 4F3E                         i2l107 4FD0  
                       i2l116 4FA8                         i2l125 4ACC                         i2l119 4FBA  
                       i2l139 00D0                         i2l147 00D0                         i2_LCD 4F1C  
                vfpfcnvrt@fmt 008E                         _TX1IF 7CF4                         _TRISD 0F95  
                       _TRISE 0F96           ___lmul@multiplicand 000F                ?i2_SettingsLCD 0001  
                       _flags 00B9           read_prec_or_width@c 0017                         _errno 004F  
         read_prec_or_width@n 0018                         _fputc 45BA                         _fputs 4D5C  
             __end_of_isdigit 4EA8                         labs@a 000B                         pad@fp 001B  
                       _width 0051                         _putch 4FE8                         nanf@s 000B  
                       nanf@u 000F               __end_of_islower 4E7C               __end_of_isspace 4D16  
                       tablat 0FF5                         ttemp5 0056                         ttemp6 0059  
                       ttemp7 005D                         status 0FD8                         wtemp8 0056  
             __end_of_sprintf 4C80                ?___fpclassifyf 000B               __end_of_strcspn 49A4  
             __end_of_toupper 4E18                  __end_of_RXTX 00EC               __initialization 4EA8  
                __end_of_labs 4A0A                  __end_of_main 3810                  __end_of_nanf 4F62  
                      ??_RXTX 0004                 main@lcdBuffer 0175                        ??_labs 000F  
                      ??_main 0045                        ??_nanf 000F                 __activetblptr 0002  
                      ?i2_LCD 0001    __end_of_read_prec_or_width 474A                        ?_fputc 000B  
                      ?_fputs 0014                        ?_putch 0001                        _ANSELC 0F3A  
                      _ANSELD 0F3B                        _ANSELE 0F3C              __end_of_WriteLCD 4FE8  
          _UART1_Write_String 4A0A                        i2l4330 4F1E                        i2l4340 4F36  
                      i2l4332 4F20                        i2l4334 4F28                        i2l4342 4FA8  
                      i2l4336 4F2C                        i2l4344 4FB6                        i2l4338 4F34  
                      i2l4850 4FD6                        i2l4852 4FBE                        i2l4860 4A96  
                      i2l4854 4FC0                        i2l4862 4A9A                        i2l4848 4FD4  
                      i2l4856 4A6C                        i2l4960 0030                        i2l4858 4A70  
                      i2l4970 007A                        i2l4962 0034                        i2l4980 00C6  
                      i2l4972 008C                        i2l4964 0046                        i2l4974 0098  
                      i2l4966 0058                        i2l4958 0022                        i2l4976 00A2  
                      i2l4968 0068                        i2l4978 00B4                        _RCREG1 0FAE  
                      _RCSTA1 0FAB                        _OSCCON 0FD3                        _SPBRG1 0FAF  
                      _TXREG1 0FAD              __end_of___xxtofl 41D6                        _TXSTA1 0FAC  
     __end_of_UART1_Read_Char 4F7A           ?_UART1_Write_String 000C                  vfprintf@cfmt 0043  
                      ___flge 42DC                        ___fleq 474A                        ___lmul 486E  
                   ??___fladd 0013                        ___wmul 4ED2                     ??___fldiv 0013  
                   ??___flneg 000F                     ??___flmul 0013                     ??___flsub 002C  
                   ??___fltol 000F                        _efgtoa 2150                        _finalX 0104  
                      _finalY 0100                        _floorf 3E10                        _memcpy 4C80  
        read_prec_or_width@ap 0013                        clear_0 4EAE                        clear_1 4EBE  
                      isa$std 0001                        pad@buf 001D                        _strchr 4B8C  
                      _strcpy 4DA0                        _strtof 10A8                        _strtok 44DE  
                      _strspn 48D8              __end_of_isxdigit 4B2E                        fputc@c 000B  
                      fputs@c 0018                        fputs@i 0019          ??_UART1_Write_String 000E  
                      fputs@s 0014                     ??_isdigit 000D               ??i2_SettingsLCD 0002  
             ___fpclassifyf@e 0013               ___fpclassifyf@u 0015               ___fpclassifyf@x 000B  
                   ??_islower 000D                  __mediumconst 0000                     ??_isspace 000D  
               ??_SettingsLCD 000C              __end_of_settings 4B8C                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8                        putch@c 0001  
            __end_of_vfprintf 4C30                     ??_sprintf 0045                     ??_strcspn 0013  
                   ??_toupper 0011                    ___flge@ff1 0024                    ___flge@ff2 0028  
             ??___fpclassifyf 000F                  ___xxtofl@arg 0015                  ___xxtofl@exp 0014  
                ___xxtofl@val 000B                    ___fleq@ff1 000B                    ___fleq@ff2 000F  
                  __accesstop 0060       __end_of__initialization 4EC4                  WriteLCD@word 0002  
                  ___flneg@f1 000B                 ___rparam_used 0001                    ___fltol@f1 000B  
               __end_ofi2_LCD 4F40                __pcstackCOMRAM 0001                 __end_of_fputc 4684  
               __end_of_fputs 4DA0                 __end_of_putch 4FEA              _UART1_Write_Char 4F90  
                     ??i2_LCD 0001                       ??_fputc 000F                       ??_fputs 0018  
                     ??_putch 000B                       LCD@data 000B                    __pbssBANK0 00B9  
                  __pbssBANK1 0100           __end_of_SettingsLCD 4F90              ?_UART1_Read_Char 0001  
                  _efgtoa$804 0066                       ?___flge 0024                       ?___fleq 000B  
                     ?___lmul 000B                       ?___wmul 000B                       ?_efgtoa 0038  
                     ?_floorf 0024                       ?_memcpy 000B                ___lmul@product 0013  
  __end_ofi2_UART1_Write_Char 4FBC                     ?_WriteLCD 0001                       ?_strchr 000B  
                     ?_strcpy 000B                       ?_strtof 0030                       ?_strtok 0016  
                     ?_strspn 000F                     ?___xxtofl 000B      i2UART1_Write_String@text 0002  
                     __Hparam 0000                     ?_isxdigit 000F                       __Lparam 0000  
                   ?_settings 0001                       ___fladd 2B4A                       ___fldiv 3810  
__end_ofi2_UART1_Write_String 4ACE                       ___flneg 4E18                       ___flmul 300A  
                     ___flsub 4D16                       ___fltol 41D6                     ?_vfprintf 0099  
                __psmallconst 1000                     i2LCD@data 0001                       __pcinit 4EA8  
                  ??_WriteLCD 0002                       __ramtop 1000                       __ptext0 3434  
                     __ptext1 44DE                       __ptext2 48D8                       __ptext3 493E  
                     __ptext4 4B8C                       __ptext5 10A8                       __ptext6 4DE0  
                     __ptext7 4E50                       __ptext8 4F40                       __ptext9 4ACE  
                     _isdigit 4E7C         read_prec_or_width@fmt 0011                    ??___xxtofl 000F  
                     _islower 4E50                       _isspace 4CD0                       efgtoa@c 003E  
                     efgtoa@d 006B                       efgtoa@e 006F                       efgtoa@f 003A  
                     efgtoa@g 0082                       efgtoa@h 0079                       efgtoa@i 0077  
                     efgtoa@l 007D                       efgtoa@m 006D                       efgtoa@n 0086  
                     efgtoa@p 0062                       efgtoa@t 0064                       efgtoa@u 0088  
                     efgtoa@w 0071                   _SettingsLCD 4F7A                       _sprintf 4C30  
                     _strcspn 493E                       _toupper 4DE0          end_of_initialization 4EC4  
                     floorf@e 0032                       floorf@m 002E                       floorf@u 0034  
                     floorf@x 0024                       memcpy@d 0012                       memcpy@n 000F  
                     memcpy@s 0014                       fputc@fp 000D                 __Lmediumconst 0000  
                     fputs@fp 0016            _read_prec_or_width 4684                    ??_isxdigit 0011  
           __end_of_vfpfcnvrt 3E10                    efgtoa@mode 0069                    efgtoa@sign 0081  
                     postdec2 0FDD           ?_read_prec_or_width 0011                    ??_settings 000D  
                     postinc0 0FEE                       postinc1 0FE6                       postinc2 0FDE  
            vfpfcnvrt@convarg 0092                    ??_vfprintf 0043        i2UART1_Write_Char@data 0001  
                     strchr@c 000D                       strchr@s 000B                       strcpy@d 0011  
                     strcpy@s 000F                       strtof@i 006E                       strtof@s 0030  
                     strspn@c 0011                       strspn@i 0014                       strtok@p 004D  
                     strtok@s 0016                       strspn@s 000F                   ___fladd@grs 001A  
               ___xxtofl@sign 0013                     _TRISCbits 0F94          ??_read_prec_or_width 0015  
                 ___fldiv@grs 001E                   ___fldiv@rem 0017                   ___flmul@grs 0019  
                  main@buffer 0161                    main@coordX 01B1                    main@coordY 01B5  
    __end_of_UART1_Write_Char 4FA6                __end_of___flge 43E0                __end_of___fleq 47F4  
              __end_of___lmul 48D8                   vfpfcnvrt@ap 0090                   vfpfcnvrt@cp 0097  
                 vfpfcnvrt@fp 008C                __end_of___wmul 4EF8                __end_of_efgtoa 2B4A  
              __end_of_floorf 4022                __end_of_memcpy 4CD0                    floorf@F526 0045  
              __end_of_strchr 4BDE                __end_of_strcpy 4DE0                __end_of_strtof 2150  
              __end_of_strtok 45BA                __end_of_strspn 493E           start_initialization 4EA8  
                 __end_of_LCD 4F1C         __end_ofi2_SettingsLCD 4FD2                   __end_of_pad 486E  
        i2_UART1_Write_String 4A6C              main@receivedChar 01BB         __end_of___fpclassifyf 44DE  
                 vfprintf@fmt 009B                      ??___flge 002C                      ??___fleq 0013  
               _isxdigit$1014 0015                      ??___lmul 0013                      ??___wmul 000F  
                    ??_efgtoa 003F                      ??_floorf 0028                      ??_memcpy 0011  
                    ??_strchr 000F                      ??_strcpy 000F                      ??_strtof 0034  
                    ??_strtok 001A                      ??_strspn 0013                     ___fladd@a 000F  
                   ___fladd@b 000B                     ___fldiv@a 000F                     ___fldiv@b 000B  
                   ___flmul@a 000F                     ___flmul@b 000B                   __pbssCOMRAM 0045  
                   ___flsub@a 0028                     ___flsub@b 0024                 __pcstackBANK0 0060  
               __pcstackBANK1 0161            i2_UART1_Write_Char 4FA6             main@bufferInicial 0189  
       ?i2_UART1_Write_String 0002             i2SettingsLCD@word 0002           ?i2_UART1_Write_Char 0001  
             main@bufferFinal 019D                     __pintcode 0008                      ?___fladd 000B  
                    ?___fldiv 000B                      ?___flneg 000B                      ?___flmul 000B  
                    ?___flsub 0024                      ?___fltol 000B          ??i2_UART1_Write_Char 0001  
                 __smallconst 1000                      ?_isdigit 000B                      ?_islower 000B  
                    ?_isspace 000B                  ?_SettingsLCD 0001                      ?_sprintf 009F  
                    ?_strcspn 000F                      ?_toupper 000F                ___wmul@product 000F  
                    _LATCbits 0F8B                      i2u505_40 4FB6                      i2u505_41 4FB2  
                    i2u622_40 0030                      i2u622_41 002C                      i2u607_40 4A92  
                    i2u623_40 0046                      i2u623_41 0042                      i2u607_47 4A88  
                    i2u608_40 4ABC                      i2u624_40 0058                      i2u624_41 0054  
                    i2u608_47 4AB2                      i2u609_40 4ACC                      i2u625_40 007A  
                    i2u609_41 4AC8                      i2u625_41 0076                      i2u626_40 008C  
                    i2u626_41 0088                      i2u627_40 00B4                      i2u627_41 00B0  
                    i2u628_40 00C6                      i2u628_41 00C2                      i2u920_47 4F22  
                    i2u921_47 4F2E                      i2u922_47 4F38                   strtof@digit 0064  
                 strtof@flags 0065                   strtof@expon 0066                     _vfpfcnvrt 3BAA  
           ___wmul@multiplier 000B                     main@index 01B9                     main@token 01BC  
                _isspace$1002 000F        ??i2_UART1_Write_String 0004                    vfpfcnvrt@c 0096  
           ___lmul@multiplier 000B              RXTX@receivedChar 000A             ?_UART1_Write_Char 0001  
                    __Hrparam 0000                     memcpy@tmp 0011                    vfprintf@ap 009D  
                    __Lrparam 0000                    vfprintf@fp 0099            ??_UART1_Write_Char 000B  
                  ?_vfpfcnvrt 008C                      _WriteLCD 4FD2            ___fpclassifyf@F465 0049  
                  sprintf@fmt 00A1                      ___xxtofl 4022             ??_UART1_Read_Char 000B  
                    __ptext10 4E7C                      __ptext11 4CD0                      __ptext20 4DA0  
                    __ptext12 4022                      __ptext21 47F4                      __ptext13 486E  
                    __ptext30 4D16                      __ptext22 4D5C                      __ptext14 4C30  
                    __ptext31 2B4A                      __ptext23 45BA                      __ptext15 4BDE  
                    __ptext40 4A0A                      __ptext32 4E18                      __ptext24 4FE8  
                    __ptext16 3BAA                      __ptext41 4F90                      __ptext33 300A  
                    __ptext25 4C80                      __ptext17 4684                      __ptext42 4F62  
                    __ptext34 42DC                      __ptext26 49A4                      __ptext18 4ED2  
                    __ptext35 474A                      __ptext27 3E10                      __ptext19 2150  
                    __ptext44 4A6C                      __ptext36 3810                      __ptext28 43E0  
                    __ptext45 4FA6                      __ptext37 4B2E                      __ptext29 41D6  
                    __ptext46 4FBC                      __ptext38 4F7A                      __ptext47 4FD2  
                    __ptext39 4EF8                      __ptext48 4F1C                     isxdigit@c 000F  
                  strcpy@dest 000B                      _initialX 010C                      _initialY 0108  
                    _isxdigit 4ACE                      efgtoa@fp 0038                      efgtoa@ne 0060  
                    efgtoa@pp 0068                      efgtoa@ou 0073                      isa$xinst 0000  
                  strtof@eexp 0068                      _settings 4B2E                    strtof@dpos 0061  
                    int$flags 0055                    strtof@xpos 0060                      _vfprintf 4BDE  
        UART1_Write_Char@data 000B    __end_of_UART1_Write_String 4A6C                      memcpy@d1 000B  
                    memcpy@s1 000D                      isdigit@c 000B                      intlevel2 0000  
                   sprintf@ap 00AB                      islower@c 000B                      isspace@c 000B  
                   strcpy@src 000D                     strtof@err 0062                     strtof@res 0032  
                 efgtoa@nmode 006A                     strtok@sep 0018                   ??_vfpfcnvrt 0041  
                    sprintf@f 00AD                      sprintf@s 009F                      strcspn@c 0011  
                    strcspn@i 0014                      strcspn@s 000F                      toupper@c 000F  
             SettingsLCD@word 000C                      strtof@_u 006A                 ___fladd@signs 0017  
                ___fladd@aexp 0018                  ___fladd@bexp 0019        UART1_Write_String@text 000C  
